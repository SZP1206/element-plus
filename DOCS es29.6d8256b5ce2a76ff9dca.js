(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{574:function(e,t,n){"use strict";n.r(t);var l=n(0);const o={class:"content element-doc"},a=Object(l.createStaticVNode)('<h2 id="input"><a class="header-anchor" href="#input">¶</a> Input</h2><p>Ingresa datos usando el ratón o teclado.</p><div class="warning"><p>Input es un componente controlado, <strong>siempre muestra el valor de enlace Vue</strong>.</p><p>Bajo circunstancias normales, el evento &quot;input&quot; debe ser manejado. Su handler debe actualizar el valor de enlace del componente (o usar <code>v-model</code>). De lo contrario, el valor del cuadro de entrada no cambiará.</p><p>No admite modificadores <code>v-model</code>.</p></div><h3 id="uso-basico"><a class="header-anchor" href="#uso-basico">¶</a> Uso básico</h3>',4),d=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input placeholder="Please input" v-model="input"></el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      input: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),c=Object(l.createVNode)("h3",{id:"disabled"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#disabled"},"¶"),Object(l.createTextVNode)(" Disabled")],-1),r=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Deshabilite el Input con el atributo "),Object(l.createVNode)("code",null,"disabled"),Object(l.createTextVNode)(".")])],-1),i=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input\n  placeholder="Please input"\n  v-model="input"\n  :disabled="true">\n</el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      input: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),u=Object(l.createVNode)("h3",{id:"limpiable"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#limpiable"},"¶"),Object(l.createTextVNode)(" Limpiable")],-1),s=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Marque que el input puede ser limpiable con el atributo "),Object(l.createVNode)("code",null,"clearable"),Object(l.createTextVNode)(".")])],-1),p=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input\n  placeholder="Please input"\n  v-model="input"\n  clearable>\n</el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      input: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),m=Object(l.createVNode)("h3",{id:"password-box"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#password-box"},"¶"),Object(l.createTextVNode)(" Password box")],-1),h=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Haga un input de contraseña conmutable con el atributo "),Object(l.createVNode)("code",null,"show-password"),Object(l.createTextVNode)(".")])],-1),b=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input placeholder="Please input password" v-model="input" show-password></el-input>\n\n<script>\n  export default {\n    data() {\n      return {\n        input: \'\'\n      }\n    }\n  }\n<\/script>\n')],-1),v=Object(l.createVNode)("h3",{id:"input-con-icono"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#input-con-icono"},"¶"),Object(l.createTextVNode)(" Input con icono")],-1),j=Object(l.createVNode)("p",null,"Añada un icono para indicar el tipo de Input.",-1),g=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Para añadir iconos en el Input, puede utilizar los atributos "),Object(l.createVNode)("code",null,"prefix-icon"),Object(l.createTextVNode)(" y "),Object(l.createVNode)("code",null,"suffix-icon"),Object(l.createTextVNode)(" . Además, los slots con nombre "),Object(l.createVNode)("code",null,"prefix"),Object(l.createTextVNode)(" y "),Object(l.createVNode)("code",null,"suffix"),Object(l.createTextVNode)(" también funcionan.")])],-1),V=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<div class="demo-input-suffix">\n  <span class="demo-input-label">Using attributes</span>\n  <el-input\n    placeholder="Pick a date"\n    suffix-icon="el-icon-date"\n    v-model="input1">\n  </el-input>\n  <el-input\n    placeholder="Type something"\n    prefix-icon="el-icon-search"\n    v-model="input2">\n  </el-input>\n</div>\n<div class="demo-input-suffix">\n  <span class="demo-input-label">Using slots</span>\n  <el-input\n    placeholder="Pick a date"\n    v-model="input3">\n    <i slot="suffix" class="el-input__icon el-icon-date"></i>\n  </el-input>\n  <el-input\n    placeholder="Type something"\n    v-model="input4">\n    <i slot="prefix" class="el-input__icon el-icon-search"></i>\n  </el-input>\n</div>\n\n<style>\n  .demo-input-label {\n    display: inline-block;\n    width: 130px;\n  }\n</style>\n\n<script>\nexport default {\n  data() {\n    return {\n      input1: \'\',\n      input2: \'\',\n      input3: \'\',\n      input4: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),O=Object(l.createVNode)("h3",{id:"textarea"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#textarea"},"¶"),Object(l.createTextVNode)(" Textarea")],-1),x=Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Redimensiona para introducir varias líneas de información de texto. Agregue el atributo "),Object(l.createVNode)("code",null,'type="textarea"'),Object(l.createTextVNode)(" para cambiar el "),Object(l.createVNode)("code",null,"input"),Object(l.createTextVNode)(" al tipo nativo "),Object(l.createVNode)("code",null,"textarea"),Object(l.createTextVNode)(".")],-1),f=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Controle la altura ajustando el prop "),Object(l.createVNode)("code",null,"rows"),Object(l.createTextVNode)(".")])],-1),N=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input\n  type="textarea"\n  :rows="2"\n  placeholder="Please input"\n  v-model="textarea">\n</el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      textarea: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),k=Object(l.createVNode)("h3",{id:"textarea-tamano-automatico"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#textarea-tamano-automatico"},"¶"),Object(l.createTextVNode)(" Textarea tamaño automático")],-1),w=Object(l.createVNode)("p",null,[Object(l.createTextVNode)("El ajuste del prop "),Object(l.createVNode)("code",null,"autosize"),Object(l.createTextVNode)(" en el tipo de Input textarea hace que la altura se ajuste automáticamente en función del contenido. Se puede proporcionar opciones en un objeto para auto dimensionar y especificar el número mínimo y máximo de líneas que el textarea puede ajustar automáticamente.")],-1),y=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input\n  type="textarea"\n  autosize\n  placeholder="Please input"\n  v-model="textarea1">\n</el-input>\n<div style="margin: 20px 0;"></div>\n<el-input\n  type="textarea"\n  :autosize="{ minRows: 2, maxRows: 4}"\n  placeholder="Please input"\n  v-model="textarea2">\n</el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      textarea1: \'\',\n      textarea2: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),C=Object(l.createVNode)("h3",{id:"mezclando-elementos-con-input"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#mezclando-elementos-con-input"},"¶"),Object(l.createTextVNode)(" Mezclando elementos con input")],-1),S=Object(l.createVNode)("p",null,"Añade un elemento antes o después del input, generalmente una etiqueta o un botón.",-1),T=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Utilice el "),Object(l.createVNode)("code",null,"slot"),Object(l.createTextVNode)(" para seleccionar si el elemento se colocara antes (prepend) o después (append) del Input.")])],-1),q=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<div>\n  <el-input placeholder="Please input" v-model="input1">\n    <template slot="prepend">Http://</template>\n  </el-input>\n</div>\n<div style="margin-top: 15px;">\n  <el-input placeholder="Please input" v-model="input2">\n    <template slot="append">.com</template>\n  </el-input>\n</div>\n<div style="margin-top: 15px;">\n  <el-input placeholder="Please input" v-model="input3" class="input-with-select">\n    <el-select v-model="select" slot="prepend" placeholder="Select">\n      <el-option label="Restaurant" value="1"></el-option>\n      <el-option label="Order No." value="2"></el-option>\n      <el-option label="Tel" value="3"></el-option>\n    </el-select>\n    <el-button slot="append" icon="el-icon-search"></el-button>\n  </el-input>\n</div>\n\n<style>\n  .el-select .el-input {\n    width: 110px;\n  }\n  .input-with-select .el-input-group__prepend {\n    background-color: #fff;\n  }\n</style>\n<script>\nexport default {\n  data() {\n    return {\n      input1: \'\',\n      input2: \'\',\n      input3: \'\',\n      select: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),P=Object(l.createVNode)("h3",{id:"tamano"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#tamano"},"¶"),Object(l.createTextVNode)(" Tamaño")],-1),E=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Añada el atributo "),Object(l.createVNode)("code",null,"size"),Object(l.createTextVNode)(" para cambiar el tamaño del Input. Además del tamaño predeterminado, hay otras tres opciones: "),Object(l.createVNode)("code",null,"large"),Object(l.createTextVNode)(", "),Object(l.createVNode)("code",null,"small"),Object(l.createTextVNode)(" y "),Object(l.createVNode)("code",null,"mini"),Object(l.createTextVNode)(".")])],-1),_=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<div class="demo-input-size">\n  <el-input\n    placeholder="Please Input"\n    v-model="input1">\n  </el-input>\n  <el-input\n    size="medium"\n    placeholder="Please Input"\n    v-model="input2">\n  </el-input>\n  <el-input\n    size="small"\n    placeholder="Please Input"\n    v-model="input3">\n  </el-input>\n  <el-input\n    size="mini"\n    placeholder="Please Input"\n    v-model="input4">\n  </el-input>\n</div>\n\n<script>\nexport default {\n  data() {\n    return {\n      input1: \'\',\n      input2: \'\',\n      input3: \'\',\n      input4: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),A=Object(l.createVNode)("h3",{id:"autocompletado"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#autocompletado"},"¶"),Object(l.createTextVNode)(" Autocompletado")],-1),z=Object(l.createVNode)("p",null,"Puede obtener algunas sugerencias basadas en la entrada actual.",-1),F=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("El componente Autocomplete proporciona sugerencias de entrada. El atributo "),Object(l.createVNode)("code",null,"fetch-suggestions"),Object(l.createTextVNode)(" es un método que devuelve la entrada sugerida. En este ejemplo, "),Object(l.createVNode)("code",null,"querySearch(queryString, cb)"),Object(l.createTextVNode)(" devuelve las sugerencias al componente mediante "),Object(l.createVNode)("code",null,"cb(data)"),Object(l.createTextVNode)(" cuando están listas.")])],-1),I=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-row class="demo-autocomplete">\n  <el-col :span="12">\n    <div class="sub-title">list suggestions when activated</div>\n    <el-autocomplete\n      class="inline-input"\n      v-model="state1"\n      :fetch-suggestions="querySearch"\n      placeholder="Please Input"\n      @select="handleSelect"\n    ></el-autocomplete>\n  </el-col>\n  <el-col :span="12">\n    <div class="sub-title">list suggestions on input</div>\n    <el-autocomplete\n      class="inline-input"\n      v-model="state2"\n      :fetch-suggestions="querySearch"\n      placeholder="Please Input"\n      :trigger-on-focus="false"\n      @select="handleSelect"\n    ></el-autocomplete>\n  </el-col>\n</el-row>\n<script>\n  export default {\n    data() {\n      return {\n        links: [],\n        state1: \'\',\n        state2: \'\'\n      };\n    },\n    methods: {\n      querySearch(queryString, cb) {\n        var links = this.links;\n        var results = queryString ? links.filter(this.createFilter(queryString)) : links;\n        // call callback function to return suggestions\n        cb(results);\n      },\n      createFilter(queryString) {\n        return (link) => {\n          return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n        };\n      },\n      loadAll() {\n        return [\n          { "value": "vue", "link": "https://github.com/vuejs/vue" },\n          { "value": "element", "link": "https://github.com/ElemeFE/element" },\n          { "value": "cooking", "link": "https://github.com/ElemeFE/cooking" },\n          { "value": "mint-ui", "link": "https://github.com/ElemeFE/mint-ui" },\n          { "value": "vuex", "link": "https://github.com/vuejs/vuex" },\n          { "value": "vue-router", "link": "https://github.com/vuejs/vue-router" },\n          { "value": "babel", "link": "https://github.com/babel/babel" }\n         ];\n      },\n      handleSelect(item) {\n        console.log(item);\n      }\n    },\n    mounted() {\n      this.links = this.loadAll();\n    }\n  }\n<\/script>\n')],-1),U=Object(l.createVNode)("h3",{id:"template-personalizado"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#template-personalizado"},"¶"),Object(l.createTextVNode)(" Template personalizado")],-1),B=Object(l.createVNode)("p",null,"Personalice cómo se muestran las sugerencias.",-1),L=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Utilice "),Object(l.createVNode)("code",null,"scoped slot"),Object(l.createTextVNode)(" para personalizar los elementos de sugerencias. En el scope, puede acceder al objeto de sugerencia mediante la clave "),Object(l.createVNode)("code",null,"item"),Object(l.createTextVNode)(".")])],-1),D=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-autocomplete\n  popper-class="my-autocomplete"\n  v-model="state"\n  :fetch-suggestions="querySearch"\n  placeholder="Please input"\n  @select="handleSelect">\n  <i\n    class="el-icon-edit el-input__icon"\n    slot="suffix"\n    @click="handleIconClick">\n  </i>\n  <template slot-scope="{ item }">\n    <div class="value">{{ item.value }}</div>\n    <span class="link">{{ item.link }}</span>\n  </template>\n</el-autocomplete>\n\n<style>\n  .my-autocomplete {\n    li {\n      line-height: normal;\n      padding: 7px;\n\n      .value {\n        text-overflow: ellipsis;\n        overflow: hidden;\n      }\n      .link {\n        font-size: 12px;\n        color: #b4b4b4;\n      }\n    }\n  }\n</style>\n\n<script>\n  export default {\n    data() {\n      return {\n        links: [],\n        state: \'\'\n      };\n    },\n    methods: {\n      querySearch(queryString, cb) {\n        var links = this.links;\n        var results = queryString ? links.filter(this.createFilter(queryString)) : links;\n        // call callback function to return suggestion objects\n        cb(results);\n      },\n      createFilter(queryString) {\n        return (link) => {\n          return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n        };\n      },\n      loadAll() {\n        return [\n          { "value": "vue", "link": "https://github.com/vuejs/vue" },\n          { "value": "element", "link": "https://github.com/ElemeFE/element" },\n          { "value": "cooking", "link": "https://github.com/ElemeFE/cooking" },\n          { "value": "mint-ui", "link": "https://github.com/ElemeFE/mint-ui" },\n          { "value": "vuex", "link": "https://github.com/vuejs/vuex" },\n          { "value": "vue-router", "link": "https://github.com/vuejs/vue-router" },\n          { "value": "babel", "link": "https://github.com/babel/babel" }\n         ];\n      },\n      handleSelect(item) {\n        console.log(item);\n      },\n      handleIconClick(ev) {\n        console.log(ev);\n      }\n    },\n    mounted() {\n      this.links = this.loadAll();\n    }\n  }\n<\/script>\n')],-1),R=Object(l.createVNode)("h3",{id:"busqueda-remota"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#busqueda-remota"},"¶"),Object(l.createTextVNode)(" Búsqueda remota")],-1),M=Object(l.createVNode)("p",null,"Búsqueda de datos desde el servidor.",-1),H=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-autocomplete\n  v-model="state"\n  :fetch-suggestions="querySearchAsync"\n  placeholder="Please input"\n  @select="handleSelect"\n></el-autocomplete>\n<script>\n  export default {\n    data() {\n      return {\n        links: [],\n        state: \'\',\n        timeout:  null\n      };\n    },\n    methods: {\n      loadAll() {\n        return [\n          { "value": "vue", "link": "https://github.com/vuejs/vue" },\n          { "value": "element", "link": "https://github.com/ElemeFE/element" },\n          { "value": "cooking", "link": "https://github.com/ElemeFE/cooking" },\n          { "value": "mint-ui", "link": "https://github.com/ElemeFE/mint-ui" },\n          { "value": "vuex", "link": "https://github.com/vuejs/vuex" },\n          { "value": "vue-router", "link": "https://github.com/vuejs/vue-router" },\n          { "value": "babel", "link": "https://github.com/babel/babel" }\n         ];\n      },\n      querySearchAsync(queryString, cb) {\n        var links = this.links;\n        var results = queryString ? links.filter(this.createFilter(queryString)) : links;\n\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n          cb(results);\n        }, 3000 * Math.random());\n      },\n      createFilter(queryString) {\n        return (link) => {\n          return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n        };\n      },\n      handleSelect(item) {\n        console.log(item);\n      }\n    },\n    mounted() {\n      this.links = this.loadAll();\n    }\n  };\n<\/script>\n')],-1),J=Object(l.createVNode)("h3",{id:"limitar-el-tamano"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#limitar-el-tamano"},"¶"),Object(l.createTextVNode)(" Limitar el tamaño")],-1),W=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createVNode)("code",null,"maxlength"),Object(l.createTextVNode)(" y "),Object(l.createVNode)("code",null,"minlength"),Object(l.createTextVNode)(" son atributos de la entrada nativa, declaran un límite en el número de caracteres que un usuario puede introducir. La configuración de la pro "),Object(l.createVNode)("code",null,"maxlength"),Object(l.createTextVNode)(" para un tipo de entrada de texto o de área de texto puede limitar la longitud del valor de entrada y le permite mostrar el recuento de palabras al establecer "),Object(l.createVNode)("code",null,"show-word-limit"),Object(l.createTextVNode)(" a "),Object(l.createVNode)("code",null,"true"),Object(l.createTextVNode)(" al mismo tiempo.")])],-1),G=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input\n  type="text"\n  placeholder="Please input"\n  v-model="text"\n  maxlength="10"\n  show-word-limit\n>\n</el-input>\n<div style="margin: 20px 0;"></div>\n<el-input\n  type="textarea"\n  placeholder="Please input"\n  v-model="textarea"\n  maxlength="30"\n  show-word-limit\n>\n</el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      text: \'\',\n      textarea: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),K=Object(l.createStaticVNode)('<h3 id="input-atributos"><a class="header-anchor" href="#input-atributos">¶</a> Input atributos</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>type</td><td>tipo de input</td><td>string</td><td>text, textarea y otros <a href="https://developer.mozilla.org/es/docs/Web/HTML/Elemento/input#Form_%3Cinput%3E_types">tipos de entrada nativos</a></td><td>text</td></tr><tr><td>value / v-model</td><td>valor enlazado</td><td>boolean / string / number</td><td>—</td><td>—</td></tr><tr><td>maxlength</td><td>igual que <code>maxlength</code> en el input nativo</td><td>number</td><td>—</td><td>—</td></tr><tr><td>minlength</td><td>igual que <code>minlength</code> en el input nativo</td><td>number</td><td>—</td><td>—</td></tr><tr><td>show-word-limit</td><td>Si se muestra el contador de palabras, solamente funciona con los tipos <code>text</code> o <code>textarea</code></td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>placeholder</td><td>placeholder del Input</td><td>string</td><td>—</td><td>—</td></tr><tr><td>clearable</td><td>si debe mostrar el botón de limpieza</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-password</td><td>si debe mostrar la posibilidad de conmutación de password input</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>si esta deshabilitado</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>size</td><td>tamaño del input, esto no funciona cuando <code>type</code> no es textarea</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>prefix-icon</td><td>clase del icono de prefijo</td><td>string</td><td>—</td><td>—</td></tr><tr><td>suffix-icon</td><td>clase del icono de sufijo</td><td>string</td><td>—</td><td>—</td></tr><tr><td>rows</td><td>número de filas, sólo funciona cuando <code>type</code> es <code>textarea</code>.</td><td>number</td><td>—</td><td>2</td></tr><tr><td>autosize</td><td>si textarea tiene una altura adaptativa, sólo funciona cuando el<code>type</code> es <code>textarea</code>. Puede aceptar un objeto, p. ej. { minRows: 2, maxRows: 6 }</td><td>boolean / object</td><td>—</td><td>false</td></tr><tr><td>autocomplete</td><td>igual que <code>autocomplete</code> en el input nativo</td><td>string</td><td>on/off</td><td>off</td></tr><tr><td>auto-complete</td><td>@DEPRECATED en el próximo cambio mayor de versión</td><td>string</td><td>on/off</td><td>off</td></tr><tr><td>name</td><td>igual que <code>name</code> en el input nativo</td><td>string</td><td>—</td><td>—</td></tr><tr><td>readonly</td><td>igual que <code>readonly</code> en el input nativo</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>max</td><td>igual que <code>max</code> en el input nativo</td><td>—</td><td>—</td><td>—</td></tr><tr><td>min</td><td>igual que <code>min</code> en el input nativo</td><td>—</td><td>—</td><td>—</td></tr><tr><td>step</td><td>igual que <code>step</code> en el input nativo</td><td>—</td><td>—</td><td>—</td></tr><tr><td>resize</td><td>control para el dimensionamiento</td><td>string</td><td>none, both, horizontal, vertical</td><td>—</td></tr><tr><td>autofocus</td><td>igual que <code>autofocus</code> en el input nativo</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>form</td><td>igual que <code>form</code> en el input nativo</td><td>string</td><td>—</td><td>—</td></tr><tr><td>label</td><td>texto de la etiqueta</td><td>string</td><td>—</td><td>—</td></tr><tr><td>tabindex</td><td>orden de tabulación para el Input</td><td>string</td><td>-</td><td>-</td></tr></tbody></table><h3 id="input-slots"><a class="header-anchor" href="#input-slots">¶</a> Input slots</h3><table><thead><tr><th>Nombre</th><th>Descripción</th></tr></thead><tbody><tr><td>prefix</td><td>contenido como prefijo del input</td></tr><tr><td>suffix</td><td>contenido como sufijo del input</td></tr><tr><td>prepend</td><td>contenido antes del input</td></tr><tr><td>append</td><td>contenido a añadir después del input</td></tr></tbody></table><h3 id="input-eventos"><a class="header-anchor" href="#input-eventos">¶</a> Input eventos</h3><table><thead><tr><th>Nombre</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>blur</td><td>Se dispara cuando se pierde el foco</td><td>(event: Event)</td></tr><tr><td>focus</td><td>Se dispara cuando se obtiene el foco</td><td>(event: Event)</td></tr><tr><td>change</td><td>se activa cuando cambia el valor de entrada</td><td>(value: string | number)</td></tr><tr><td>change</td><td>se activa solo cuando el cuadro de entrada pierde el foco o el usuario presiona Enter</td><td>(value: string | number)</td></tr><tr><td>input</td><td>se activa cuando cambia el valor de entrada</td><td>(value: string | number)</td></tr><tr><td>clear</td><td>se dispara cuando la entrada es borrada por el botón generado por el atributo <code>clearable</code>.</td><td>—</td></tr></tbody></table><h3 id="input-metodo"><a class="header-anchor" href="#input-metodo">¶</a> Input Metodo</h3><table><thead><tr><th>Metodo</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>focus</td><td>coloca el foco en el elemento</td><td>—</td></tr><tr><td>blur</td><td>quita el foco del elemento</td><td>—</td></tr><tr><td>select</td><td>selecciona el texto del input</td><td>—</td></tr></tbody></table><h3 id="autocomplete-atributos"><a class="header-anchor" href="#autocomplete-atributos">¶</a> Autocomplete Atributos</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Opciones</th><th>Por defecto</th></tr></thead><tbody><tr><td>placeholder</td><td>el placeholder del Autocomplete</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>si el Autocompete esta deshabilitado</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>value-key</td><td>nombre del campo del objeto de sugerencia del input para la visualización</td><td>string</td><td>—</td><td>value</td></tr><tr><td>icon</td><td>nombre del icono</td><td>string</td><td>—</td><td>—</td></tr><tr><td>value</td><td>valor enlazado</td><td>string</td><td>—</td><td>—</td></tr><tr><td>debounce</td><td>retardo al escribir, en milisegundos</td><td>number</td><td>—</td><td>300</td></tr><tr><td>placement</td><td>ubicación del menú emergente</td><td>string</td><td>top / top-start / top-end / bottom / bottom-start / bottom-end</td><td>bottom-start</td></tr><tr><td>fetch-suggestions</td><td>un método para obtener las sugerencias del input. Cuando las sugerencias estén listas, invocar <code>callback(data:[])</code> para devolverlas a Autocomplete</td><td>Function(queryString, callback)</td><td>—</td><td>—</td></tr><tr><td>popper-class</td><td>nombre personalizado de clase para el dropdown de autocomplete</td><td>string</td><td>—</td><td>—</td></tr><tr><td>trigger-on-focus</td><td>si se deben mostrar sugerencias cuando el input obtiene el foco</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>name</td><td>igual que <code>name</code> en el input nativo</td><td>string</td><td>—</td><td>—</td></tr><tr><td>select-when-unmatched</td><td>si se emite un evento <code>select</code> al pulsar enter cuando no hay coincidencia de Autocomplete</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>label</td><td>texto de la etiqueta</td><td>string</td><td>—</td><td>—</td></tr><tr><td>prefix-icon</td><td>prefix icon class</td><td>string</td><td>—</td><td>—</td></tr><tr><td>suffix-icon</td><td>suffix icon class</td><td>string</td><td>—</td><td>—</td></tr><tr><td>hide-loading</td><td>si se debe ocultar el icono de loading en la búsqueda remota</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>popper-append-to-body</td><td>si añadir el desplegable al cuerpo. Si la posición del menú desplegable es incorrecta, puede intentar establecer este prop a false</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td>validate-event</td><td>si se debe lanzar la validación de formulario</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td>highlight-first-item</td><td>si se debe resaltar el primer elemento en las sugerencias de búsqueda remota de forma predeterminada</td><td>boolean</td><td>-</td><td>false</td></tr></tbody></table><h3 id="autocomplete-slots"><a class="header-anchor" href="#autocomplete-slots">¶</a> Autocomplete Slots</h3><table><thead><tr><th>Nombre</th><th>Descripción</th></tr></thead><tbody><tr><td>prefix</td><td>contenido como prefijo del input</td></tr><tr><td>suffix</td><td>contenido como sufijo del input</td></tr><tr><td>prepend</td><td>contenido antes del input</td></tr><tr><td>append</td><td>contenido a añadir después del input</td></tr></tbody></table><h3 id="autocomplete-scoped-slot"><a class="header-anchor" href="#autocomplete-scoped-slot">¶</a> Autocomplete Scoped Slot</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>—</td><td>Contenido personalizado para el input de sugerencias. El parámetro del scope es { ítem }</td></tr></tbody></table><h3 id="autocomplete-eventos"><a class="header-anchor" href="#autocomplete-eventos">¶</a> Autocomplete Eventos</h3><table><thead><tr><th>Nombre</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>select</td><td>se dispara cuando se hace clic a una sugerencia</td><td>sugerencia en la que se está haciendo clic</td></tr><tr><td>change</td><td>se activa cuando cambia el valor de entrada</td><td>(value: string | number)</td></tr></tbody></table><h3 id="autocomplete-metodo"><a class="header-anchor" href="#autocomplete-metodo">¶</a> Autocomplete Metodo</h3><table><thead><tr><th>Metodo</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>focus</td><td>coloca el foco en el elemento</td><td>—</td></tr></tbody></table>',18);var Q={name:"component-doc",components:{"element-demo0":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const a={data:()=>({input:""})};return Object.assign({render:function(l,a){const d=e("el-input");return n(),o("div",null,[t(d,{placeholder:"Please input",modelValue:l.input,"onUpdate:modelValue":a[1]||(a[1]=e=>l.input=e)},null,8,["modelValue"])])}},a)}(),"element-demo1":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const a={data:()=>({input:""})};return Object.assign({render:function(l,a){const d=e("el-input");return n(),o("div",null,[t(d,{placeholder:"Please input",modelValue:l.input,"onUpdate:modelValue":a[1]||(a[1]=e=>l.input=e),disabled:!0},null,8,["modelValue"])])}},a)}(),"element-demo2":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const a={data:()=>({input:""})};return Object.assign({render:function(l,a){const d=e("el-input");return n(),o("div",null,[t(d,{placeholder:"Please input",modelValue:l.input,"onUpdate:modelValue":a[1]||(a[1]=e=>l.input=e),clearable:""},null,8,["modelValue"])])}},a)}(),"element-demo3":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const a={data:()=>({input:""})};return Object.assign({render:function(l,a){const d=e("el-input");return n(),o("div",null,[t(d,{placeholder:"Please input password",modelValue:l.input,"onUpdate:modelValue":a[1]||(a[1]=e=>l.input=e),"show-password":""},null,8,["modelValue"])])}},a)}(),"element-demo4":function(){const{createVNode:e,resolveComponent:t,withCtx:n,openBlock:o,createBlock:a}=l,d={class:"demo-input-suffix"},c=e("span",{class:"demo-input-label"},"Using attributes",-1),r={class:"demo-input-suffix"},i=e("span",{class:"demo-input-label"},"Using slots",-1),u=e("i",{slot:"suffix",class:"el-input__icon el-icon-date"},null,-1),s=e("i",{slot:"prefix",class:"el-input__icon el-icon-search"},null,-1);const p={data:()=>({input1:"",input2:"",input3:"",input4:""})};return Object.assign({render:function(l,p){const m=t("el-input");return o(),a("div",null,[e("div",d,[c,e(m,{placeholder:"Pick a date","suffix-icon":"el-icon-date",modelValue:l.input1,"onUpdate:modelValue":p[1]||(p[1]=e=>l.input1=e)},null,8,["modelValue"]),e(m,{placeholder:"Type something","prefix-icon":"el-icon-search",modelValue:l.input2,"onUpdate:modelValue":p[2]||(p[2]=e=>l.input2=e)},null,8,["modelValue"])]),e("div",r,[i,e(m,{placeholder:"Pick a date",modelValue:l.input3,"onUpdate:modelValue":p[3]||(p[3]=e=>l.input3=e)},{default:n(()=>[u]),_:1},8,["modelValue"]),e(m,{placeholder:"Type something",modelValue:l.input4,"onUpdate:modelValue":p[4]||(p[4]=e=>l.input4=e)},{default:n(()=>[s]),_:1},8,["modelValue"])])])}},p)}(),"element-demo5":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const a={data:()=>({textarea:""})};return Object.assign({render:function(l,a){const d=e("el-input");return n(),o("div",null,[t(d,{type:"textarea",rows:2,placeholder:"Please input",modelValue:l.textarea,"onUpdate:modelValue":a[1]||(a[1]=e=>l.textarea=e)},null,8,["modelValue"])])}},a)}(),"element-demo6":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l,a=t("div",{style:{margin:"20px 0"}},null,-1);const d={data:()=>({textarea1:"",textarea2:""})};return Object.assign({render:function(l,d){const c=e("el-input");return n(),o("div",null,[t(c,{type:"textarea",autosize:"",placeholder:"Please input",modelValue:l.textarea1,"onUpdate:modelValue":d[1]||(d[1]=e=>l.textarea1=e)},null,8,["modelValue"]),a,t(c,{type:"textarea",autosize:{minRows:2,maxRows:4},placeholder:"Please input",modelValue:l.textarea2,"onUpdate:modelValue":d[2]||(d[2]=e=>l.textarea2=e)},null,8,["modelValue"])])}},d)}(),"element-demo7":function(){const{createVNode:e,resolveComponent:t,withCtx:n,openBlock:o,createBlock:a}=l,d=e("template",{slot:"prepend"},"Http://",-1),c={style:{"margin-top":"15px"}},r=e("template",{slot:"append"},".com",-1),i={style:{"margin-top":"15px"}};const u={data:()=>({input1:"",input2:"",input3:"",select:""})};return Object.assign({render:function(l,u){const s=t("el-input"),p=t("el-option"),m=t("el-select"),h=t("el-button");return o(),a("div",null,[e("div",null,[e(s,{placeholder:"Please input",modelValue:l.input1,"onUpdate:modelValue":u[1]||(u[1]=e=>l.input1=e)},{default:n(()=>[d]),_:1},8,["modelValue"])]),e("div",c,[e(s,{placeholder:"Please input",modelValue:l.input2,"onUpdate:modelValue":u[2]||(u[2]=e=>l.input2=e)},{default:n(()=>[r]),_:1},8,["modelValue"])]),e("div",i,[e(s,{placeholder:"Please input",modelValue:l.input3,"onUpdate:modelValue":u[4]||(u[4]=e=>l.input3=e),class:"input-with-select"},{default:n(()=>[e(m,{modelValue:l.select,"onUpdate:modelValue":u[3]||(u[3]=e=>l.select=e),slot:"prepend",placeholder:"Select"},{default:n(()=>[e(p,{label:"Restaurant",value:"1"}),e(p,{label:"Order No.",value:"2"}),e(p,{label:"Tel",value:"3"})]),_:1},8,["modelValue"]),e(h,{slot:"append",icon:"el-icon-search"})]),_:1},8,["modelValue"])])])}},u)}(),"element-demo8":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l,a={class:"demo-input-size"};const d={data:()=>({input1:"",input2:"",input3:"",input4:""})};return Object.assign({render:function(l,d){const c=e("el-input");return n(),o("div",null,[t("div",a,[t(c,{placeholder:"Please Input",modelValue:l.input1,"onUpdate:modelValue":d[1]||(d[1]=e=>l.input1=e)},null,8,["modelValue"]),t(c,{size:"medium",placeholder:"Please Input",modelValue:l.input2,"onUpdate:modelValue":d[2]||(d[2]=e=>l.input2=e)},null,8,["modelValue"]),t(c,{size:"small",placeholder:"Please Input",modelValue:l.input3,"onUpdate:modelValue":d[3]||(d[3]=e=>l.input3=e)},null,8,["modelValue"]),t(c,{size:"mini",placeholder:"Please Input",modelValue:l.input4,"onUpdate:modelValue":d[4]||(d[4]=e=>l.input4=e)},null,8,["modelValue"])])])}},d)}(),"element-demo9":function(){const{createVNode:e,resolveComponent:t,withCtx:n,openBlock:o,createBlock:a}=l,d=e("div",{class:"sub-title"},"list suggestions when activated",-1),c=e("div",{class:"sub-title"},"list suggestions on input",-1);const r={data:()=>({links:[],state1:"",state2:""}),methods:{querySearch(e,t){var n=this.links;t(e?n.filter(this.createFilter(e)):n)},createFilter:e=>t=>0===t.value.toLowerCase().indexOf(e.toLowerCase()),loadAll:()=>[{value:"vue",link:"https://github.com/vuejs/vue"},{value:"element",link:"https://github.com/ElemeFE/element"},{value:"cooking",link:"https://github.com/ElemeFE/cooking"},{value:"mint-ui",link:"https://github.com/ElemeFE/mint-ui"},{value:"vuex",link:"https://github.com/vuejs/vuex"},{value:"vue-router",link:"https://github.com/vuejs/vue-router"},{value:"babel",link:"https://github.com/babel/babel"}],handleSelect(e){console.log(e)}},mounted(){this.links=this.loadAll()}};return Object.assign({render:function(l,r){const i=t("el-autocomplete"),u=t("el-col"),s=t("el-row");return o(),a("div",null,[e(s,{class:"demo-autocomplete"},{default:n(()=>[e(u,{span:12},{default:n(()=>[d,e(i,{class:"inline-input",modelValue:l.state1,"onUpdate:modelValue":r[1]||(r[1]=e=>l.state1=e),"fetch-suggestions":l.querySearch,placeholder:"Please Input",onSelect:l.handleSelect},null,8,["modelValue","fetch-suggestions","onSelect"])]),_:1}),e(u,{span:12},{default:n(()=>[c,e(i,{class:"inline-input",modelValue:l.state2,"onUpdate:modelValue":r[2]||(r[2]=e=>l.state2=e),"fetch-suggestions":l.querySearch,placeholder:"Please Input","trigger-on-focus":!1,onSelect:l.handleSelect},null,8,["modelValue","fetch-suggestions","onSelect"])]),_:1})]),_:1})])}},r)}(),"element-demo10":function(){const{createVNode:e,toDisplayString:t,resolveComponent:n,withCtx:o,openBlock:a,createBlock:d}=l,c={"slot-scope":"{ item }"},r={class:"value"},i={class:"link"};const u={data:()=>({links:[],state:""}),methods:{querySearch(e,t){var n=this.links;t(e?n.filter(this.createFilter(e)):n)},createFilter:e=>t=>0===t.value.toLowerCase().indexOf(e.toLowerCase()),loadAll:()=>[{value:"vue",link:"https://github.com/vuejs/vue"},{value:"element",link:"https://github.com/ElemeFE/element"},{value:"cooking",link:"https://github.com/ElemeFE/cooking"},{value:"mint-ui",link:"https://github.com/ElemeFE/mint-ui"},{value:"vuex",link:"https://github.com/vuejs/vuex"},{value:"vue-router",link:"https://github.com/vuejs/vue-router"},{value:"babel",link:"https://github.com/babel/babel"}],handleSelect(e){console.log(e)},handleIconClick(e){console.log(e)}},mounted(){this.links=this.loadAll()}};return Object.assign({render:function(l,u){const s=n("el-autocomplete");return a(),d("div",null,[e(s,{"popper-class":"my-autocomplete",modelValue:l.state,"onUpdate:modelValue":u[2]||(u[2]=e=>l.state=e),"fetch-suggestions":l.querySearch,placeholder:"Please input",onSelect:l.handleSelect},{default:o(()=>[e("i",{class:"el-icon-edit el-input__icon",slot:"suffix",onClick:u[1]||(u[1]=(...e)=>l.handleIconClick(...e))}),e("template",c,[e("div",r,t(l.item.value),1),e("span",i,t(l.item.link),1)])]),_:1},8,["modelValue","fetch-suggestions","onSelect"])])}},u)}(),"element-demo11":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const a={data:()=>({links:[],state:"",timeout:null}),methods:{loadAll:()=>[{value:"vue",link:"https://github.com/vuejs/vue"},{value:"element",link:"https://github.com/ElemeFE/element"},{value:"cooking",link:"https://github.com/ElemeFE/cooking"},{value:"mint-ui",link:"https://github.com/ElemeFE/mint-ui"},{value:"vuex",link:"https://github.com/vuejs/vuex"},{value:"vue-router",link:"https://github.com/vuejs/vue-router"},{value:"babel",link:"https://github.com/babel/babel"}],querySearchAsync(e,t){var n=this.links,l=e?n.filter(this.createFilter(e)):n;clearTimeout(this.timeout),this.timeout=setTimeout(()=>{t(l)},3e3*Math.random())},createFilter:e=>t=>0===t.value.toLowerCase().indexOf(e.toLowerCase()),handleSelect(e){console.log(e)}},mounted(){this.links=this.loadAll()}};return Object.assign({render:function(l,a){const d=e("el-autocomplete");return n(),o("div",null,[t(d,{modelValue:l.state,"onUpdate:modelValue":a[1]||(a[1]=e=>l.state=e),"fetch-suggestions":l.querySearchAsync,placeholder:"Please input",onSelect:l.handleSelect},null,8,["modelValue","fetch-suggestions","onSelect"])])}},a)}(),"element-demo12":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l,a=t("div",{style:{margin:"20px 0"}},null,-1);const d={data:()=>({text:"",textarea:""})};return Object.assign({render:function(l,d){const c=e("el-input");return n(),o("div",null,[t(c,{type:"text",placeholder:"Please input",modelValue:l.text,"onUpdate:modelValue":d[1]||(d[1]=e=>l.text=e),maxlength:"10","show-word-limit":""},null,8,["modelValue"]),a,t(c,{type:"textarea",placeholder:"Please input",modelValue:l.textarea,"onUpdate:modelValue":d[2]||(d[2]=e=>l.textarea=e),maxlength:"30","show-word-limit":""},null,8,["modelValue"])])}},d)}()},render:function(e,t,n,Q,X,Y){const Z=Object(l.resolveComponent)("element-demo0"),$=Object(l.resolveComponent)("demo-block"),ee=Object(l.resolveComponent)("element-demo1"),te=Object(l.resolveComponent)("element-demo2"),ne=Object(l.resolveComponent)("element-demo3"),le=Object(l.resolveComponent)("element-demo4"),oe=Object(l.resolveComponent)("element-demo5"),ae=Object(l.resolveComponent)("element-demo6"),de=Object(l.resolveComponent)("element-demo7"),ce=Object(l.resolveComponent)("element-demo8"),re=Object(l.resolveComponent)("element-demo9"),ie=Object(l.resolveComponent)("element-demo10"),ue=Object(l.resolveComponent)("element-demo11"),se=Object(l.resolveComponent)("element-demo12");return Object(l.openBlock)(),Object(l.createBlock)("section",o,[a,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(Z)]),highlight:Object(l.withCtx)(()=>[d]),_:1}),c,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ee)]),highlight:Object(l.withCtx)(()=>[i]),default:Object(l.withCtx)(()=>[r]),_:1}),u,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(te)]),highlight:Object(l.withCtx)(()=>[p]),default:Object(l.withCtx)(()=>[s]),_:1}),m,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ne)]),highlight:Object(l.withCtx)(()=>[b]),default:Object(l.withCtx)(()=>[h]),_:1}),v,j,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(le)]),highlight:Object(l.withCtx)(()=>[V]),default:Object(l.withCtx)(()=>[g]),_:1}),O,x,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(oe)]),highlight:Object(l.withCtx)(()=>[N]),default:Object(l.withCtx)(()=>[f]),_:1}),k,w,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ae)]),highlight:Object(l.withCtx)(()=>[y]),_:1}),C,S,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(de)]),highlight:Object(l.withCtx)(()=>[q]),default:Object(l.withCtx)(()=>[T]),_:1}),P,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ce)]),highlight:Object(l.withCtx)(()=>[_]),default:Object(l.withCtx)(()=>[E]),_:1}),A,z,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(re)]),highlight:Object(l.withCtx)(()=>[I]),default:Object(l.withCtx)(()=>[F]),_:1}),U,B,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ie)]),highlight:Object(l.withCtx)(()=>[D]),default:Object(l.withCtx)(()=>[L]),_:1}),R,M,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ue)]),highlight:Object(l.withCtx)(()=>[H]),_:1}),J,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(se)]),highlight:Object(l.withCtx)(()=>[G]),default:Object(l.withCtx)(()=>[W]),_:1}),K])}};t.default=Q}}]);