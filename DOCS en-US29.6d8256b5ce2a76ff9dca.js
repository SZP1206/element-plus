(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{516:function(e,t,n){"use strict";n.r(t);var l=n(0);const o={class:"content element-doc"},d=Object(l.createStaticVNode)('<h2 id="input"><a class="header-anchor" href="#input">¶</a> Input</h2><p>Input data using mouse or keyboard.</p><div class="warning"><p>Input is a controlled component, it <strong>always shows Vue binding value</strong>.</p><p>Under normal circumstances, <code>input</code> event should be handled. Its handler should update component&#39;s binding value (or use <code>v-model</code>). Otherwise, input box&#39;s value will not change.</p><p>Do not support <code>v-model</code> modifiers.</p></div><h3 id="basic-usage"><a class="header-anchor" href="#basic-usage">¶</a> Basic usage</h3>',4),a=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input placeholder="Please input" v-model="input"></el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      input: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),c=Object(l.createVNode)("h3",{id:"disabled"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#disabled"},"¶"),Object(l.createTextVNode)(" Disabled")],-1),r=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Disable the Input with the "),Object(l.createVNode)("code",null,"disabled"),Object(l.createTextVNode)(" attribute.")])],-1),i=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input\n  placeholder="Please input"\n  v-model="input"\n  :disabled="true">\n</el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      input: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),s=Object(l.createVNode)("h3",{id:"clearable"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#clearable"},"¶"),Object(l.createTextVNode)(" Clearable")],-1),u=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Make the Input clearable with the "),Object(l.createVNode)("code",null,"clearable"),Object(l.createTextVNode)(" attribute.")])],-1),p=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input\n  placeholder="Please input"\n  v-model="input"\n  clearable>\n</el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      input: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),h=Object(l.createVNode)("h3",{id:"password-box"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#password-box"},"¶"),Object(l.createTextVNode)(" Password box")],-1),m=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Make a toggleable password Input with the "),Object(l.createVNode)("code",null,"show-password"),Object(l.createTextVNode)(" attribute.")])],-1),b=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input placeholder="Please input password" v-model="input" show-password></el-input>\n\n<script>\n  export default {\n    data() {\n      return {\n        input: \'\'\n      }\n    }\n  }\n<\/script>\n')],-1),g=Object(l.createVNode)("h3",{id:"input-with-icon"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#input-with-icon"},"¶"),Object(l.createTextVNode)(" Input with icon")],-1),v=Object(l.createVNode)("p",null,"Add an icon to indicate input type.",-1),j=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("To add icons in Input, you can simply use "),Object(l.createVNode)("code",null,"prefix-icon"),Object(l.createTextVNode)(" and "),Object(l.createVNode)("code",null,"suffix-icon"),Object(l.createTextVNode)(" attributes. Also, the "),Object(l.createVNode)("code",null,"prefix"),Object(l.createTextVNode)(" and "),Object(l.createVNode)("code",null,"suffix"),Object(l.createTextVNode)(" named slots works as well.")])],-1),V=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<div class="demo-input-suffix">\n  <span class="demo-input-label">Using attributes</span>\n  <el-input\n    placeholder="Pick a date"\n    suffix-icon="el-icon-date"\n    v-model="input1">\n  </el-input>\n  <el-input\n    placeholder="Type something"\n    prefix-icon="el-icon-search"\n    v-model="input2">\n  </el-input>\n</div>\n<div class="demo-input-suffix">\n  <span class="demo-input-label">Using slots</span>\n  <el-input\n    placeholder="Pick a date"\n    v-model="input3">\n    <i slot="suffix" class="el-input__icon el-icon-date"></i>\n  </el-input>\n  <el-input\n    placeholder="Type something"\n    v-model="input4">\n    <i slot="prefix" class="el-input__icon el-icon-search"></i>\n  </el-input>\n</div>\n\n<style>\n  .demo-input-label {\n    display: inline-block;\n    width: 130px;\n  }\n</style>\n\n<script>\nexport default {\n  data() {\n    return {\n      input1: \'\',\n      input2: \'\',\n      input3: \'\',\n      input4: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),x=Object(l.createVNode)("h3",{id:"textarea"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#textarea"},"¶"),Object(l.createTextVNode)(" Textarea")],-1),O=Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Resizable for entering multiple lines of text information. Add attribute "),Object(l.createVNode)("code",null,'type="textarea"'),Object(l.createTextVNode)(" to change "),Object(l.createVNode)("code",null,"input"),Object(l.createTextVNode)(" into native "),Object(l.createVNode)("code",null,"textarea"),Object(l.createTextVNode)(".")],-1),f=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Control the height by setting the "),Object(l.createVNode)("code",null,"rows"),Object(l.createTextVNode)(" prop.")])],-1),N=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input\n  type="textarea"\n  :rows="2"\n  placeholder="Please input"\n  v-model="textarea">\n</el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      textarea: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),w=Object(l.createVNode)("h3",{id:"autosize-textarea"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#autosize-textarea"},"¶"),Object(l.createTextVNode)(" Autosize Textarea")],-1),k=Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Setting the "),Object(l.createVNode)("code",null,"autosize"),Object(l.createTextVNode)(" prop for a textarea type of Input makes the height to automatically adjust based on the content. An options object can be provided to "),Object(l.createVNode)("code",null,"autosize"),Object(l.createTextVNode)(" to specify the minimum and maximum number of lines the textarea can automatically adjust.")],-1),y=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input\n  type="textarea"\n  autosize\n  placeholder="Please input"\n  v-model="textarea1">\n</el-input>\n<div style="margin: 20px 0;"></div>\n<el-input\n  type="textarea"\n  :autosize="{ minRows: 2, maxRows: 4}"\n  placeholder="Please input"\n  v-model="textarea2">\n</el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      textarea1: \'\',\n      textarea2: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),C=Object(l.createVNode)("h3",{id:"mixed-input"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#mixed-input"},"¶"),Object(l.createTextVNode)(" Mixed input")],-1),T=Object(l.createVNode)("p",null,"Prepend or append an element, generally a label or a button.",-1),S=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Use "),Object(l.createVNode)("code",null,"slot"),Object(l.createTextVNode)(" to distribute elements that prepend or append to Input.")])],-1),I=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<div>\n  <el-input placeholder="Please input" v-model="input1">\n    <template slot="prepend">Http://</template>\n  </el-input>\n</div>\n<div style="margin-top: 15px;">\n  <el-input placeholder="Please input" v-model="input2">\n    <template slot="append">.com</template>\n  </el-input>\n</div>\n<div style="margin-top: 15px;">\n  <el-input placeholder="Please input" v-model="input3" class="input-with-select">\n    <el-select v-model="select" slot="prepend" placeholder="Select">\n      <el-option label="Restaurant" value="1"></el-option>\n      <el-option label="Order No." value="2"></el-option>\n      <el-option label="Tel" value="3"></el-option>\n    </el-select>\n    <el-button slot="append" icon="el-icon-search"></el-button>\n  </el-input>\n</div>\n\n<style>\n  .el-select .el-input {\n    width: 110px;\n  }\n  .input-with-select .el-input-group__prepend {\n    background-color: #fff;\n  }\n</style>\n<script>\nexport default {\n  data() {\n    return {\n      input1: \'\',\n      input2: \'\',\n      input3: \'\',\n      select: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),P=Object(l.createVNode)("h3",{id:"sizes"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#sizes"},"¶"),Object(l.createTextVNode)(" Sizes")],-1),E=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Add "),Object(l.createVNode)("code",null,"size"),Object(l.createTextVNode)(" attribute to change the size of Input. In addition to the default size, there are three other options: "),Object(l.createVNode)("code",null,"large"),Object(l.createTextVNode)(", "),Object(l.createVNode)("code",null,"small"),Object(l.createTextVNode)(" and "),Object(l.createVNode)("code",null,"mini"),Object(l.createTextVNode)(".")])],-1),A=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<div class="demo-input-size">\n  <el-input\n    placeholder="Please Input"\n    v-model="input1">\n  </el-input>\n  <el-input\n    size="medium"\n    placeholder="Please Input"\n    v-model="input2">\n  </el-input>\n  <el-input\n    size="small"\n    placeholder="Please Input"\n    v-model="input3">\n  </el-input>\n  <el-input\n    size="mini"\n    placeholder="Please Input"\n    v-model="input4">\n  </el-input>\n</div>\n\n<script>\nexport default {\n  data() {\n    return {\n      input1: \'\',\n      input2: \'\',\n      input3: \'\',\n      input4: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),_=Object(l.createVNode)("h3",{id:"autocomplete"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#autocomplete"},"¶"),Object(l.createTextVNode)(" Autocomplete")],-1),z=Object(l.createVNode)("p",null,"You can get some recommended tips based on the current input.",-1),U=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Autocomplete component provides input suggestions. The "),Object(l.createVNode)("code",null,"fetch-suggestions"),Object(l.createTextVNode)(" attribute is a method that returns suggested input. In this example, "),Object(l.createVNode)("code",null,"querySearch(queryString, cb)"),Object(l.createTextVNode)(" returns suggestions to Autocomplete via "),Object(l.createVNode)("code",null,"cb(data)"),Object(l.createTextVNode)(" when suggestions are ready.")])],-1),q=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-row class="demo-autocomplete">\n  <el-col :span="12">\n    <div class="sub-title">list suggestions when activated</div>\n    <el-autocomplete\n      class="inline-input"\n      v-model="state1"\n      :fetch-suggestions="querySearch"\n      placeholder="Please Input"\n      @select="handleSelect"\n    ></el-autocomplete>\n  </el-col>\n  <el-col :span="12">\n    <div class="sub-title">list suggestions on input</div>\n    <el-autocomplete\n      class="inline-input"\n      v-model="state2"\n      :fetch-suggestions="querySearch"\n      placeholder="Please Input"\n      :trigger-on-focus="false"\n      @select="handleSelect"\n    ></el-autocomplete>\n  </el-col>\n</el-row>\n<script>\n  export default {\n    data() {\n      return {\n        links: [],\n        state1: \'\',\n        state2: \'\'\n      };\n    },\n    methods: {\n      querySearch(queryString, cb) {\n        var links = this.links;\n        var results = queryString ? links.filter(this.createFilter(queryString)) : links;\n        // call callback function to return suggestions\n        cb(results);\n      },\n      createFilter(queryString) {\n        return (link) => {\n          return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n        };\n      },\n      loadAll() {\n        return [\n          { "value": "vue", "link": "https://github.com/vuejs/vue" },\n          { "value": "element", "link": "https://github.com/ElemeFE/element" },\n          { "value": "cooking", "link": "https://github.com/ElemeFE/cooking" },\n          { "value": "mint-ui", "link": "https://github.com/ElemeFE/mint-ui" },\n          { "value": "vuex", "link": "https://github.com/vuejs/vuex" },\n          { "value": "vue-router", "link": "https://github.com/vuejs/vue-router" },\n          { "value": "babel", "link": "https://github.com/babel/babel" }\n         ];\n      },\n      handleSelect(item) {\n        console.log(item);\n      }\n    },\n    mounted() {\n      this.links = this.loadAll();\n    }\n  }\n<\/script>\n')],-1),F=Object(l.createVNode)("h3",{id:"custom-template"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#custom-template"},"¶"),Object(l.createTextVNode)(" Custom template")],-1),B=Object(l.createVNode)("p",null,"Customize how suggestions are displayed.",-1),D=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createTextVNode)("Use "),Object(l.createVNode)("code",null,"scoped slot"),Object(l.createTextVNode)(" to customize suggestion items. In the scope, you can access the suggestion object via the "),Object(l.createVNode)("code",null,"item"),Object(l.createTextVNode)(" key.")])],-1),L=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-autocomplete\n  popper-class="my-autocomplete"\n  v-model="state"\n  :fetch-suggestions="querySearch"\n  placeholder="Please input"\n  @select="handleSelect">\n  <i\n    class="el-icon-edit el-input__icon"\n    slot="suffix"\n    @click="handleIconClick">\n  </i>\n  <template slot-scope="{ item }">\n    <div class="value">{{ item.value }}</div>\n    <span class="link">{{ item.link }}</span>\n  </template>\n</el-autocomplete>\n\n<style>\n  .my-autocomplete {\n    li {\n      line-height: normal;\n      padding: 7px;\n\n      .value {\n        text-overflow: ellipsis;\n        overflow: hidden;\n      }\n      .link {\n        font-size: 12px;\n        color: #b4b4b4;\n      }\n    }\n  }\n</style>\n\n<script>\n  export default {\n    data() {\n      return {\n        links: [],\n        state: \'\'\n      };\n    },\n    methods: {\n      querySearch(queryString, cb) {\n        var links = this.links;\n        var results = queryString ? links.filter(this.createFilter(queryString)) : links;\n        // call callback function to return suggestion objects\n        cb(results);\n      },\n      createFilter(queryString) {\n        return (link) => {\n          return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n        };\n      },\n      loadAll() {\n        return [\n          { "value": "vue", "link": "https://github.com/vuejs/vue" },\n          { "value": "element", "link": "https://github.com/ElemeFE/element" },\n          { "value": "cooking", "link": "https://github.com/ElemeFE/cooking" },\n          { "value": "mint-ui", "link": "https://github.com/ElemeFE/mint-ui" },\n          { "value": "vuex", "link": "https://github.com/vuejs/vuex" },\n          { "value": "vue-router", "link": "https://github.com/vuejs/vue-router" },\n          { "value": "babel", "link": "https://github.com/babel/babel" }\n         ];\n      },\n      handleSelect(item) {\n        console.log(item);\n      },\n      handleIconClick(ev) {\n        console.log(ev);\n      }\n    },\n    mounted() {\n      this.links = this.loadAll();\n    }\n  }\n<\/script>\n')],-1),R=Object(l.createVNode)("h3",{id:"remote-search"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#remote-search"},"¶"),Object(l.createTextVNode)(" Remote search")],-1),M=Object(l.createVNode)("p",null,"Search data from server-side.",-1),H=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-autocomplete\n  v-model="state"\n  :fetch-suggestions="querySearchAsync"\n  placeholder="Please input"\n  @select="handleSelect"\n></el-autocomplete>\n<script>\n  export default {\n    data() {\n      return {\n        links: [],\n        state: \'\',\n        timeout:  null\n      };\n    },\n    methods: {\n      loadAll() {\n        return [\n          { "value": "vue", "link": "https://github.com/vuejs/vue" },\n          { "value": "element", "link": "https://github.com/ElemeFE/element" },\n          { "value": "cooking", "link": "https://github.com/ElemeFE/cooking" },\n          { "value": "mint-ui", "link": "https://github.com/ElemeFE/mint-ui" },\n          { "value": "vuex", "link": "https://github.com/vuejs/vuex" },\n          { "value": "vue-router", "link": "https://github.com/vuejs/vue-router" },\n          { "value": "babel", "link": "https://github.com/babel/babel" }\n         ];\n      },\n      querySearchAsync(queryString, cb) {\n        var links = this.links;\n        var results = queryString ? links.filter(this.createFilter(queryString)) : links;\n\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n          cb(results);\n        }, 3000 * Math.random());\n      },\n      createFilter(queryString) {\n        return (link) => {\n          return (link.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n        };\n      },\n      handleSelect(item) {\n        console.log(item);\n      }\n    },\n    mounted() {\n      this.links = this.loadAll();\n    }\n  };\n<\/script>\n')],-1),J=Object(l.createVNode)("h3",{id:"limit-length"},[Object(l.createVNode)("a",{class:"header-anchor",href:"#limit-length"},"¶"),Object(l.createTextVNode)(" Limit length")],-1),W=Object(l.createVNode)("div",null,[Object(l.createVNode)("p",null,[Object(l.createVNode)("code",null,"maxlength"),Object(l.createTextVNode)(" and "),Object(l.createVNode)("code",null,"minlength"),Object(l.createTextVNode)(' are attributes of native input, they declare a limit on the number of characters a user can input. The "number of characters" is measured using JavaScript string length.Setting the '),Object(l.createVNode)("code",null,"maxlength"),Object(l.createTextVNode)(" prop for a text or textarea type of Input can limit the length of input value, allows you to show word count by setting "),Object(l.createVNode)("code",null,"show-word-limit"),Object(l.createTextVNode)(" to "),Object(l.createVNode)("code",null,"true"),Object(l.createTextVNode)(" at the same time.")])],-1),Y=Object(l.createVNode)("pre",null,[Object(l.createVNode)("code",{class:"html"},'<el-input\n  type="text"\n  placeholder="Please input"\n  v-model="text"\n  maxlength="10"\n  show-word-limit\n>\n</el-input>\n<div style="margin: 20px 0;"></div>\n<el-input\n  type="textarea"\n  placeholder="Please input"\n  v-model="textarea"\n  maxlength="30"\n  show-word-limit\n>\n</el-input>\n\n<script>\nexport default {\n  data() {\n    return {\n      text: \'\',\n      textarea: \'\'\n    }\n  }\n}\n<\/script>\n')],-1),G=Object(l.createStaticVNode)('<h3 id="input-attributes"><a class="header-anchor" href="#input-attributes">¶</a> Input Attributes</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>type</td><td>type of input</td><td>string</td><td>text, textarea and other <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types">native input types</a></td><td>text</td></tr><tr><td>value / v-model</td><td>binding value</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>maxlength</td><td>same as <code>maxlength</code> in native input</td><td>number</td><td>—</td><td>—</td></tr><tr><td>minlength</td><td>same as <code>minlength</code> in native input</td><td>number</td><td>—</td><td>—</td></tr><tr><td>show-word-limit</td><td>whether show word count，only works when <code>type</code> is &#39;text&#39; or &#39;textarea&#39;</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>placeholder</td><td>placeholder of Input</td><td>string</td><td>—</td><td>—</td></tr><tr><td>clearable</td><td>whether to show clear button</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-password</td><td>whether to show toggleable password input</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>whether Input is disabled</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>size</td><td>size of Input, works when <code>type</code> is not &#39;textarea&#39;</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>prefix-icon</td><td>prefix icon class</td><td>string</td><td>—</td><td>—</td></tr><tr><td>suffix-icon</td><td>suffix icon class</td><td>string</td><td>—</td><td>—</td></tr><tr><td>rows</td><td>number of rows of textarea, only works when <code>type</code> is &#39;textarea&#39;</td><td>number</td><td>—</td><td>2</td></tr><tr><td>autosize</td><td>whether textarea has an adaptive height, only works when <code>type</code> is &#39;textarea&#39;. Can accept an object, e.g. { minRows: 2, maxRows: 6 }</td><td>boolean / object</td><td>—</td><td>false</td></tr><tr><td>autocomplete</td><td>same as <code>autocomplete</code> in native input</td><td>string</td><td>on/off</td><td>off</td></tr><tr><td>auto-complete</td><td>@DEPRECATED in next major version</td><td>string</td><td>on/off</td><td>off</td></tr><tr><td>name</td><td>same as <code>name</code> in native input</td><td>string</td><td>—</td><td>—</td></tr><tr><td>readonly</td><td>same as <code>readonly</code> in native input</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>max</td><td>same as <code>max</code> in native input</td><td>—</td><td>—</td><td>—</td></tr><tr><td>min</td><td>same as <code>min</code> in native input</td><td>—</td><td>—</td><td>—</td></tr><tr><td>step</td><td>same as <code>step</code> in native input</td><td>—</td><td>—</td><td>—</td></tr><tr><td>resize</td><td>control the resizability</td><td>string</td><td>none, both, horizontal, vertical</td><td>—</td></tr><tr><td>autofocus</td><td>same as <code>autofocus</code> in native input</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>form</td><td>same as <code>form</code> in native input</td><td>string</td><td>—</td><td>—</td></tr><tr><td>label</td><td>label text</td><td>string</td><td>—</td><td>—</td></tr><tr><td>tabindex</td><td>input tabindex</td><td>string</td><td>-</td><td>-</td></tr><tr><td>validate-event</td><td>whether to trigger form validation</td><td>boolean</td><td>-</td><td>true</td></tr></tbody></table><h3 id="input-slots"><a class="header-anchor" href="#input-slots">¶</a> Input slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>prefix</td><td>content as Input prefix, only works when <code>type</code> is &#39;text&#39;</td></tr><tr><td>suffix</td><td>content as Input suffix, only works when <code>type</code> is &#39;text&#39;</td></tr><tr><td>prepend</td><td>content to prepend before Input, only works when <code>type</code> is &#39;text&#39;</td></tr><tr><td>append</td><td>content to append after Input, only works when <code>type</code> is &#39;text&#39;</td></tr></tbody></table><h3 id="input-events"><a class="header-anchor" href="#input-events">¶</a> Input Events</h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>blur</td><td>triggers when Input blurs</td><td>(event: Event)</td></tr><tr><td>focus</td><td>triggers when Input focuses</td><td>(event: Event)</td></tr><tr><td>change</td><td>triggers only when the input box loses focus or the user presses Enter</td><td>(value: string | number)</td></tr><tr><td>input</td><td>triggers when the Input value change</td><td>(value: string | number)</td></tr><tr><td>clear</td><td>triggers when the Input is cleared by clicking the clear button</td><td>—</td></tr></tbody></table><h3 id="input-methods"><a class="header-anchor" href="#input-methods">¶</a> Input Methods</h3><table><thead><tr><th>Method</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>focus</td><td>focus the input element</td><td>—</td></tr><tr><td>blur</td><td>blur the input element</td><td>—</td></tr><tr><td>select</td><td>select the text in input element</td><td>—</td></tr></tbody></table><h3 id="autocomplete-attributes"><a class="header-anchor" href="#autocomplete-attributes">¶</a> Autocomplete Attributes</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Options</th><th>Default</th></tr></thead><tbody><tr><td>placeholder</td><td>the placeholder of Autocomplete</td><td>string</td><td>—</td><td>—</td></tr><tr><td>clearable</td><td>whether to show clear button</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>whether Autocomplete is disabled</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>value-key</td><td>key name of the input suggestion object for display</td><td>string</td><td>—</td><td>value</td></tr><tr><td>icon</td><td>icon name</td><td>string</td><td>—</td><td>—</td></tr><tr><td>value</td><td>binding value</td><td>string</td><td>—</td><td>—</td></tr><tr><td>debounce</td><td>debounce delay when typing, in milliseconds</td><td>number</td><td>—</td><td>300</td></tr><tr><td>placement</td><td>placement of the popup menu</td><td>string</td><td>top / top-start / top-end / bottom / bottom-start / bottom-end</td><td>bottom-start</td></tr><tr><td>fetch-suggestions</td><td>a method to fetch input suggestions. When suggestions are ready, invoke <code>callback(data:[])</code> to return them to Autocomplete</td><td>Function(queryString, callback)</td><td>—</td><td>—</td></tr><tr><td>popper-class</td><td>custom class name for autocomplete&#39;s dropdown</td><td>string</td><td>—</td><td>—</td></tr><tr><td>trigger-on-focus</td><td>whether show suggestions when input focus</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>name</td><td>same as <code>name</code> in native input</td><td>string</td><td>—</td><td>—</td></tr><tr><td>select-when-unmatched</td><td>whether to emit a <code>select</code> event on enter when there is no autocomplete match</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>label</td><td>label text</td><td>string</td><td>—</td><td>—</td></tr><tr><td>prefix-icon</td><td>prefix icon class</td><td>string</td><td>—</td><td>—</td></tr><tr><td>suffix-icon</td><td>suffix icon class</td><td>string</td><td>—</td><td>—</td></tr><tr><td>hide-loading</td><td>whether to hide the loading icon in remote search</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>popper-append-to-body</td><td>whether to append the dropdown to body. If the positioning of the dropdown is wrong, you can try to set this prop to false</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td>highlight-first-item</td><td>whether to highlight first item in remote search suggestions by default</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id="autocomplete-slots"><a class="header-anchor" href="#autocomplete-slots">¶</a> Autocomplete Slots</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>prefix</td><td>content as Input prefix</td></tr><tr><td>suffix</td><td>content as Input suffix</td></tr><tr><td>prepend</td><td>content to prepend before Input</td></tr><tr><td>append</td><td>content to append after Input</td></tr></tbody></table><h3 id="autocomplete-scoped-slot"><a class="header-anchor" href="#autocomplete-scoped-slot">¶</a> Autocomplete Scoped Slot</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>—</td><td>Custom content for input suggestions. The scope parameter is { item }</td></tr></tbody></table><h3 id="autocomplete-events"><a class="header-anchor" href="#autocomplete-events">¶</a> Autocomplete Events</h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>select</td><td>triggers when a suggestion is clicked</td><td>suggestion being clicked</td></tr><tr><td>change</td><td>triggers when the icon inside Input value change</td><td>(value: string | number)</td></tr></tbody></table><h3 id="autocomplete-methods"><a class="header-anchor" href="#autocomplete-methods">¶</a> Autocomplete Methods</h3><table><thead><tr><th>Method</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>focus</td><td>focus the input element</td><td>—</td></tr></tbody></table>',18);var K={name:"component-doc",components:{"element-demo0":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const d={data:()=>({input:""})};return Object.assign({render:function(l,d){const a=e("el-input");return n(),o("div",null,[t(a,{placeholder:"Please input",modelValue:l.input,"onUpdate:modelValue":d[1]||(d[1]=e=>l.input=e)},null,8,["modelValue"])])}},d)}(),"element-demo1":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const d={data:()=>({input:""})};return Object.assign({render:function(l,d){const a=e("el-input");return n(),o("div",null,[t(a,{placeholder:"Please input",modelValue:l.input,"onUpdate:modelValue":d[1]||(d[1]=e=>l.input=e),disabled:!0},null,8,["modelValue"])])}},d)}(),"element-demo2":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const d={data:()=>({input:""})};return Object.assign({render:function(l,d){const a=e("el-input");return n(),o("div",null,[t(a,{placeholder:"Please input",modelValue:l.input,"onUpdate:modelValue":d[1]||(d[1]=e=>l.input=e),clearable:""},null,8,["modelValue"])])}},d)}(),"element-demo3":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const d={data:()=>({input:""})};return Object.assign({render:function(l,d){const a=e("el-input");return n(),o("div",null,[t(a,{placeholder:"Please input password",modelValue:l.input,"onUpdate:modelValue":d[1]||(d[1]=e=>l.input=e),"show-password":""},null,8,["modelValue"])])}},d)}(),"element-demo4":function(){const{createVNode:e,resolveComponent:t,withCtx:n,openBlock:o,createBlock:d}=l,a={class:"demo-input-suffix"},c=e("span",{class:"demo-input-label"},"Using attributes",-1),r={class:"demo-input-suffix"},i=e("span",{class:"demo-input-label"},"Using slots",-1),s=e("i",{slot:"suffix",class:"el-input__icon el-icon-date"},null,-1),u=e("i",{slot:"prefix",class:"el-input__icon el-icon-search"},null,-1);const p={data:()=>({input1:"",input2:"",input3:"",input4:""})};return Object.assign({render:function(l,p){const h=t("el-input");return o(),d("div",null,[e("div",a,[c,e(h,{placeholder:"Pick a date","suffix-icon":"el-icon-date",modelValue:l.input1,"onUpdate:modelValue":p[1]||(p[1]=e=>l.input1=e)},null,8,["modelValue"]),e(h,{placeholder:"Type something","prefix-icon":"el-icon-search",modelValue:l.input2,"onUpdate:modelValue":p[2]||(p[2]=e=>l.input2=e)},null,8,["modelValue"])]),e("div",r,[i,e(h,{placeholder:"Pick a date",modelValue:l.input3,"onUpdate:modelValue":p[3]||(p[3]=e=>l.input3=e)},{default:n(()=>[s]),_:1},8,["modelValue"]),e(h,{placeholder:"Type something",modelValue:l.input4,"onUpdate:modelValue":p[4]||(p[4]=e=>l.input4=e)},{default:n(()=>[u]),_:1},8,["modelValue"])])])}},p)}(),"element-demo5":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const d={data:()=>({textarea:""})};return Object.assign({render:function(l,d){const a=e("el-input");return n(),o("div",null,[t(a,{type:"textarea",rows:2,placeholder:"Please input",modelValue:l.textarea,"onUpdate:modelValue":d[1]||(d[1]=e=>l.textarea=e)},null,8,["modelValue"])])}},d)}(),"element-demo6":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l,d=t("div",{style:{margin:"20px 0"}},null,-1);const a={data:()=>({textarea1:"",textarea2:""})};return Object.assign({render:function(l,a){const c=e("el-input");return n(),o("div",null,[t(c,{type:"textarea",autosize:"",placeholder:"Please input",modelValue:l.textarea1,"onUpdate:modelValue":a[1]||(a[1]=e=>l.textarea1=e)},null,8,["modelValue"]),d,t(c,{type:"textarea",autosize:{minRows:2,maxRows:4},placeholder:"Please input",modelValue:l.textarea2,"onUpdate:modelValue":a[2]||(a[2]=e=>l.textarea2=e)},null,8,["modelValue"])])}},a)}(),"element-demo7":function(){const{createVNode:e,resolveComponent:t,withCtx:n,openBlock:o,createBlock:d}=l,a=e("template",{slot:"prepend"},"Http://",-1),c={style:{"margin-top":"15px"}},r=e("template",{slot:"append"},".com",-1),i={style:{"margin-top":"15px"}};const s={data:()=>({input1:"",input2:"",input3:"",select:""})};return Object.assign({render:function(l,s){const u=t("el-input"),p=t("el-option"),h=t("el-select"),m=t("el-button");return o(),d("div",null,[e("div",null,[e(u,{placeholder:"Please input",modelValue:l.input1,"onUpdate:modelValue":s[1]||(s[1]=e=>l.input1=e)},{default:n(()=>[a]),_:1},8,["modelValue"])]),e("div",c,[e(u,{placeholder:"Please input",modelValue:l.input2,"onUpdate:modelValue":s[2]||(s[2]=e=>l.input2=e)},{default:n(()=>[r]),_:1},8,["modelValue"])]),e("div",i,[e(u,{placeholder:"Please input",modelValue:l.input3,"onUpdate:modelValue":s[4]||(s[4]=e=>l.input3=e),class:"input-with-select"},{default:n(()=>[e(h,{modelValue:l.select,"onUpdate:modelValue":s[3]||(s[3]=e=>l.select=e),slot:"prepend",placeholder:"Select"},{default:n(()=>[e(p,{label:"Restaurant",value:"1"}),e(p,{label:"Order No.",value:"2"}),e(p,{label:"Tel",value:"3"})]),_:1},8,["modelValue"]),e(m,{slot:"append",icon:"el-icon-search"})]),_:1},8,["modelValue"])])])}},s)}(),"element-demo8":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l,d={class:"demo-input-size"};const a={data:()=>({input1:"",input2:"",input3:"",input4:""})};return Object.assign({render:function(l,a){const c=e("el-input");return n(),o("div",null,[t("div",d,[t(c,{placeholder:"Please Input",modelValue:l.input1,"onUpdate:modelValue":a[1]||(a[1]=e=>l.input1=e)},null,8,["modelValue"]),t(c,{size:"medium",placeholder:"Please Input",modelValue:l.input2,"onUpdate:modelValue":a[2]||(a[2]=e=>l.input2=e)},null,8,["modelValue"]),t(c,{size:"small",placeholder:"Please Input",modelValue:l.input3,"onUpdate:modelValue":a[3]||(a[3]=e=>l.input3=e)},null,8,["modelValue"]),t(c,{size:"mini",placeholder:"Please Input",modelValue:l.input4,"onUpdate:modelValue":a[4]||(a[4]=e=>l.input4=e)},null,8,["modelValue"])])])}},a)}(),"element-demo9":function(){const{createVNode:e,resolveComponent:t,withCtx:n,openBlock:o,createBlock:d}=l,a=e("div",{class:"sub-title"},"list suggestions when activated",-1),c=e("div",{class:"sub-title"},"list suggestions on input",-1);const r={data:()=>({links:[],state1:"",state2:""}),methods:{querySearch(e,t){var n=this.links;t(e?n.filter(this.createFilter(e)):n)},createFilter:e=>t=>0===t.value.toLowerCase().indexOf(e.toLowerCase()),loadAll:()=>[{value:"vue",link:"https://github.com/vuejs/vue"},{value:"element",link:"https://github.com/ElemeFE/element"},{value:"cooking",link:"https://github.com/ElemeFE/cooking"},{value:"mint-ui",link:"https://github.com/ElemeFE/mint-ui"},{value:"vuex",link:"https://github.com/vuejs/vuex"},{value:"vue-router",link:"https://github.com/vuejs/vue-router"},{value:"babel",link:"https://github.com/babel/babel"}],handleSelect(e){console.log(e)}},mounted(){this.links=this.loadAll()}};return Object.assign({render:function(l,r){const i=t("el-autocomplete"),s=t("el-col"),u=t("el-row");return o(),d("div",null,[e(u,{class:"demo-autocomplete"},{default:n(()=>[e(s,{span:12},{default:n(()=>[a,e(i,{class:"inline-input",modelValue:l.state1,"onUpdate:modelValue":r[1]||(r[1]=e=>l.state1=e),"fetch-suggestions":l.querySearch,placeholder:"Please Input",onSelect:l.handleSelect},null,8,["modelValue","fetch-suggestions","onSelect"])]),_:1}),e(s,{span:12},{default:n(()=>[c,e(i,{class:"inline-input",modelValue:l.state2,"onUpdate:modelValue":r[2]||(r[2]=e=>l.state2=e),"fetch-suggestions":l.querySearch,placeholder:"Please Input","trigger-on-focus":!1,onSelect:l.handleSelect},null,8,["modelValue","fetch-suggestions","onSelect"])]),_:1})]),_:1})])}},r)}(),"element-demo10":function(){const{createVNode:e,toDisplayString:t,resolveComponent:n,withCtx:o,openBlock:d,createBlock:a}=l,c={"slot-scope":"{ item }"},r={class:"value"},i={class:"link"};const s={data:()=>({links:[],state:""}),methods:{querySearch(e,t){var n=this.links;t(e?n.filter(this.createFilter(e)):n)},createFilter:e=>t=>0===t.value.toLowerCase().indexOf(e.toLowerCase()),loadAll:()=>[{value:"vue",link:"https://github.com/vuejs/vue"},{value:"element",link:"https://github.com/ElemeFE/element"},{value:"cooking",link:"https://github.com/ElemeFE/cooking"},{value:"mint-ui",link:"https://github.com/ElemeFE/mint-ui"},{value:"vuex",link:"https://github.com/vuejs/vuex"},{value:"vue-router",link:"https://github.com/vuejs/vue-router"},{value:"babel",link:"https://github.com/babel/babel"}],handleSelect(e){console.log(e)},handleIconClick(e){console.log(e)}},mounted(){this.links=this.loadAll()}};return Object.assign({render:function(l,s){const u=n("el-autocomplete");return d(),a("div",null,[e(u,{"popper-class":"my-autocomplete",modelValue:l.state,"onUpdate:modelValue":s[2]||(s[2]=e=>l.state=e),"fetch-suggestions":l.querySearch,placeholder:"Please input",onSelect:l.handleSelect},{default:o(()=>[e("i",{class:"el-icon-edit el-input__icon",slot:"suffix",onClick:s[1]||(s[1]=(...e)=>l.handleIconClick(...e))}),e("template",c,[e("div",r,t(l.item.value),1),e("span",i,t(l.item.link),1)])]),_:1},8,["modelValue","fetch-suggestions","onSelect"])])}},s)}(),"element-demo11":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l;const d={data:()=>({links:[],state:"",timeout:null}),methods:{loadAll:()=>[{value:"vue",link:"https://github.com/vuejs/vue"},{value:"element",link:"https://github.com/ElemeFE/element"},{value:"cooking",link:"https://github.com/ElemeFE/cooking"},{value:"mint-ui",link:"https://github.com/ElemeFE/mint-ui"},{value:"vuex",link:"https://github.com/vuejs/vuex"},{value:"vue-router",link:"https://github.com/vuejs/vue-router"},{value:"babel",link:"https://github.com/babel/babel"}],querySearchAsync(e,t){var n=this.links,l=e?n.filter(this.createFilter(e)):n;clearTimeout(this.timeout),this.timeout=setTimeout(()=>{t(l)},3e3*Math.random())},createFilter:e=>t=>0===t.value.toLowerCase().indexOf(e.toLowerCase()),handleSelect(e){console.log(e)}},mounted(){this.links=this.loadAll()}};return Object.assign({render:function(l,d){const a=e("el-autocomplete");return n(),o("div",null,[t(a,{modelValue:l.state,"onUpdate:modelValue":d[1]||(d[1]=e=>l.state=e),"fetch-suggestions":l.querySearchAsync,placeholder:"Please input",onSelect:l.handleSelect},null,8,["modelValue","fetch-suggestions","onSelect"])])}},d)}(),"element-demo12":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:o}=l,d=t("div",{style:{margin:"20px 0"}},null,-1);const a={data:()=>({text:"",textarea:""})};return Object.assign({render:function(l,a){const c=e("el-input");return n(),o("div",null,[t(c,{type:"text",placeholder:"Please input",modelValue:l.text,"onUpdate:modelValue":a[1]||(a[1]=e=>l.text=e),maxlength:"10","show-word-limit":""},null,8,["modelValue"]),d,t(c,{type:"textarea",placeholder:"Please input",modelValue:l.textarea,"onUpdate:modelValue":a[2]||(a[2]=e=>l.textarea=e),maxlength:"30","show-word-limit":""},null,8,["modelValue"])])}},a)}()},render:function(e,t,n,K,Q,X){const Z=Object(l.resolveComponent)("element-demo0"),$=Object(l.resolveComponent)("demo-block"),ee=Object(l.resolveComponent)("element-demo1"),te=Object(l.resolveComponent)("element-demo2"),ne=Object(l.resolveComponent)("element-demo3"),le=Object(l.resolveComponent)("element-demo4"),oe=Object(l.resolveComponent)("element-demo5"),de=Object(l.resolveComponent)("element-demo6"),ae=Object(l.resolveComponent)("element-demo7"),ce=Object(l.resolveComponent)("element-demo8"),re=Object(l.resolveComponent)("element-demo9"),ie=Object(l.resolveComponent)("element-demo10"),se=Object(l.resolveComponent)("element-demo11"),ue=Object(l.resolveComponent)("element-demo12");return Object(l.openBlock)(),Object(l.createBlock)("section",o,[d,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(Z)]),highlight:Object(l.withCtx)(()=>[a]),_:1}),c,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ee)]),highlight:Object(l.withCtx)(()=>[i]),default:Object(l.withCtx)(()=>[r]),_:1}),s,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(te)]),highlight:Object(l.withCtx)(()=>[p]),default:Object(l.withCtx)(()=>[u]),_:1}),h,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ne)]),highlight:Object(l.withCtx)(()=>[b]),default:Object(l.withCtx)(()=>[m]),_:1}),g,v,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(le)]),highlight:Object(l.withCtx)(()=>[V]),default:Object(l.withCtx)(()=>[j]),_:1}),x,O,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(oe)]),highlight:Object(l.withCtx)(()=>[N]),default:Object(l.withCtx)(()=>[f]),_:1}),w,k,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(de)]),highlight:Object(l.withCtx)(()=>[y]),_:1}),C,T,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ae)]),highlight:Object(l.withCtx)(()=>[I]),default:Object(l.withCtx)(()=>[S]),_:1}),P,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ce)]),highlight:Object(l.withCtx)(()=>[A]),default:Object(l.withCtx)(()=>[E]),_:1}),_,z,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(re)]),highlight:Object(l.withCtx)(()=>[q]),default:Object(l.withCtx)(()=>[U]),_:1}),F,B,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ie)]),highlight:Object(l.withCtx)(()=>[L]),default:Object(l.withCtx)(()=>[D]),_:1}),R,M,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(se)]),highlight:Object(l.withCtx)(()=>[H]),_:1}),J,Object(l.createVNode)($,null,{source:Object(l.withCtx)(()=>[Object(l.createVNode)(ue)]),highlight:Object(l.withCtx)(()=>[Y]),default:Object(l.withCtx)(()=>[W]),_:1}),G])}};t.default=K}}]);