(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{539:function(t,e,d){"use strict";d.r(e);var n=d(0);const r={class:"content element-doc"},c=Object(n.createVNode)("h2",{id:"timeselect"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#timeselect"},"¶"),Object(n.createTextVNode)(" TimeSelect")],-1),o=Object(n.createVNode)("p",null,"Use Time Select for time input.",-1),a=Object(n.createVNode)("h3",{id:"fixed-time-picker"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#fixed-time-picker"},"¶"),Object(n.createTextVNode)(" Fixed time picker")],-1),i=Object(n.createVNode)("p",null,"Provide a list of fixed time for users to choose.",-1),l=Object(n.createVNode)("div",null,[Object(n.createVNode)("p",null,[Object(n.createTextVNode)("Use "),Object(n.createVNode)("code",null,"el-time-select"),Object(n.createTextVNode)(" label, then assign start time, end time and time step with "),Object(n.createVNode)("code",null,"start"),Object(n.createTextVNode)(", "),Object(n.createVNode)("code",null,"end"),Object(n.createTextVNode)(" and "),Object(n.createVNode)("code",null,"step"),Object(n.createTextVNode)(".")])],-1),s=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},"<el-time-select\n  v-model=\"value\"\n  :picker-options=\"{\n    start: '08:30',\n    step: '00:15',\n    end: '18:30'\n  }\"\n  placeholder=\"Select time\">\n</el-time-select>\n\n<script>\n  export default {\n    data() {\n      return {\n        value: ''\n      };\n    }\n  }\n<\/script>\n")],-1),m=Object(n.createVNode)("h3",{id:"fixed-time-range"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#fixed-time-range"},"¶"),Object(n.createTextVNode)(" Fixed time range")],-1),h=Object(n.createVNode)("p",null,"If start time is picked at first, then the end time will change accordingly.",-1),p=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},"<template>\n  <el-time-select\n    placeholder=\"Start time\"\n    v-model=\"startTime\"\n    :picker-options=\"{\n      start: '08:30',\n      step: '00:15',\n      end: '18:30'\n    }\">\n  </el-time-select>\n  <el-time-select\n    placeholder=\"End time\"\n    v-model=\"endTime\"\n    :picker-options=\"{\n      start: '08:30',\n      step: '00:15',\n      end: '18:30',\n      minTime: startTime\n    }\">\n  </el-time-select>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        startTime: '',\n        endTime: ''\n      };\n    }\n  }\n<\/script>\n")],-1),u=Object(n.createStaticVNode)('<h3 id="attributes"><a class="header-anchor" href="#attributes">¶</a> Attributes</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>value / v-model</td><td>binding value</td><td>date(TimePicker) / string(TimeSelect)</td><td>-</td><td>-</td></tr><tr><td>editable</td><td>whether the input is editable</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>clearable</td><td>whether to show clear button</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>size</td><td>size of Input</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>placeholder</td><td>placeholder in non-range mode</td><td>string</td><td>—</td><td>—</td></tr><tr><td>picker-options</td><td>additional options, check the table below</td><td>object</td><td>—</td><td>{}</td></tr><tr><td>name</td><td>same as <code>name</code> in native input</td><td>string</td><td>—</td><td>—</td></tr><tr><td>prefix-icon</td><td>Custom prefix icon class</td><td>string</td><td>—</td><td>el-icon-time</td></tr><tr><td>clear-icon</td><td>Custom clear icon class</td><td>string</td><td>—</td><td>el-icon-circle-close</td></tr></tbody></table><h3 id="time-select-options"><a class="header-anchor" href="#time-select-options">¶</a> Time Select Options</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>start</td><td>start time</td><td>string</td><td>—</td><td>09:00</td></tr><tr><td>end</td><td>end time</td><td>string</td><td>—</td><td>18:00</td></tr><tr><td>step</td><td>time step</td><td>string</td><td>—</td><td>00:30</td></tr><tr><td>minTime</td><td>minimum time, any time before this time will be disabled</td><td>string</td><td>—</td><td>00:00</td></tr><tr><td>maxTime</td><td>maximum time, any time after this time will be disabled</td><td>string</td><td>—</td><td>—</td></tr></tbody></table><h3 id="events"><a class="header-anchor" href="#events">¶</a> Events</h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>change</td><td>triggers when user confirms the value</td><td>component&#39;s binding value</td></tr><tr><td>blur</td><td>triggers when Input blurs</td><td>component instance</td></tr><tr><td>focus</td><td>triggers when Input focuses</td><td>component instance</td></tr></tbody></table><h3 id="methods"><a class="header-anchor" href="#methods">¶</a> Methods</h3><table><thead><tr><th>Method</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>focus</td><td>focus the Input component</td><td>-</td></tr><tr><td>blur</td><td>blur the Input component</td><td>-</td></tr></tbody></table>',8);var b={name:"component-doc",components:{"element-demo0":function(){const{resolveComponent:t,createVNode:e,openBlock:d,createBlock:r}=n;const c={data:()=>({value:""})};return Object.assign({render:function(n,c){const o=t("el-time-select");return d(),r("div",null,[e(o,{modelValue:n.value,"onUpdate:modelValue":c[1]||(c[1]=t=>n.value=t),"picker-options":{start:"08:30",step:"00:15",end:"18:30"},placeholder:"Select time"},null,8,["modelValue"])])}},c)}(),"element-demo1":function(){const{resolveComponent:t,createVNode:e,openBlock:d,createBlock:r}=n;const c={data:()=>({startTime:"",endTime:""})};return Object.assign({render:function(n,c){const o=t("el-time-select");return d(),r("div",null,[e(o,{placeholder:"Start time",modelValue:n.startTime,"onUpdate:modelValue":c[1]||(c[1]=t=>n.startTime=t),"picker-options":{start:"08:30",step:"00:15",end:"18:30"}},null,8,["modelValue"]),e(o,{placeholder:"End time",modelValue:n.endTime,"onUpdate:modelValue":c[2]||(c[2]=t=>n.endTime=t),"picker-options":{start:"08:30",step:"00:15",end:"18:30",minTime:n.startTime}},null,8,["modelValue","picker-options"])])}},c)}()},render:function(t,e,d,b,j,O){const V=Object(n.resolveComponent)("element-demo0"),f=Object(n.resolveComponent)("demo-block"),N=Object(n.resolveComponent)("element-demo1");return Object(n.openBlock)(),Object(n.createBlock)("section",r,[c,o,a,i,Object(n.createVNode)(f,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(V)]),highlight:Object(n.withCtx)(()=>[s]),default:Object(n.withCtx)(()=>[l]),_:1}),m,h,Object(n.createVNode)(f,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(N)]),highlight:Object(n.withCtx)(()=>[p]),_:1}),u])}};e.default=b}}]);