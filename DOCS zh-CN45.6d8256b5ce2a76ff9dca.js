(window.webpackJsonp=window.webpackJsonp||[]).push([[226],{472:function(e,t,d){"use strict";d.r(t);var c=d(0);const o={class:"content element-doc"},a=Object(c.createVNode)("h2",{id:"rate-ping-fen"},[Object(c.createVNode)("a",{class:"header-anchor",href:"#rate-ping-fen"},"¶"),Object(c.createTextVNode)(" Rate 评分")],-1),l=Object(c.createVNode)("p",null,"评分组件",-1),n=Object(c.createVNode)("h3",{id:"ji-chu-yong-fa"},[Object(c.createVNode)("a",{class:"header-anchor",href:"#ji-chu-yong-fa"},"¶"),Object(c.createTextVNode)(" 基础用法")],-1),r=Object(c.createVNode)("div",null,[Object(c.createVNode)("p",null,[Object(c.createTextVNode)("评分默认被分为三个等级，可以利用颜色数组对分数及情感倾向进行分级（默认情况下不区分颜色）。三个等级所对应的颜色用"),Object(c.createVNode)("code",null,"colors"),Object(c.createTextVNode)("属性设置，而它们对应的两个阈值则通过 "),Object(c.createVNode)("code",null,"low-threshold"),Object(c.createTextVNode)(" 和 "),Object(c.createVNode)("code",null,"high-threshold"),Object(c.createTextVNode)(" 设定。你也可以通过传入颜色对象来自定义分段，键名为分段的界限值，键值为对应的颜色。")])],-1),s=Object(c.createVNode)("pre",null,[Object(c.createVNode)("code",{class:"html"},'<div class="block">\n  <span class="demonstration">默认不区分颜色</span>\n  <el-rate v-model="value1"></el-rate>\n</div>\n<div class="block">\n  <span class="demonstration">区分颜色</span>\n  <el-rate\n    v-model="value2"\n    :colors="colors">\n  </el-rate>\n</div>\n\n<script>\n  export default {\n    data() {\n      return {\n        value1: null,\n        value2: null,\n        colors: [\'#99A9BF\', \'#F7BA2A\', \'#FF9900\']  // 等同于 { 2: \'#99A9BF\', 4: { value: \'#F7BA2A\', excluded: true }, 5: \'#FF9900\' }\n      }\n    }\n  }\n<\/script>\n')],-1),u=Object(c.createVNode)("h3",{id:"fu-zhu-wen-zi"},[Object(c.createVNode)("a",{class:"header-anchor",href:"#fu-zhu-wen-zi"},"¶"),Object(c.createTextVNode)(" 辅助文字")],-1),i=Object(c.createVNode)("p",null,"用辅助文字直接地表达对应分数",-1),b=Object(c.createVNode)("div",null,[Object(c.createVNode)("p",null,[Object(c.createTextVNode)("为组件设置 "),Object(c.createVNode)("code",null,"show-text"),Object(c.createTextVNode)(" 属性会在右侧显示辅助文字。通过设置 "),Object(c.createVNode)("code",null,"texts"),Object(c.createTextVNode)(" 可以为每一个分值指定对应的辅助文字。"),Object(c.createVNode)("code",null,"texts"),Object(c.createTextVNode)(" 为一个数组，长度应等于最大值 "),Object(c.createVNode)("code",null,"max"),Object(c.createTextVNode)("。")])],-1),h=Object(c.createVNode)("pre",null,[Object(c.createVNode)("code",{class:"html"},'<el-rate\n  v-model="value"\n  show-text>\n</el-rate>\n\n<script>\n  export default {\n    data() {\n      return {\n        value: null\n      }\n    }\n  }\n<\/script>\n')],-1),j=Object(c.createVNode)("h3",{id:"qi-ta-icon"},[Object(c.createVNode)("a",{class:"header-anchor",href:"#qi-ta-icon"},"¶"),Object(c.createTextVNode)(" 其它 icon")],-1),O=Object(c.createVNode)("p",null,"当有多层评价时，可以用不同类型的 icon 区分评分层级",-1),V=Object(c.createVNode)("div",null,[Object(c.createVNode)("p",null,[Object(c.createTextVNode)("设置"),Object(c.createVNode)("code",null,"icon-classes"),Object(c.createTextVNode)("属性可以自定义不同分段的图标。若传入数组，共有 3 个元素，为 3 个分段所对应的类名；若传入对象，可自定义分段，键名为分段的界限值，键值为对应的类名。本例还使用"),Object(c.createVNode)("code",null,"void-icon-class"),Object(c.createTextVNode)("指定了未选中时的图标类名。")])],-1),N=Object(c.createVNode)("pre",null,[Object(c.createVNode)("code",{class:"html"},"<el-rate\n  v-model=\"value\"\n  :icon-classes=\"iconClasses\"\n  void-icon-class=\"icon-rate-face-off\"\n  :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\">\n</el-rate>\n\n<script>\n  export default {\n    data() {\n      return {\n        value: null,\n        iconClasses: ['icon-rate-face-1', 'icon-rate-face-2', 'icon-rate-face-3'] // 等同于 { 2: 'icon-rate-face-1', 4: { value: 'icon-rate-face-2', excluded: true }, 5: 'icon-rate-face-3' }\n      }\n    }\n  }\n<\/script>\n")],-1),v=Object(c.createVNode)("h3",{id:"zhi-du"},[Object(c.createVNode)("a",{class:"header-anchor",href:"#zhi-du"},"¶"),Object(c.createTextVNode)(" 只读")],-1),m=Object(c.createVNode)("p",null,"只读的评分用来展示分数，允许出现半星",-1),p=Object(c.createVNode)("div",null,[Object(c.createVNode)("p",null,[Object(c.createTextVNode)("为组件设置 "),Object(c.createVNode)("code",null,"disabled"),Object(c.createTextVNode)(" 属性表示组件为只读，支持小数分值。此时若设置 "),Object(c.createVNode)("code",null,"show-score"),Object(c.createTextVNode)("，则会在右侧显示目前的分值。可以提供 "),Object(c.createVNode)("code",null,"score-template"),Object(c.createTextVNode)(" 作为显示模板，模板为一个包含了 "),Object(c.createVNode)("code",null,"{value}"),Object(c.createTextVNode)(" 的字符串，"),Object(c.createVNode)("code",null,"{value}"),Object(c.createTextVNode)(" 会被解析为分值。")])],-1),f=Object(c.createVNode)("pre",null,[Object(c.createVNode)("code",{class:"html"},'<el-rate\n  v-model="value"\n  disabled\n  show-score\n  text-color="#ff9900"\n  score-template="{value}">\n</el-rate>\n\n<script>\n  export default {\n    data() {\n      return {\n        value: 3.7\n      }\n    }\n  }\n<\/script>\n')],-1),x=Object(c.createStaticVNode)('<h3 id="attributes"><a class="header-anchor" href="#attributes">¶</a> Attributes</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>value / v-model</td><td>绑定值</td><td>number</td><td>—</td><td>0</td></tr><tr><td>max</td><td>最大分值</td><td>number</td><td>—</td><td>5</td></tr><tr><td>disabled</td><td>是否为只读</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>allow-half</td><td>是否允许半选</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>low-threshold</td><td>低分和中等分数的界限值，值本身被划分在低分中</td><td>number</td><td>—</td><td>2</td></tr><tr><td>high-threshold</td><td>高分和中等分数的界限值，值本身被划分在高分中</td><td>number</td><td>—</td><td>4</td></tr><tr><td>colors</td><td>icon 的颜色。若传入数组，共有 3 个元素，为 3 个分段所对应的颜色；若传入对象，可自定义分段，键名为分段的界限值，键值为对应的颜色</td><td>array/object</td><td>—</td><td>[&#39;#F7BA2A&#39;, &#39;#F7BA2A&#39;, &#39;#F7BA2A&#39;]</td></tr><tr><td>void-color</td><td>未选中 icon 的颜色</td><td>string</td><td>—</td><td>#C6D1DE</td></tr><tr><td>disabled-void-color</td><td>只读时未选中 icon 的颜色</td><td>string</td><td>—</td><td>#EFF2F7</td></tr><tr><td>icon-classes</td><td>icon 的类名。若传入数组，共有 3 个元素，为 3 个分段所对应的类名；若传入对象，可自定义分段，键名为分段的界限值，键值为对应的类名</td><td>array/object</td><td>—</td><td>[&#39;el-icon-star-on&#39;, &#39;el-icon-star-on&#39;,&#39;el-icon-star-on&#39;]</td></tr><tr><td>void-icon-class</td><td>未选中 icon 的类名</td><td>string</td><td>—</td><td>el-icon-star-off</td></tr><tr><td>disabled-void-icon-class</td><td>只读时未选中 icon 的类名</td><td>string</td><td>—</td><td>el-icon-star-on</td></tr><tr><td>show-text</td><td>是否显示辅助文字，若为真，则会从 texts 数组中选取当前分数对应的文字内容</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-score</td><td>是否显示当前分数，show-score 和 show-text 不能同时为真</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>text-color</td><td>辅助文字的颜色</td><td>string</td><td>—</td><td>#1F2D3D</td></tr><tr><td>texts</td><td>辅助文字数组</td><td>array</td><td>—</td><td>[&#39;极差&#39;, &#39;失望&#39;, &#39;一般&#39;, &#39;满意&#39;, &#39;惊喜&#39;]</td></tr><tr><td>score-template</td><td>分数显示模板</td><td>string</td><td>—</td><td>{value}</td></tr></tbody></table><h3 id="events"><a class="header-anchor" href="#events">¶</a> Events</h3><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>分值改变时触发</td><td>改变后的分值</td></tr></tbody></table>',4);var w={name:"component-doc",components:{"element-demo0":function(){const{createVNode:e,resolveComponent:t,openBlock:d,createBlock:o}=c,a={class:"block"},l=e("span",{class:"demonstration"},"默认不区分颜色",-1),n={class:"block"},r=e("span",{class:"demonstration"},"区分颜色",-1);const s={data:()=>({value1:null,value2:null,colors:["#99A9BF","#F7BA2A","#FF9900"]})};return Object.assign({render:function(c,s){const u=t("el-rate");return d(),o("div",null,[e("div",a,[l,e(u,{modelValue:c.value1,"onUpdate:modelValue":s[1]||(s[1]=e=>c.value1=e)},null,8,["modelValue"])]),e("div",n,[r,e(u,{modelValue:c.value2,"onUpdate:modelValue":s[2]||(s[2]=e=>c.value2=e),colors:c.colors},null,8,["modelValue","colors"])])])}},s)}(),"element-demo1":function(){const{resolveComponent:e,createVNode:t,openBlock:d,createBlock:o}=c;const a={data:()=>({value:null})};return Object.assign({render:function(c,a){const l=e("el-rate");return d(),o("div",null,[t(l,{modelValue:c.value,"onUpdate:modelValue":a[1]||(a[1]=e=>c.value=e),"show-text":""},null,8,["modelValue"])])}},a)}(),"element-demo2":function(){const{resolveComponent:e,createVNode:t,openBlock:d,createBlock:o}=c;const a={data:()=>({value:null,iconClasses:["icon-rate-face-1","icon-rate-face-2","icon-rate-face-3"]})};return Object.assign({render:function(c,a){const l=e("el-rate");return d(),o("div",null,[t(l,{modelValue:c.value,"onUpdate:modelValue":a[1]||(a[1]=e=>c.value=e),"icon-classes":c.iconClasses,"void-icon-class":"icon-rate-face-off",colors:["#99A9BF","#F7BA2A","#FF9900"]},null,8,["modelValue","icon-classes"])])}},a)}(),"element-demo3":function(){const{resolveComponent:e,createVNode:t,openBlock:d,createBlock:o}=c;const a={data:()=>({value:3.7})};return Object.assign({render:function(c,a){const l=e("el-rate");return d(),o("div",null,[t(l,{modelValue:c.value,"onUpdate:modelValue":a[1]||(a[1]=e=>c.value=e),disabled:"","show-score":"","text-color":"#ff9900","score-template":"{value}"},null,8,["modelValue"])])}},a)}()},render:function(e,t,d,w,F,C){const g=Object(c.resolveComponent)("element-demo0"),B=Object(c.resolveComponent)("demo-block"),T=Object(c.resolveComponent)("element-demo1"),A=Object(c.resolveComponent)("element-demo2"),k=Object(c.resolveComponent)("element-demo3");return Object(c.openBlock)(),Object(c.createBlock)("section",o,[a,l,n,Object(c.createVNode)(B,null,{source:Object(c.withCtx)(()=>[Object(c.createVNode)(g)]),highlight:Object(c.withCtx)(()=>[s]),default:Object(c.withCtx)(()=>[r]),_:1}),u,i,Object(c.createVNode)(B,null,{source:Object(c.withCtx)(()=>[Object(c.createVNode)(T)]),highlight:Object(c.withCtx)(()=>[h]),default:Object(c.withCtx)(()=>[b]),_:1}),j,O,Object(c.createVNode)(B,null,{source:Object(c.withCtx)(()=>[Object(c.createVNode)(A)]),highlight:Object(c.withCtx)(()=>[N]),default:Object(c.withCtx)(()=>[V]),_:1}),v,m,Object(c.createVNode)(B,null,{source:Object(c.withCtx)(()=>[Object(c.createVNode)(k)]),highlight:Object(c.withCtx)(()=>[f]),default:Object(c.withCtx)(()=>[p]),_:1}),x])}};t.default=w}}]);