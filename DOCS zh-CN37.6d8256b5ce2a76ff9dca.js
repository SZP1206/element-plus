(window.webpackJsonp=window.webpackJsonp||[]).push([[217],{465:function(e,t,n){"use strict";n.r(t);var o=n(0);const c={class:"content element-doc"},d=Object(o.createVNode)("h2",{id:"notification-tong-zhi"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#notification-tong-zhi"},"¶"),Object(o.createTextVNode)(" Notification 通知")],-1),i=Object(o.createVNode)("p",null,"悬浮出现在页面角落，显示全局的通知提醒消息。",-1),l=Object(o.createVNode)("h3",{id:"ji-ben-yong-fa"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#ji-ben-yong-fa"},"¶"),Object(o.createTextVNode)(" 基本用法")],-1),a=Object(o.createVNode)("p",null,"适用性广泛的通知栏",-1),r=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Notification 组件提供通知功能，Element Plus 注册了"),Object(o.createVNode)("code",null,"$notify"),Object(o.createTextVNode)("方法，接收一个"),Object(o.createVNode)("code",null,"options"),Object(o.createTextVNode)("字面量参数，在最简单的情况下，你可以设置"),Object(o.createVNode)("code",null,"title"),Object(o.createTextVNode)("字段和"),Object(o.createVNode)("code",null,"message"),Object(o.createTextVNode)("字段，用于设置通知的标题和正文。默认情况下，经过一段时间后 Notification 组件会自动关闭，但是通过设置"),Object(o.createVNode)("code",null,"duration"),Object(o.createTextVNode)("，可以控制关闭的时间间隔，特别的是，如果设置为"),Object(o.createVNode)("code",null,"0"),Object(o.createTextVNode)("，则不会自动关闭。注意："),Object(o.createVNode)("code",null,"duration"),Object(o.createTextVNode)("接收一个"),Object(o.createVNode)("code",null,"Number"),Object(o.createTextVNode)("，单位为毫秒，默认为"),Object(o.createVNode)("code",null,"4500"),Object(o.createTextVNode)("。")])],-1),s=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open1\">\n    可自动关闭\n  </el-button>\n  <el-button\n    plain\n    @click=\"open2\">\n    不会自动关闭\n    </el-button>\n</template>\n\n<script>\n  import { h } from 'vue';\n\n  export default {\n    methods: {\n      open1() {\n        this.$notify({\n          title: '标题名称',\n          message: h('i', { style: 'color: teal'}, '这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案')\n        });\n      },\n\n      open2() {\n        this.$notify({\n          title: '提示',\n          message: '这是一条不会自动关闭的消息',\n          duration: 0\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),p=Object(o.createVNode)("h3",{id:"dai-you-qing-xiang-xing"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#dai-you-qing-xiang-xing"},"¶"),Object(o.createTextVNode)(" 带有倾向性")],-1),b=Object(o.createVNode)("p",null,"带有 icon，常用来显示「成功、警告、消息、错误」类的系统消息",-1),u=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Element Plus 为 Notification 组件准备了四种通知类型："),Object(o.createVNode)("code",null,"success"),Object(o.createTextVNode)(", "),Object(o.createVNode)("code",null,"warning"),Object(o.createTextVNode)(", "),Object(o.createVNode)("code",null,"info"),Object(o.createTextVNode)(", "),Object(o.createVNode)("code",null,"error"),Object(o.createTextVNode)("。通过"),Object(o.createVNode)("code",null,"type"),Object(o.createTextVNode)("字段来设置，除此以外的值将被忽略。同时，我们也为 Notification 的各种 type 注册了方法，可以在不传入"),Object(o.createVNode)("code",null,"type"),Object(o.createTextVNode)("字段的情况下像"),Object(o.createVNode)("code",null,"open3"),Object(o.createTextVNode)("和"),Object(o.createVNode)("code",null,"open4"),Object(o.createTextVNode)("那样直接调用。")])],-1),h=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open1\">\n    成功\n  </el-button>\n  <el-button\n    plain\n    @click=\"open2\">\n    警告\n  </el-button>\n  <el-button\n    plain\n    @click=\"open3\">\n    消息\n  </el-button>\n  <el-button\n    plain\n    @click=\"open4\">\n    错误\n  </el-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      open1() {\n        this.$notify({\n          title: '成功',\n          message: '这是一条成功的提示消息',\n          type: 'success'\n        });\n      },\n\n      open2() {\n        this.$notify({\n          title: '警告',\n          message: '这是一条警告的提示消息',\n          type: 'warning'\n        });\n      },\n\n      open3() {\n        this.$notify.info({\n          title: '消息',\n          message: '这是一条消息的提示消息'\n        });\n      },\n\n      open4() {\n        this.$notify.error({\n          title: '错误',\n          message: '这是一条错误的提示消息'\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),j=Object(o.createVNode)("h3",{id:"zi-ding-yi-dan-chu-wei-zhi"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#zi-ding-yi-dan-chu-wei-zhi"},"¶"),Object(o.createTextVNode)(" 自定义弹出位置")],-1),N=Object(o.createVNode)("p",null,"可以让 Notification 从屏幕四角中的任意一角弹出",-1),O=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("使用"),Object(o.createVNode)("code",null,"position"),Object(o.createTextVNode)("属性定义 Notification 的弹出位置，支持四个选项："),Object(o.createVNode)("code",null,"top-right"),Object(o.createTextVNode)("、"),Object(o.createVNode)("code",null,"top-left"),Object(o.createTextVNode)("、"),Object(o.createVNode)("code",null,"bottom-right"),Object(o.createTextVNode)("、"),Object(o.createVNode)("code",null,"bottom-left"),Object(o.createTextVNode)("，默认为"),Object(o.createVNode)("code",null,"top-right"),Object(o.createTextVNode)("。")])],-1),f=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open1\">\n    右上角\n  </el-button>\n  <el-button\n    plain\n    @click=\"open2\">\n    右下角\n  </el-button>\n  <el-button\n    plain\n    @click=\"open3\">\n    左下角\n  </el-button>\n  <el-button\n    plain\n    @click=\"open4\">\n    左上角\n  </el-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      open1() {\n        this.$notify({\n          title: '自定义位置',\n          message: '右上角弹出的消息'\n        });\n      },\n\n      open2() {\n        this.$notify({\n          title: '自定义位置',\n          message: '右下角弹出的消息',\n          position: 'bottom-right'\n        });\n      },\n\n      open3() {\n        this.$notify({\n          title: '自定义位置',\n          message: '左下角弹出的消息',\n          position: 'bottom-left'\n        });\n      },\n\n      open4() {\n        this.$notify({\n          title: '自定义位置',\n          message: '左上角弹出的消息',\n          position: 'top-left'\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),V=Object(o.createVNode)("h3",{id:"dai-you-pian-yi"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#dai-you-pian-yi"},"¶"),Object(o.createTextVNode)(" 带有偏移")],-1),m=Object(o.createVNode)("p",null,"让 Notification 偏移一些位置",-1),g=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Notification 提供设置偏移量的功能，通过设置 "),Object(o.createVNode)("code",null,"offset"),Object(o.createTextVNode)(" 字段，可以使弹出的消息距屏幕边缘偏移一段距离。注意在同一时刻，所有的 Notification 实例应当具有一个相同的偏移量。")])],-1),x=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open\">\n    偏移的消息\n  </el-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      open() {\n        this.$notify({\n          title: '偏移',\n          message: '这是一条带有偏移的提示消息',\n          offset: 100\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),C=Object(o.createVNode)("h3",{id:"shi-yong-html-pian-duan"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#shi-yong-html-pian-duan"},"¶"),Object(o.createTextVNode)(" 使用 HTML 片段")],-1),y=Object(o.createVNode)("p",null,[Object(o.createVNode)("code",null,"message"),Object(o.createTextVNode)(" 属性支持传入 HTML 片段")],-1),T=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("将"),Object(o.createVNode)("code",null,"dangerouslyUseHTMLString"),Object(o.createTextVNode)("属性设置为 true，"),Object(o.createVNode)("code",null,"message"),Object(o.createTextVNode)(" 就会被当作 HTML 片段处理。")])],-1),k=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open\">\n    使用 HTML 片段\n  </el-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      open() {\n        this.$notify({\n          title: 'HTML 片段',\n          dangerouslyUseHTMLString: true,\n          message: '<strong>这是 <i>HTML</i> 片段</strong>'\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),w=Object(o.createStaticVNode)('<div class="warning"><p><code>message</code> 属性虽然支持传入 HTML 片段，但是在网站上动态渲染任意 HTML 是非常危险的，因为容易导致 <a href="https://en.wikipedia.org/wiki/Cross-site_scripting">XSS 攻击</a>。因此在 <code>dangerouslyUseHTMLString</code> 打开的情况下，请确保 <code>message</code> 的内容是可信的，<strong>永远不要</strong>将用户提交的内容赋值给 <code>message</code> 属性。</p></div><h3 id="yin-cang-guan-bi-an-niu"><a class="header-anchor" href="#yin-cang-guan-bi-an-niu">¶</a> 隐藏关闭按钮</h3><p>可以不显示关闭按钮</p>',3),v=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("将"),Object(o.createVNode)("code",null,"showClose"),Object(o.createTextVNode)("属性设置为"),Object(o.createVNode)("code",null,"false"),Object(o.createTextVNode)("即可隐藏关闭按钮。")])],-1),$=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open\">\n    隐藏关闭按钮\n  </el-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      open() {\n        this.$notify.success({\n          title: 'Info',\n          message: '这是一条没有关闭按钮的消息',\n          showClose: false\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),_=Object(o.createStaticVNode)('<h3 id="quan-ju-fang-fa"><a class="header-anchor" href="#quan-ju-fang-fa">¶</a> 全局方法</h3><p>Element Plus 为 <code>Vue.prototype</code> 添加了全局方法 <code>$notify</code>。因此在 vue instance 中可以采用本页面中的方式调用 Notification。</p><h3 id="dan-du-yin-yong"><a class="header-anchor" href="#dan-du-yin-yong">¶</a> 单独引用</h3><p>单独引入 Notification：</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> { Notification } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\n</code></pre><p>此时调用方法为 <code>Notification(options)</code>。我们也为每个 type 定义了各自的方法，如 <code>Notification.success(options)</code>。并且可以调用 <code>Notification.closeAll()</code> 手动关闭所有实例。</p><h3 id="options"><a class="header-anchor" href="#options">¶</a> Options</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>标题</td><td>string</td><td>—</td><td>—</td></tr><tr><td>message</td><td>说明文字</td><td>string/Vue.VNode</td><td>—</td><td>—</td></tr><tr><td>dangerouslyUseHTMLString</td><td>是否将 message 属性作为 HTML 片段处理</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>type</td><td>主题样式，如果不在可选值内将被忽略</td><td>string</td><td>success/warning/info/error</td><td>—</td></tr><tr><td>iconClass</td><td>自定义图标的类名。若设置了 <code>type</code>，则 <code>iconClass</code> 会被覆盖</td><td>string</td><td>—</td><td>—</td></tr><tr><td>customClass</td><td>自定义类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>duration</td><td>显示时间, 毫秒。设为 0 则不会自动关闭</td><td>number</td><td>—</td><td>4500</td></tr><tr><td>position</td><td>自定义弹出位置</td><td>string</td><td>top-right/top-left/bottom-right/bottom-left</td><td>top-right</td></tr><tr><td>showClose</td><td>是否显示关闭按钮</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>onClose</td><td>关闭时的回调函数</td><td>function</td><td>—</td><td>—</td></tr><tr><td>onClick</td><td>点击 Notification 时的回调函数</td><td>function</td><td>—</td><td>—</td></tr><tr><td>offset</td><td>偏移的距离，在同一时刻，所有的 Notification 实例应当具有一个相同的偏移量</td><td>number</td><td>—</td><td>0</td></tr></tbody></table><h3 id="fang-fa"><a class="header-anchor" href="#fang-fa">¶</a> 方法</h3><p>调用 <code>Notification</code> 或 <code>this.$notify</code> 会返回当前 Notification 的实例。如果需要手动关闭实例，可以调用它的 <code>close</code> 方法。</p><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>close</td><td>关闭当前的 Notification</td></tr></tbody></table>',11);var H={name:"component-doc",components:{"element-demo0":function(){const{createTextVNode:e,resolveComponent:t,withCtx:n,createVNode:c,openBlock:d,createBlock:i}=o,l=e(" 可自动关闭 "),a=e(" 不会自动关闭 ");const{h:r}=o,s={methods:{open1(){this.$notify({title:"标题名称",message:r("i",{style:"color: teal"},"这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案这是提示文案")})},open2(){this.$notify({title:"提示",message:"这是一条不会自动关闭的消息",duration:0})}}};return Object.assign({render:function(e,o){const r=t("el-button");return d(),i("div",null,[c(r,{plain:"",onClick:e.open1},{default:n(()=>[l]),_:1},8,["onClick"]),c(r,{plain:"",onClick:e.open2},{default:n(()=>[a]),_:1},8,["onClick"])])}},s)}(),"element-demo1":function(){const{createTextVNode:e,resolveComponent:t,withCtx:n,createVNode:c,openBlock:d,createBlock:i}=o,l=e(" 成功 "),a=e(" 警告 "),r=e(" 消息 "),s=e(" 错误 ");const p={methods:{open1(){this.$notify({title:"成功",message:"这是一条成功的提示消息",type:"success"})},open2(){this.$notify({title:"警告",message:"这是一条警告的提示消息",type:"warning"})},open3(){this.$notify.info({title:"消息",message:"这是一条消息的提示消息"})},open4(){this.$notify.error({title:"错误",message:"这是一条错误的提示消息"})}}};return Object.assign({render:function(e,o){const p=t("el-button");return d(),i("div",null,[c(p,{plain:"",onClick:e.open1},{default:n(()=>[l]),_:1},8,["onClick"]),c(p,{plain:"",onClick:e.open2},{default:n(()=>[a]),_:1},8,["onClick"]),c(p,{plain:"",onClick:e.open3},{default:n(()=>[r]),_:1},8,["onClick"]),c(p,{plain:"",onClick:e.open4},{default:n(()=>[s]),_:1},8,["onClick"])])}},p)}(),"element-demo2":function(){const{createTextVNode:e,resolveComponent:t,withCtx:n,createVNode:c,openBlock:d,createBlock:i}=o,l=e(" 右上角 "),a=e(" 右下角 "),r=e(" 左下角 "),s=e(" 左上角 ");const p={methods:{open1(){this.$notify({title:"自定义位置",message:"右上角弹出的消息"})},open2(){this.$notify({title:"自定义位置",message:"右下角弹出的消息",position:"bottom-right"})},open3(){this.$notify({title:"自定义位置",message:"左下角弹出的消息",position:"bottom-left"})},open4(){this.$notify({title:"自定义位置",message:"左上角弹出的消息",position:"top-left"})}}};return Object.assign({render:function(e,o){const p=t("el-button");return d(),i("div",null,[c(p,{plain:"",onClick:e.open1},{default:n(()=>[l]),_:1},8,["onClick"]),c(p,{plain:"",onClick:e.open2},{default:n(()=>[a]),_:1},8,["onClick"]),c(p,{plain:"",onClick:e.open3},{default:n(()=>[r]),_:1},8,["onClick"]),c(p,{plain:"",onClick:e.open4},{default:n(()=>[s]),_:1},8,["onClick"])])}},p)}(),"element-demo3":function(){const{createTextVNode:e,resolveComponent:t,withCtx:n,createVNode:c,openBlock:d,createBlock:i}=o,l=e(" 偏移的消息 ");const a={methods:{open(){this.$notify({title:"偏移",message:"这是一条带有偏移的提示消息",offset:100})}}};return Object.assign({render:function(e,o){const a=t("el-button");return d(),i("div",null,[c(a,{plain:"",onClick:e.open},{default:n(()=>[l]),_:1},8,["onClick"])])}},a)}(),"element-demo4":function(){const{createTextVNode:e,resolveComponent:t,withCtx:n,createVNode:c,openBlock:d,createBlock:i}=o,l=e(" 使用 HTML 片段 ");const a={methods:{open(){this.$notify({title:"HTML 片段",dangerouslyUseHTMLString:!0,message:"<strong>这是 <i>HTML</i> 片段</strong>"})}}};return Object.assign({render:function(e,o){const a=t("el-button");return d(),i("div",null,[c(a,{plain:"",onClick:e.open},{default:n(()=>[l]),_:1},8,["onClick"])])}},a)}(),"element-demo5":function(){const{createTextVNode:e,resolveComponent:t,withCtx:n,createVNode:c,openBlock:d,createBlock:i}=o,l=e(" 隐藏关闭按钮 ");const a={methods:{open(){this.$notify.success({title:"Info",message:"这是一条没有关闭按钮的消息",showClose:!1})}}};return Object.assign({render:function(e,o){const a=t("el-button");return d(),i("div",null,[c(a,{plain:"",onClick:e.open},{default:n(()=>[l]),_:1},8,["onClick"])])}},a)}()},render:function(e,t,n,H,L,M){const B=Object(o.resolveComponent)("element-demo0"),S=Object(o.resolveComponent)("demo-block"),z=Object(o.resolveComponent)("element-demo1"),U=Object(o.resolveComponent)("element-demo2"),q=Object(o.resolveComponent)("element-demo3"),E=Object(o.resolveComponent)("element-demo4"),P=Object(o.resolveComponent)("element-demo5");return Object(o.openBlock)(),Object(o.createBlock)("section",c,[d,i,l,a,Object(o.createVNode)(S,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(B)]),highlight:Object(o.withCtx)(()=>[s]),default:Object(o.withCtx)(()=>[r]),_:1}),p,b,Object(o.createVNode)(S,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(z)]),highlight:Object(o.withCtx)(()=>[h]),default:Object(o.withCtx)(()=>[u]),_:1}),j,N,Object(o.createVNode)(S,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(U)]),highlight:Object(o.withCtx)(()=>[f]),default:Object(o.withCtx)(()=>[O]),_:1}),V,m,Object(o.createVNode)(S,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(q)]),highlight:Object(o.withCtx)(()=>[x]),default:Object(o.withCtx)(()=>[g]),_:1}),C,y,Object(o.createVNode)(S,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(E)]),highlight:Object(o.withCtx)(()=>[k]),default:Object(o.withCtx)(()=>[T]),_:1}),w,Object(o.createVNode)(S,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(P)]),highlight:Object(o.withCtx)(()=>[$]),default:Object(o.withCtx)(()=>[v]),_:1}),_])}};t.default=H}}]);