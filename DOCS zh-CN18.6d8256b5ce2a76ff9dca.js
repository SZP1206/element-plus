(window.webpackJsonp=window.webpackJsonp||[]).push([[196],{448:function(t,e,d){"use strict";d.r(e);var a=d(0);const n={class:"content element-doc"},r=Object(a.createStaticVNode)('<h2 id="datetimepicker-ri-qi-shi-jian-xuan-ze-qi"><a class="header-anchor" href="#datetimepicker-ri-qi-shi-jian-xuan-ze-qi">¶</a> DateTimePicker 日期时间选择器</h2><p>在同一个选择器里选择日期和时间</p><div class="tip"><p>DateTimePicker 由 DatePicker 和 TimePicker 派生，<code>Picker Options</code> 或者其他选项可以参照 DatePicker 和 TimePicker。</p></div><h3 id="ri-qi-he-shi-jian-dian"><a class="header-anchor" href="#ri-qi-he-shi-jian-dian">¶</a> 日期和时间点</h3>',4),c=Object(a.createVNode)("div",null,[Object(a.createVNode)("p",null,[Object(a.createTextVNode)("通过设置"),Object(a.createVNode)("code",null,"type"),Object(a.createTextVNode)("属性为"),Object(a.createVNode)("code",null,"datetime"),Object(a.createTextVNode)("，即可在同一个选择器里同时进行日期和时间的选择。快捷选项的使用方法与 Date Picker 相同。")])],-1),l=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<template>\n  <div class="block">\n    <span class="demonstration">默认</span>\n    <el-date-picker\n      v-model="value1"\n      type="datetime"\n      placeholder="选择日期时间">\n    </el-date-picker>\n  </div>\n  <div class="block">\n    <span class="demonstration">带快捷选项</span>\n    <el-date-picker\n      v-model="value2"\n      type="datetime"\n      placeholder="选择日期时间"\n      align="right"\n      :picker-options="pickerOptions">\n    </el-date-picker>\n  </div>\n  <div class="block">\n    <span class="demonstration">设置默认时间</span>\n    <el-date-picker\n      v-model="value3"\n      type="datetime"\n      placeholder="选择日期时间"\n      default-time="12:00:00">\n    </el-date-picker>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        pickerOptions: {\n          shortcuts: [{\n            text: \'今天\',\n            onClick(picker) {\n              picker.$emit(\'pick\', new Date());\n            }\n          }, {\n            text: \'昨天\',\n            onClick(picker) {\n              const date = new Date();\n              date.setTime(date.getTime() - 3600 * 1000 * 24);\n              picker.emit(\'pick\', date);\n            }\n          }, {\n            text: \'一周前\',\n            onClick(picker) {\n              const date = new Date();\n              date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n              picker.emit(\'pick\', date);\n            }\n          }]\n        },\n        value1: \'\',\n        value2: \'\',\n        value3: \'\'\n      };\n    }\n  };\n<\/script>\n')],-1),o=Object(a.createVNode)("h3",{id:"ri-qi-he-shi-jian-fan-wei"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#ri-qi-he-shi-jian-fan-wei"},"¶"),Object(a.createTextVNode)(" 日期和时间范围")],-1),i=Object(a.createVNode)("div",null,[Object(a.createVNode)("p",null,[Object(a.createTextVNode)("设置"),Object(a.createVNode)("code",null,"type"),Object(a.createTextVNode)("为"),Object(a.createVNode)("code",null,"datetimerange"),Object(a.createTextVNode)("即可选择日期和时间范围")])],-1),s=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<template>\n  <div class="block">\n    <span class="demonstration">默认</span>\n    <el-date-picker\n      v-model="value1"\n      type="datetimerange"\n      range-separator="至"\n      start-placeholder="开始日期"\n      end-placeholder="结束日期">\n    </el-date-picker>\n  </div>\n  <div class="block">\n    <span class="demonstration">带快捷选项</span>\n    <el-date-picker\n      v-model="value2"\n      type="datetimerange"\n      :picker-options="pickerOptions"\n      range-separator="至"\n      start-placeholder="开始日期"\n      end-placeholder="结束日期"\n      align="right">\n    </el-date-picker>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        pickerOptions: {\n          shortcuts: [{\n            text: \'最近一周\',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n              picker.$emit(\'pick\', [start, end]);\n            }\n          }, {\n            text: \'最近一个月\',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n              picker.$emit(\'pick\', [start, end]);\n            }\n          }, {\n            text: \'最近三个月\',\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n              picker.$emit(\'pick\', [start, end]);\n            }\n          }]\n        },\n        value1: [new Date(2000, 10, 10, 10, 10), new Date(2000, 10, 11, 10, 10)],\n        value2: \'\'\n      };\n    }\n  };\n<\/script>\n')],-1),p=Object(a.createVNode)("h3",{id:"mo-ren-de-qi-shi-yu-jie-shu-shi-ke"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#mo-ren-de-qi-shi-yu-jie-shu-shi-ke"},"¶"),Object(a.createTextVNode)(" 默认的起始与结束时刻")],-1),h=Object(a.createVNode)("div",null,[Object(a.createVNode)("p",null,[Object(a.createTextVNode)("使用"),Object(a.createVNode)("code",null,"datetimerange"),Object(a.createTextVNode)("进行范围选择时，在日期选择面板中选定起始与结束的日期，默认会使用该日期的"),Object(a.createVNode)("code",null,"00:00:00"),Object(a.createTextVNode)("作为起始与结束的时刻；通过选项"),Object(a.createVNode)("code",null,"default-time"),Object(a.createTextVNode)("可以控制选中起始与结束日期时所使用的具体时刻。"),Object(a.createVNode)("code",null,"default-time"),Object(a.createTextVNode)("接受一个数组，数组每项值为字符串，形如"),Object(a.createVNode)("code",null,"12:00:00"),Object(a.createTextVNode)("，其中第一项控制起始日期的具体时刻，第二项控制结束日期的具体时刻。")])],-1),m=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<template>\n  <div class="block">\n    <span class="demonstration">起始日期时刻为 12:00:00</span>\n    <el-date-picker\n      v-model="value1"\n      type="datetimerange"\n      start-placeholder="开始日期"\n      end-placeholder="结束日期"\n      :default-time="[\'12:00:00\']">\n    </el-date-picker>\n  </div>\n  <div class="block">\n    <span class="demonstration">起始日期时刻为 12:00:00，结束日期时刻为 08:00:00</span>\n    <el-date-picker\n      v-model="value2"\n      type="datetimerange"\n      align="right"\n      start-placeholder="开始日期"\n      end-placeholder="结束日期"\n      :default-time="[\'12:00:00\', \'08:00:00\']">\n    </el-date-picker>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        value1: \'\',\n        value2: \'\'\n      };\n    }\n  };\n<\/script>\n')],-1),u=Object(a.createStaticVNode)('<h3 id="attributes"><a class="header-anchor" href="#attributes">¶</a> Attributes</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>value / v-model</td><td>绑定值</td><td>date(DateTimePicker) / array(DateTimeRangePicker)</td><td>—</td><td>—</td></tr><tr><td>readonly</td><td>完全只读</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>editable</td><td>文本框可输入</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>clearable</td><td>是否显示清除按钮</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>size</td><td>输入框尺寸</td><td>string</td><td>large, small, mini</td><td>—</td></tr><tr><td>placeholder</td><td>非范围选择时的占位内容</td><td>string</td><td>—</td><td>—</td></tr><tr><td>start-placeholder</td><td>范围选择时开始日期的占位内容</td><td>string</td><td>—</td><td>—</td></tr><tr><td>end-placeholder</td><td>范围选择时结束日期的占位内容</td><td>string</td><td>—</td><td>—</td></tr><tr><td>time-arrow-control</td><td>是否使用箭头进行时间选择</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>type</td><td>显示类型</td><td>string</td><td>year/month/date/week/ datetime/datetimerange/daterange</td><td>date</td></tr><tr><td>format</td><td>显示在输入框中的格式</td><td>string</td><td>见<a href="#/zh-CN/component/date-picker#ri-qi-ge-shi">日期格式</a></td><td>yyyy-MM-dd HH:mm:ss</td></tr><tr><td>align</td><td>对齐方式</td><td>string</td><td>left, center, right</td><td>left</td></tr><tr><td>popper-class</td><td>DateTimePicker 下拉框的类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>picker-options</td><td>当前时间日期选择器特有的选项参考下表</td><td>object</td><td>—</td><td>{}</td></tr><tr><td>range-separator</td><td>选择范围时的分隔符</td><td>string</td><td>-</td><td>&#39;-&#39;</td></tr><tr><td>default-value</td><td>可选，选择器打开时默认显示的时间</td><td>Date</td><td>可被<code>new Date()</code>解析</td><td>—</td></tr><tr><td>default-time</td><td>选中日期后的默认具体时刻</td><td>非范围选择时：string / 范围选择时：string[]</td><td>非范围选择时：形如<code>12:00:00</code>的字符串；范围选择时：数组，长度为 2，每项值为字符串，形如<code>12:00:00</code>，第一项指定开始日期的时刻，第二项指定结束日期的时刻。不指定会使用时刻 <code>00:00:00</code></td><td>—</td></tr><tr><td>value-format</td><td>可选，绑定值的格式。不指定则绑定值为 Date 对象</td><td>string</td><td>见<a href="#/zh-CN/component/date-picker#ri-qi-ge-shi">日期格式</a></td><td>—</td></tr><tr><td>name</td><td>原生属性</td><td>string</td><td>—</td><td>—</td></tr><tr><td>unlink-panels</td><td>在范围选择器里取消两个日期面板之间的联动</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>prefix-icon</td><td>自定义头部图标的类名</td><td>string</td><td>—</td><td>el-icon-date</td></tr><tr><td>clear-icon</td><td>自定义清空图标的类名</td><td>string</td><td>—</td><td>el-icon-circle-close</td></tr></tbody></table><h3 id="picker-options"><a class="header-anchor" href="#picker-options">¶</a> Picker Options</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>shortcuts</td><td>设置快捷选项，需要传入 { text, onClick } 对象用法参考 demo 或下表</td><td>Object[]</td><td>—</td><td>—</td></tr><tr><td>disabledDate</td><td>设置禁用状态，参数为当前日期，要求返回 Boolean</td><td>Function</td><td>—</td><td>—</td></tr><tr><td>cellClassName</td><td>设置日期的 className</td><td>Function(Date)</td><td>—</td><td>—</td></tr><tr><td>firstDayOfWeek</td><td>周起始日</td><td>Number</td><td>1 到 7</td><td>7</td></tr></tbody></table><h3 id="shortcuts"><a class="header-anchor" href="#shortcuts">¶</a> Shortcuts</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>text</td><td>标题文本</td><td>string</td><td>—</td><td>—</td></tr><tr><td>onClick</td><td>选中后的回调函数，参数是 vm，可通过触发 &#39;pick&#39; 事件设置选择器的值。例如 vm.$emit(&#39;pick&#39;, new Date())</td><td>function</td><td>—</td><td>—</td></tr></tbody></table><h3 id="events"><a class="header-anchor" href="#events">¶</a> Events</h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>change</td><td>用户确认选定的值时触发</td><td>组件绑定值。格式与绑定值一致，可受 <code>value-format</code> 控制</td></tr><tr><td>blur</td><td>当 input 失去焦点时触发</td><td>组件实例</td></tr><tr><td>focus</td><td>当 input 获得焦点时触发</td><td>组件实例</td></tr></tbody></table><h3 id="methods"><a class="header-anchor" href="#methods">¶</a> Methods</h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>focus</td><td>使 input 获取焦点</td><td>—</td></tr></tbody></table><h3 id="slots"><a class="header-anchor" href="#slots">¶</a> Slots</h3><table><thead><tr><th>Name</th><th>说明</th></tr></thead><tbody><tr><td>range-separator</td><td>自定义分隔符</td></tr></tbody></table>',12);var b={name:"component-doc",components:{"element-demo0":function(){const{createVNode:t,resolveComponent:e,openBlock:d,createBlock:n}=a,r={class:"block"},c=t("span",{class:"demonstration"},"默认",-1),l={class:"block"},o=t("span",{class:"demonstration"},"带快捷选项",-1),i={class:"block"},s=t("span",{class:"demonstration"},"设置默认时间",-1);const p={data:()=>({pickerOptions:{shortcuts:[{text:"今天",onClick(t){t.$emit("pick",new Date)}},{text:"昨天",onClick(t){const e=new Date;e.setTime(e.getTime()-864e5),t.emit("pick",e)}},{text:"一周前",onClick(t){const e=new Date;e.setTime(e.getTime()-6048e5),t.emit("pick",e)}}]},value1:"",value2:"",value3:""})};return Object.assign({render:function(a,p){const h=e("el-date-picker");return d(),n("div",null,[t("div",r,[c,t(h,{modelValue:a.value1,"onUpdate:modelValue":p[1]||(p[1]=t=>a.value1=t),type:"datetime",placeholder:"选择日期时间"},null,8,["modelValue"])]),t("div",l,[o,t(h,{modelValue:a.value2,"onUpdate:modelValue":p[2]||(p[2]=t=>a.value2=t),type:"datetime",placeholder:"选择日期时间",align:"right","picker-options":a.pickerOptions},null,8,["modelValue","picker-options"])]),t("div",i,[s,t(h,{modelValue:a.value3,"onUpdate:modelValue":p[3]||(p[3]=t=>a.value3=t),type:"datetime",placeholder:"选择日期时间","default-time":"12:00:00"},null,8,["modelValue"])])])}},p)}(),"element-demo1":function(){const{createVNode:t,resolveComponent:e,openBlock:d,createBlock:n}=a,r={class:"block"},c=t("span",{class:"demonstration"},"默认",-1),l={class:"block"},o=t("span",{class:"demonstration"},"带快捷选项",-1);const i={data:()=>({pickerOptions:{shortcuts:[{text:"最近一周",onClick(t){const e=new Date,d=new Date;d.setTime(d.getTime()-6048e5),t.$emit("pick",[d,e])}},{text:"最近一个月",onClick(t){const e=new Date,d=new Date;d.setTime(d.getTime()-2592e6),t.$emit("pick",[d,e])}},{text:"最近三个月",onClick(t){const e=new Date,d=new Date;d.setTime(d.getTime()-7776e6),t.$emit("pick",[d,e])}}]},value1:[new Date(2e3,10,10,10,10),new Date(2e3,10,11,10,10)],value2:""})};return Object.assign({render:function(a,i){const s=e("el-date-picker");return d(),n("div",null,[t("div",r,[c,t(s,{modelValue:a.value1,"onUpdate:modelValue":i[1]||(i[1]=t=>a.value1=t),type:"datetimerange","range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期"},null,8,["modelValue"])]),t("div",l,[o,t(s,{modelValue:a.value2,"onUpdate:modelValue":i[2]||(i[2]=t=>a.value2=t),type:"datetimerange","picker-options":a.pickerOptions,"range-separator":"至","start-placeholder":"开始日期","end-placeholder":"结束日期",align:"right"},null,8,["modelValue","picker-options"])])])}},i)}(),"element-demo2":function(){const{createVNode:t,resolveComponent:e,openBlock:d,createBlock:n}=a,r={class:"block"},c=t("span",{class:"demonstration"},"起始日期时刻为 12:00:00",-1),l={class:"block"},o=t("span",{class:"demonstration"},"起始日期时刻为 12:00:00，结束日期时刻为 08:00:00",-1);const i={data:()=>({value1:"",value2:""})};return Object.assign({render:function(a,i){const s=e("el-date-picker");return d(),n("div",null,[t("div",r,[c,t(s,{modelValue:a.value1,"onUpdate:modelValue":i[1]||(i[1]=t=>a.value1=t),type:"datetimerange","start-placeholder":"开始日期","end-placeholder":"结束日期","default-time":["12:00:00"]},null,8,["modelValue"])]),t("div",l,[o,t(s,{modelValue:a.value2,"onUpdate:modelValue":i[2]||(i[2]=t=>a.value2=t),type:"datetimerange",align:"right","start-placeholder":"开始日期","end-placeholder":"结束日期","default-time":["12:00:00","08:00:00"]},null,8,["modelValue"])])])}},i)}()},render:function(t,e,d,b,k,v){const O=Object(a.resolveComponent)("element-demo0"),j=Object(a.resolveComponent)("demo-block"),g=Object(a.resolveComponent)("element-demo1"),V=Object(a.resolveComponent)("element-demo2");return Object(a.openBlock)(),Object(a.createBlock)("section",n,[r,Object(a.createVNode)(j,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)(O)]),highlight:Object(a.withCtx)(()=>[l]),default:Object(a.withCtx)(()=>[c]),_:1}),o,Object(a.createVNode)(j,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)(g)]),highlight:Object(a.withCtx)(()=>[s]),default:Object(a.withCtx)(()=>[i]),_:1}),p,Object(a.createVNode)(j,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)(V)]),highlight:Object(a.withCtx)(()=>[m]),default:Object(a.withCtx)(()=>[h]),_:1}),u])}};e.default=b}}]);