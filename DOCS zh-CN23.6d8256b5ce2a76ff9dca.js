(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{453:function(e,t,l){"use strict";l.r(t);var o=l(0);const r={class:"content element-doc"},a=Object(o.createVNode)("h2",{id:"form-biao-dan"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#form-biao-dan"},"¶"),Object(o.createTextVNode)(" Form 表单")],-1),n=Object(o.createVNode)("p",null,"由输入框、选择器、单选框、多选框等控件组成，用以收集、校验、提交数据",-1),d=Object(o.createVNode)("h3",{id:"dian-xing-biao-dan"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#dian-xing-biao-dan"},"¶"),Object(o.createTextVNode)(" 典型表单")],-1),i=Object(o.createVNode)("p",null,"包括各种表单项，比如输入框、选择器、开关、单选框、多选框等。",-1),m=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,"在 Form 组件中，每一个表单域由一个 Form-Item 组件构成，表单域中可以放置各种类型的表单控件，包括 Input、Select、Checkbox、Radio、Switch、DatePicker、TimePicker")],-1),c=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-form ref="form" :model="form" label-width="80px">\n  <el-form-item label="活动名称">\n    <el-input v-model="form.name"></el-input>\n  </el-form-item>\n  <el-form-item label="活动区域">\n    <el-select v-model="form.region" placeholder="请选择活动区域">\n      <el-option label="区域一" value="shanghai"></el-option>\n      <el-option label="区域二" value="beijing"></el-option>\n    </el-select>\n  </el-form-item>\n  <el-form-item label="活动时间">\n    <el-col :span="11">\n      <el-date-picker type="date" placeholder="选择日期" v-model="form.date1" style="width: 100%;"></el-date-picker>\n    </el-col>\n    <el-col class="line" :span="2">-</el-col>\n    <el-col :span="11">\n      <el-time-picker placeholder="选择时间" v-model="form.date2" style="width: 100%;"></el-time-picker>\n    </el-col>\n  </el-form-item>\n  <el-form-item label="即时配送">\n    <el-switch v-model="form.delivery"></el-switch>\n  </el-form-item>\n  <el-form-item label="活动性质">\n    <el-checkbox-group v-model="form.type">\n      <el-checkbox label="美食/餐厅线上活动" name="type"></el-checkbox>\n      <el-checkbox label="地推活动" name="type"></el-checkbox>\n      <el-checkbox label="线下主题活动" name="type"></el-checkbox>\n      <el-checkbox label="单纯品牌曝光" name="type"></el-checkbox>\n    </el-checkbox-group>\n  </el-form-item>\n  <el-form-item label="特殊资源">\n    <el-radio-group v-model="form.resource">\n      <el-radio label="线上品牌商赞助"></el-radio>\n      <el-radio label="线下场地免费"></el-radio>\n    </el-radio-group>\n  </el-form-item>\n  <el-form-item label="活动形式">\n    <el-input type="textarea" v-model="form.desc"></el-input>\n  </el-form-item>\n  <el-form-item>\n    <el-button type="primary" @click="onSubmit">立即创建</el-button>\n    <el-button>取消</el-button>\n  </el-form-item>\n</el-form>\n<script>\n  export default {\n    data() {\n      return {\n        form: {\n          name: \'\',\n          region: \'\',\n          date1: \'\',\n          date2: \'\',\n          delivery: false,\n          type: [],\n          resource: \'\',\n          desc: \'\'\n        }\n      }\n    },\n    methods: {\n      onSubmit() {\n        console.log(\'submit!\');\n      }\n    }\n  }\n<\/script>\n')],-1),u=Object(o.createStaticVNode)('<div class="tip"><p>W3C 标准中有如下<a href="https://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2">规定</a>：</p><blockquote><p><i>When there is only one single-line text input field in a form, the user agent should accept Enter in that field as a request to submit the form.</i></p></blockquote><p>即：当一个 form 元素中只有一个输入框时，在该输入框中按下回车应提交该表单。如果希望阻止这一默认行为，可以在 <code>&lt;el-form&gt;</code> 标签上添加 <code>@submit.native.prevent</code>。</p></div><h3 id="xing-nei-biao-dan"><a class="header-anchor" href="#xing-nei-biao-dan">¶</a> 行内表单</h3><p>当垂直方向空间受限且表单较简单时，可以在一行内放置表单。</p>',3),s=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("设置 "),Object(o.createVNode)("code",null,"inline"),Object(o.createTextVNode)(" 属性可以让表单域变为行内的表单域")])],-1),b=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-form :inline="true" :model="formInline" class="demo-form-inline">\n  <el-form-item label="审批人">\n    <el-input v-model="formInline.user" placeholder="审批人"></el-input>\n  </el-form-item>\n  <el-form-item label="活动区域">\n    <el-select v-model="formInline.region" placeholder="活动区域">\n      <el-option label="区域一" value="shanghai"></el-option>\n      <el-option label="区域二" value="beijing"></el-option>\n    </el-select>\n  </el-form-item>\n  <el-form-item>\n    <el-button type="primary" @click="onSubmit">查询</el-button>\n  </el-form-item>\n</el-form>\n<script>\n  export default {\n    data() {\n      return {\n        formInline: {\n          user: \'\',\n          region: \'\'\n        }\n      }\n    },\n    methods: {\n      onSubmit() {\n        console.log(\'submit!\');\n      }\n    }\n  }\n<\/script>\n')],-1),p=Object(o.createVNode)("h3",{id:"dui-qi-fang-shi"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#dui-qi-fang-shi"},"¶"),Object(o.createTextVNode)(" 对齐方式")],-1),f=Object(o.createVNode)("p",null,"根据具体目标和制约因素，选择最佳的标签对齐方式。",-1),h=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("通过设置 "),Object(o.createVNode)("code",null,"label-position"),Object(o.createTextVNode)(" 属性可以改变表单域标签的位置，可选值为 "),Object(o.createVNode)("code",null,"top"),Object(o.createTextVNode)("、"),Object(o.createVNode)("code",null,"left"),Object(o.createTextVNode)("，当设为 "),Object(o.createVNode)("code",null,"top"),Object(o.createTextVNode)(" 时标签会置于表单域的顶部")])],-1),g=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-radio-group v-model="labelPosition" size="small">\n  <el-radio-button label="left">左对齐</el-radio-button>\n  <el-radio-button label="right">右对齐</el-radio-button>\n  <el-radio-button label="top">顶部对齐</el-radio-button>\n</el-radio-group>\n<div style="margin: 20px;"></div>\n<el-form :label-position="labelPosition" label-width="80px" :model="formLabelAlign">\n  <el-form-item label="名称">\n    <el-input v-model="formLabelAlign.name"></el-input>\n  </el-form-item>\n  <el-form-item label="活动区域">\n    <el-input v-model="formLabelAlign.region"></el-input>\n  </el-form-item>\n  <el-form-item label="活动形式">\n    <el-input v-model="formLabelAlign.type"></el-input>\n  </el-form-item>\n</el-form>\n<script>\n  export default {\n    data() {\n      return {\n        labelPosition: \'right\',\n        formLabelAlign: {\n          name: \'\',\n          region: \'\',\n          type: \'\'\n        }\n      };\n    }\n  }\n<\/script>\n')],-1),V=Object(o.createVNode)("h3",{id:"biao-dan-yan-zheng"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#biao-dan-yan-zheng"},"¶"),Object(o.createTextVNode)(" 表单验证")],-1),F=Object(o.createVNode)("p",null,"在防止用户犯错的前提下，尽可能让用户更早地发现并纠正错误。",-1),y=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Form 组件提供了表单验证的功能，只需要通过 "),Object(o.createVNode)("code",null,"rules"),Object(o.createTextVNode)(" 属性传入约定的验证规则，并将 Form-Item 的 "),Object(o.createVNode)("code",null,"prop"),Object(o.createTextVNode)(" 属性设置为需校验的字段名即可。校验规则参见 "),Object(o.createVNode)("a",{href:"https://github.com/yiminghe/async-validator"},"async-validator")])],-1),v=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">\n  <el-form-item label="活动名称" prop="name">\n    <el-input v-model="ruleForm.name"></el-input>\n  </el-form-item>\n  <el-form-item label="活动区域" prop="region">\n    <el-select v-model="ruleForm.region" placeholder="请选择活动区域">\n      <el-option label="区域一" value="shanghai"></el-option>\n      <el-option label="区域二" value="beijing"></el-option>\n    </el-select>\n  </el-form-item>\n  <el-form-item label="活动时间" required>\n    <el-col :span="11">\n      <el-form-item prop="date1">\n        <el-date-picker type="date" placeholder="选择日期" v-model="ruleForm.date1" style="width: 100%;"></el-date-picker>\n      </el-form-item>\n    </el-col>\n    <el-col class="line" :span="2">-</el-col>\n    <el-col :span="11">\n      <el-form-item prop="date2">\n        <el-time-picker placeholder="选择时间" v-model="ruleForm.date2" style="width: 100%;"></el-time-picker>\n      </el-form-item>\n    </el-col>\n  </el-form-item>\n  <el-form-item label="即时配送" prop="delivery">\n    <el-switch v-model="ruleForm.delivery"></el-switch>\n  </el-form-item>\n  <el-form-item label="活动性质" prop="type">\n    <el-checkbox-group v-model="ruleForm.type">\n      <el-checkbox label="美食/餐厅线上活动" name="type"></el-checkbox>\n      <el-checkbox label="地推活动" name="type"></el-checkbox>\n      <el-checkbox label="线下主题活动" name="type"></el-checkbox>\n      <el-checkbox label="单纯品牌曝光" name="type"></el-checkbox>\n    </el-checkbox-group>\n  </el-form-item>\n  <el-form-item label="特殊资源" prop="resource">\n    <el-radio-group v-model="ruleForm.resource">\n      <el-radio label="线上品牌商赞助"></el-radio>\n      <el-radio label="线下场地免费"></el-radio>\n    </el-radio-group>\n  </el-form-item>\n  <el-form-item label="活动形式" prop="desc">\n    <el-input type="textarea" v-model="ruleForm.desc"></el-input>\n  </el-form-item>\n  <el-form-item>\n    <el-button type="primary" @click="submitForm(\'ruleForm\')">立即创建</el-button>\n    <el-button @click="resetForm(\'ruleForm\')">重置</el-button>\n  </el-form-item>\n</el-form>\n<script>\n  export default {\n    data() {\n      return {\n        ruleForm: {\n          name: \'\',\n          region: \'\',\n          date1: \'\',\n          date2: \'\',\n          delivery: false,\n          type: [],\n          resource: \'\',\n          desc: \'\'\n        },\n        rules: {\n          name: [\n            { required: true, message: \'请输入活动名称\', trigger: \'blur\' },\n            { min: 3, max: 5, message: \'长度在 3 到 5 个字符\', trigger: \'blur\' }\n          ],\n          region: [\n            { required: true, message: \'请选择活动区域\', trigger: \'change\' }\n          ],\n          date1: [\n            { type: \'date\', required: true, message: \'请选择日期\', trigger: \'change\' }\n          ],\n          date2: [\n            { type: \'date\', required: true, message: \'请选择时间\', trigger: \'change\' }\n          ],\n          type: [\n            { type: \'array\', required: true, message: \'请至少选择一个活动性质\', trigger: \'change\' }\n          ],\n          resource: [\n            { required: true, message: \'请选择活动资源\', trigger: \'change\' }\n          ],\n          desc: [\n            { required: true, message: \'请填写活动形式\', trigger: \'blur\' }\n          ]\n        }\n      };\n    },\n    methods: {\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert(\'submit!\');\n          } else {\n            console.log(\'error submit!!\');\n            return false;\n          }\n        });\n      },\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n  }\n<\/script>\n')],-1),j=Object(o.createVNode)("h3",{id:"zi-ding-yi-xiao-yan-gui-ze"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#zi-ding-yi-xiao-yan-gui-ze"},"¶"),Object(o.createTextVNode)(" 自定义校验规则")],-1),O=Object(o.createVNode)("p",null,"这个例子中展示了如何使用自定义验证规则来完成密码的二次验证。",-1),x=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("本例还使用"),Object(o.createVNode)("code",null,"status-icon"),Object(o.createTextVNode)("属性为输入框添加了表示校验结果的反馈图标。")])],-1),N=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-form :model="ruleForm" status-icon :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">\n  <el-form-item label="密码" prop="pass">\n    <el-input type="password" v-model="ruleForm.pass" autocomplete="off"></el-input>\n  </el-form-item>\n  <el-form-item label="确认密码" prop="checkPass">\n    <el-input type="password" v-model="ruleForm.checkPass" autocomplete="off"></el-input>\n  </el-form-item>\n  <el-form-item label="年龄" prop="age">\n    <el-input v-model.number="ruleForm.age"></el-input>\n  </el-form-item>\n  <el-form-item>\n    <el-button type="primary" @click="submitForm(\'ruleForm\')">提交</el-button>\n    <el-button @click="resetForm(\'ruleForm\')">重置</el-button>\n  </el-form-item>\n</el-form>\n<script>\n  export default {\n    data() {\n      var checkAge = (rule, value, callback) => {\n        if (!value) {\n          return callback(new Error(\'年龄不能为空\'));\n        }\n        setTimeout(() => {\n          if (!Number.isInteger(value)) {\n            callback(new Error(\'请输入数字值\'));\n          } else {\n            if (value < 18) {\n              callback(new Error(\'必须年满18岁\'));\n            } else {\n              callback();\n            }\n          }\n        }, 1000);\n      };\n      var validatePass = (rule, value, callback) => {\n        if (value === \'\') {\n          callback(new Error(\'请输入密码\'));\n        } else {\n          if (this.ruleForm.checkPass !== \'\') {\n            this.$refs.ruleForm.validateField(\'checkPass\');\n          }\n          callback();\n        }\n      };\n      var validatePass2 = (rule, value, callback) => {\n        if (value === \'\') {\n          callback(new Error(\'请再次输入密码\'));\n        } else if (value !== this.ruleForm.pass) {\n          callback(new Error(\'两次输入密码不一致!\'));\n        } else {\n          callback();\n        }\n      };\n      return {\n        ruleForm: {\n          pass: \'\',\n          checkPass: \'\',\n          age: \'\'\n        },\n        rules: {\n          pass: [\n            { validator: validatePass, trigger: \'blur\' }\n          ],\n          checkPass: [\n            { validator: validatePass2, trigger: \'blur\' }\n          ],\n          age: [\n            { validator: checkAge, trigger: \'blur\' }\n          ]\n        }\n      };\n    },\n    methods: {\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert(\'submit!\');\n          } else {\n            console.log(\'error submit!!\');\n            return false;\n          }\n        });\n      },\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n  }\n<\/script>\n')],-1),k=Object(o.createVNode)("div",{class:"tip"},[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("自定义校验 callback 必须被调用。 更多高级用法可参考 "),Object(o.createVNode)("a",{href:"https://github.com/yiminghe/async-validator"},"async-validator"),Object(o.createTextVNode)("。")])],-1),w=Object(o.createVNode)("h3",{id:"dong-tai-zeng-jian-biao-dan-xiang"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#dong-tai-zeng-jian-biao-dan-xiang"},"¶"),Object(o.createTextVNode)(" 动态增减表单项")],-1),_=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,"除了在 Form 组件上一次性传递所有的验证规则外还可以在单个的表单域上传递属性的验证规则")],-1),C=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-form :model="dynamicValidateForm" ref="dynamicValidateForm" label-width="100px" class="demo-dynamic">\n  <el-form-item\n    prop="email"\n    label="邮箱"\n    :rules="[\n      { required: true, message: \'请输入邮箱地址\', trigger: \'blur\' },\n      { type: \'email\', message: \'请输入正确的邮箱地址\', trigger: [\'blur\', \'change\'] }\n    ]"\n  >\n    <el-input v-model="dynamicValidateForm.email"></el-input>\n  </el-form-item>\n  <el-form-item\n    v-for="(domain, index) in dynamicValidateForm.domains"\n    :label="\'域名\' + index"\n    :key="domain.key"\n    :prop="\'domains.\' + index + \'.value\'"\n    :rules="{\n      required: true, message: \'域名不能为空\', trigger: \'blur\'\n    }"\n  >\n    <el-input v-model="domain.value"></el-input><el-button @click.prevent="removeDomain(domain)">删除</el-button>\n  </el-form-item>\n  <el-form-item>\n    <el-button type="primary" @click="submitForm(\'dynamicValidateForm\')">提交</el-button>\n    <el-button @click="addDomain">新增域名</el-button>\n    <el-button @click="resetForm(\'dynamicValidateForm\')">重置</el-button>\n  </el-form-item>\n</el-form>\n<script>\n  export default {\n    data() {\n      return {\n        dynamicValidateForm: {\n          domains: [{\n            value: \'\'\n          }],\n          email: \'\'\n        }\n      };\n    },\n    methods: {\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert(\'submit!\');\n          } else {\n            console.log(\'error submit!!\');\n            return false;\n          }\n        });\n      },\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      },\n      removeDomain(item) {\n        var index = this.dynamicValidateForm.domains.indexOf(item)\n        if (index !== -1) {\n          this.dynamicValidateForm.domains.splice(index, 1)\n        }\n      },\n      addDomain() {\n        this.dynamicValidateForm.domains.push({\n          value: \'\',\n          key: Date.now()\n        });\n      }\n    }\n  }\n<\/script>\n')],-1),z=Object(o.createVNode)("h3",{id:"shu-zi-lei-xing-yan-zheng"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#shu-zi-lei-xing-yan-zheng"},"¶"),Object(o.createTextVNode)(" 数字类型验证")],-1),T=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("数字类型的验证需要在 "),Object(o.createVNode)("code",null,"v-model"),Object(o.createTextVNode)(" 处加上 "),Object(o.createVNode)("code",null,".number"),Object(o.createTextVNode)(" 的修饰符，这是 "),Object(o.createVNode)("code",null,"Vue"),Object(o.createTextVNode)(" 自身提供的用于将绑定值转化为 "),Object(o.createVNode)("code",null,"number"),Object(o.createTextVNode)(" 类型的修饰符。")])],-1),U=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-form :model="numberValidateForm" ref="numberValidateForm" label-width="100px" class="demo-ruleForm">\n  <el-form-item\n    label="年龄"\n    prop="age"\n    :rules="[\n      { required: true, message: \'年龄不能为空\'},\n      { type: \'number\', message: \'年龄必须为数字值\'}\n    ]"\n  >\n    <el-input type="age" v-model.number="numberValidateForm.age" autocomplete="off"></el-input>\n  </el-form-item>\n  <el-form-item>\n    <el-button type="primary" @click="submitForm(\'numberValidateForm\')">提交</el-button>\n    <el-button @click="resetForm(\'numberValidateForm\')">重置</el-button>\n  </el-form-item>\n</el-form>\n<script>\n  export default {\n    data() {\n      return {\n        numberValidateForm: {\n          age: \'\'\n        }\n      };\n    },\n    methods: {\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert(\'submit!\');\n          } else {\n            console.log(\'error submit!!\');\n            return false;\n          }\n        });\n      },\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n  }\n<\/script>\n')],-1),q=Object(o.createStaticVNode)('<div class="tip"><p>嵌套在 <code>el-form-item</code> 中的 <code>el-form-item</code> 标签宽度默认为零，不会继承 <code>el-form</code> 的 <code>label-width</code>。如果需要可以为其单独设置 <code>label-width</code> 属性。</p></div><h3 id="biao-dan-nei-zu-jian-chi-cun-kong-zhi"><a class="header-anchor" href="#biao-dan-nei-zu-jian-chi-cun-kong-zhi">¶</a> 表单内组件尺寸控制</h3><p>通过设置 Form 上的 <code>size</code> 属性可以使该表单内所有可调节大小的组件继承该尺寸。Form-Item 也具有该属性。</p>',3),P=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("如果希望某个表单项或某个表单组件的尺寸不同于 Form 上的"),Object(o.createVNode)("code",null,"size"),Object(o.createTextVNode)("属性，直接为这个表单项或表单组件设置自己的"),Object(o.createVNode)("code",null,"size"),Object(o.createTextVNode)("即可。")])],-1),I=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-form ref="form" :model="sizeForm" label-width="80px" size="mini">\n  <el-form-item label="活动名称">\n    <el-input v-model="sizeForm.name"></el-input>\n  </el-form-item>\n  <el-form-item label="活动区域">\n    <el-select v-model="sizeForm.region" placeholder="请选择活动区域">\n      <el-option label="区域一" value="shanghai"></el-option>\n      <el-option label="区域二" value="beijing"></el-option>\n    </el-select>\n  </el-form-item>\n  <el-form-item label="活动时间">\n    <el-col :span="11">\n      <el-date-picker type="date" placeholder="选择日期" v-model="sizeForm.date1" style="width: 100%;"></el-date-picker>\n    </el-col>\n    <el-col class="line" :span="2">-</el-col>\n    <el-col :span="11">\n      <el-time-picker placeholder="选择时间" v-model="sizeForm.date2" style="width: 100%;"></el-time-picker>\n    </el-col>\n  </el-form-item>\n  <el-form-item label="活动性质">\n    <el-checkbox-group v-model="sizeForm.type">\n      <el-checkbox-button label="美食/餐厅线上活动" name="type"></el-checkbox-button>\n      <el-checkbox-button label="地推活动" name="type"></el-checkbox-button>\n      <el-checkbox-button label="线下主题活动" name="type"></el-checkbox-button>\n    </el-checkbox-group>\n  </el-form-item>\n  <el-form-item label="特殊资源">\n    <el-radio-group v-model="sizeForm.resource" size="medium">\n      <el-radio border label="线上品牌商赞助"></el-radio>\n      <el-radio border label="线下场地免费"></el-radio>\n    </el-radio-group>\n  </el-form-item>\n  <el-form-item size="large">\n    <el-button type="primary" @click="onSubmit">立即创建</el-button>\n    <el-button>取消</el-button>\n  </el-form-item>\n</el-form>\n\n<script>\n  export default {\n    data() {\n      return {\n        sizeForm: {\n          name: \'\',\n          region: \'\',\n          date1: \'\',\n          date2: \'\',\n          delivery: false,\n          type: [],\n          resource: \'\',\n          desc: \'\'\n        }\n      };\n    },\n    methods: {\n      onSubmit() {\n        console.log(\'submit!\');\n      }\n    }\n  };\n<\/script>\n')],-1),S=Object(o.createStaticVNode)('<h3 id="form-attributes"><a class="header-anchor" href="#form-attributes">¶</a> Form Attributes</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>model</td><td>表单数据对象</td><td>object</td><td>—</td><td>—</td></tr><tr><td>rules</td><td>表单验证规则</td><td>object</td><td>—</td><td>—</td></tr><tr><td>inline</td><td>行内表单模式</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>label-position</td><td>表单域标签的位置，如果值为 left 或者 right 时，则需要设置 <code>label-width</code></td><td>string</td><td>right/left/top</td><td>right</td></tr><tr><td>label-width</td><td>表单域标签的宽度，例如 &#39;50px&#39;。作为 Form 直接子元素的 form-item 会继承该值。支持 <code>auto</code>。</td><td>string</td><td>—</td><td>—</td></tr><tr><td>label-suffix</td><td>表单域标签的后缀</td><td>string</td><td>—</td><td>—</td></tr><tr><td>hide-required-asterisk</td><td>是否显示必填字段的标签旁边的红色星号</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-message</td><td>是否显示校验错误信息</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>inline-message</td><td>是否以行内形式展示校验信息</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>status-icon</td><td>是否在输入框中显示校验结果反馈图标</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>validate-on-rule-change</td><td>是否在 <code>rules</code> 属性改变后立即触发一次验证</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>size</td><td>用于控制该表单内组件的尺寸</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>disabled</td><td>是否禁用该表单内的所有组件。若设置为 true，则表单内组件上的 disabled 属性不再生效</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id="form-methods"><a class="header-anchor" href="#form-methods">¶</a> Form Methods</h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>validate</td><td>对整个表单进行校验的方法，参数为一个回调函数。该回调函数会在校验结束后被调用，并传入两个参数：是否校验成功和未通过校验的字段。若不传入回调函数，则会返回一个 promise</td><td>Function(callback: Function(boolean, object))</td></tr><tr><td>validateField</td><td>对部分表单字段进行校验的方法</td><td>Function(props: array | string, callback: Function(errorMessage: string))</td></tr><tr><td>resetFields</td><td>对整个表单进行重置，将所有字段值重置为初始值并移除校验结果</td><td>—</td></tr><tr><td>clearValidate</td><td>移除表单项的校验结果。传入待移除的表单项的 prop 属性或者 prop 组成的数组，如不传则移除整个表单的校验结果</td><td>Function(props: array | string)</td></tr></tbody></table><h3 id="form-events"><a class="header-anchor" href="#form-events">¶</a> Form Events</h3><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>validate</td><td>任一表单项被校验后触发</td><td>被校验的表单项 prop 值，校验是否通过，错误消息（如果存在）</td></tr></tbody></table><h3 id="form-item-attributes"><a class="header-anchor" href="#form-item-attributes">¶</a> Form-Item Attributes</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>prop</td><td>表单域 model 字段，在使用 validate、resetFields 方法的情况下，该属性是必填的</td><td>string</td><td>传入 Form 组件的 <code>model</code> 中的字段</td><td>—</td></tr><tr><td>label</td><td>标签文本</td><td>string</td><td>—</td><td>—</td></tr><tr><td>label-width</td><td>表单域标签的的宽度，例如 &#39;50px&#39;。支持 <code>auto</code>。</td><td>string</td><td>—</td><td>—</td></tr><tr><td>required</td><td>是否必填，如不设置，则会根据校验规则自动生成</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>rules</td><td>表单验证规则</td><td>object</td><td>—</td><td>—</td></tr><tr><td>error</td><td>表单域验证错误信息, 设置该值会使表单验证状态变为<code>error</code>，并显示该错误信息</td><td>string</td><td>—</td><td>—</td></tr><tr><td>show-message</td><td>是否显示校验错误信息</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>inline-message</td><td>以行内形式展示校验信息</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>size</td><td>用于控制该表单域下组件的尺寸</td><td>string</td><td>medium / small / mini</td><td>-</td></tr></tbody></table><h3 id="form-item-slot"><a class="header-anchor" href="#form-item-slot">¶</a> Form-Item Slot</h3><table><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>—</td><td>Form Item 的内容</td></tr><tr><td>label</td><td>标签文本的内容</td></tr></tbody></table><h3 id="form-item-scoped-slot"><a class="header-anchor" href="#form-item-scoped-slot">¶</a> Form-Item Scoped Slot</h3><table><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>error</td><td>自定义表单校验信息的显示方式，参数为 { error }</td></tr></tbody></table><h3 id="form-item-methods"><a class="header-anchor" href="#form-item-methods">¶</a> Form-Item Methods</h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>resetField</td><td>对该表单项进行重置，将其值重置为初始值并移除校验结果</td><td>-</td></tr><tr><td>clearValidate</td><td>移除该表单项的校验结果</td><td>-</td></tr></tbody></table>',14);var B={name:"component-doc",components:{"element-demo0":function(){const{resolveComponent:e,createVNode:t,withCtx:l,createTextVNode:r,openBlock:a,createBlock:n}=o,d=r("-"),i=r("立即创建"),m=r("取消");const c={data:()=>({form:{name:"",region:"",date1:"",date2:"",delivery:!1,type:[],resource:"",desc:""}}),methods:{onSubmit(){console.log("submit!")}}};return Object.assign({render:function(o,r){const c=e("el-input"),u=e("el-form-item"),s=e("el-option"),b=e("el-select"),p=e("el-date-picker"),f=e("el-col"),h=e("el-time-picker"),g=e("el-switch"),V=e("el-checkbox"),F=e("el-checkbox-group"),y=e("el-radio"),v=e("el-radio-group"),j=e("el-button"),O=e("el-form");return a(),n("div",null,[t(O,{ref:"form",model:o.form,"label-width":"80px"},{default:l(()=>[t(u,{label:"活动名称"},{default:l(()=>[t(c,{modelValue:o.form.name,"onUpdate:modelValue":r[1]||(r[1]=e=>o.form.name=e)},null,8,["modelValue"])]),_:1}),t(u,{label:"活动区域"},{default:l(()=>[t(b,{modelValue:o.form.region,"onUpdate:modelValue":r[2]||(r[2]=e=>o.form.region=e),placeholder:"请选择活动区域"},{default:l(()=>[t(s,{label:"区域一",value:"shanghai"}),t(s,{label:"区域二",value:"beijing"})]),_:1},8,["modelValue"])]),_:1}),t(u,{label:"活动时间"},{default:l(()=>[t(f,{span:11},{default:l(()=>[t(p,{type:"date",placeholder:"选择日期",modelValue:o.form.date1,"onUpdate:modelValue":r[3]||(r[3]=e=>o.form.date1=e),style:{width:"100%"}},null,8,["modelValue"])]),_:1}),t(f,{class:"line",span:2},{default:l(()=>[d]),_:1}),t(f,{span:11},{default:l(()=>[t(h,{placeholder:"选择时间",modelValue:o.form.date2,"onUpdate:modelValue":r[4]||(r[4]=e=>o.form.date2=e),style:{width:"100%"}},null,8,["modelValue"])]),_:1})]),_:1}),t(u,{label:"即时配送"},{default:l(()=>[t(g,{modelValue:o.form.delivery,"onUpdate:modelValue":r[5]||(r[5]=e=>o.form.delivery=e)},null,8,["modelValue"])]),_:1}),t(u,{label:"活动性质"},{default:l(()=>[t(F,{modelValue:o.form.type,"onUpdate:modelValue":r[6]||(r[6]=e=>o.form.type=e)},{default:l(()=>[t(V,{label:"美食/餐厅线上活动",name:"type"}),t(V,{label:"地推活动",name:"type"}),t(V,{label:"线下主题活动",name:"type"}),t(V,{label:"单纯品牌曝光",name:"type"})]),_:1},8,["modelValue"])]),_:1}),t(u,{label:"特殊资源"},{default:l(()=>[t(v,{modelValue:o.form.resource,"onUpdate:modelValue":r[7]||(r[7]=e=>o.form.resource=e)},{default:l(()=>[t(y,{label:"线上品牌商赞助"}),t(y,{label:"线下场地免费"})]),_:1},8,["modelValue"])]),_:1}),t(u,{label:"活动形式"},{default:l(()=>[t(c,{type:"textarea",modelValue:o.form.desc,"onUpdate:modelValue":r[8]||(r[8]=e=>o.form.desc=e)},null,8,["modelValue"])]),_:1}),t(u,null,{default:l(()=>[t(j,{type:"primary",onClick:o.onSubmit},{default:l(()=>[i]),_:1},8,["onClick"]),t(j,null,{default:l(()=>[m]),_:1})]),_:1})]),_:1},8,["model"])])}},c)}(),"element-demo1":function(){const{resolveComponent:e,createVNode:t,withCtx:l,createTextVNode:r,openBlock:a,createBlock:n}=o,d=r("查询");const i={data:()=>({formInline:{user:"",region:""}}),methods:{onSubmit(){console.log("submit!")}}};return Object.assign({render:function(o,r){const i=e("el-input"),m=e("el-form-item"),c=e("el-option"),u=e("el-select"),s=e("el-button"),b=e("el-form");return a(),n("div",null,[t(b,{inline:!0,model:o.formInline,class:"demo-form-inline"},{default:l(()=>[t(m,{label:"审批人"},{default:l(()=>[t(i,{modelValue:o.formInline.user,"onUpdate:modelValue":r[1]||(r[1]=e=>o.formInline.user=e),placeholder:"审批人"},null,8,["modelValue"])]),_:1}),t(m,{label:"活动区域"},{default:l(()=>[t(u,{modelValue:o.formInline.region,"onUpdate:modelValue":r[2]||(r[2]=e=>o.formInline.region=e),placeholder:"活动区域"},{default:l(()=>[t(c,{label:"区域一",value:"shanghai"}),t(c,{label:"区域二",value:"beijing"})]),_:1},8,["modelValue"])]),_:1}),t(m,null,{default:l(()=>[t(s,{type:"primary",onClick:o.onSubmit},{default:l(()=>[d]),_:1},8,["onClick"])]),_:1})]),_:1},8,["model"])])}},i)}(),"element-demo2":function(){const{createTextVNode:e,resolveComponent:t,withCtx:l,createVNode:r,openBlock:a,createBlock:n}=o,d=e("左对齐"),i=e("右对齐"),m=e("顶部对齐"),c=r("div",{style:{margin:"20px"}},null,-1);const u={data:()=>({labelPosition:"right",formLabelAlign:{name:"",region:"",type:""}})};return Object.assign({render:function(e,o){const u=t("el-radio-button"),s=t("el-radio-group"),b=t("el-input"),p=t("el-form-item"),f=t("el-form");return a(),n("div",null,[r(s,{modelValue:e.labelPosition,"onUpdate:modelValue":o[1]||(o[1]=t=>e.labelPosition=t),size:"small"},{default:l(()=>[r(u,{label:"left"},{default:l(()=>[d]),_:1}),r(u,{label:"right"},{default:l(()=>[i]),_:1}),r(u,{label:"top"},{default:l(()=>[m]),_:1})]),_:1},8,["modelValue"]),c,r(f,{"label-position":e.labelPosition,"label-width":"80px",model:e.formLabelAlign},{default:l(()=>[r(p,{label:"名称"},{default:l(()=>[r(b,{modelValue:e.formLabelAlign.name,"onUpdate:modelValue":o[2]||(o[2]=t=>e.formLabelAlign.name=t)},null,8,["modelValue"])]),_:1}),r(p,{label:"活动区域"},{default:l(()=>[r(b,{modelValue:e.formLabelAlign.region,"onUpdate:modelValue":o[3]||(o[3]=t=>e.formLabelAlign.region=t)},null,8,["modelValue"])]),_:1}),r(p,{label:"活动形式"},{default:l(()=>[r(b,{modelValue:e.formLabelAlign.type,"onUpdate:modelValue":o[4]||(o[4]=t=>e.formLabelAlign.type=t)},null,8,["modelValue"])]),_:1})]),_:1},8,["label-position","model"])])}},u)}(),"element-demo3":function(){const{resolveComponent:e,createVNode:t,withCtx:l,createTextVNode:r,openBlock:a,createBlock:n}=o,d=r("-"),i=r("立即创建"),m=r("重置");const c={data:()=>({ruleForm:{name:"",region:"",date1:"",date2:"",delivery:!1,type:[],resource:"",desc:""},rules:{name:[{required:!0,message:"请输入活动名称",trigger:"blur"},{min:3,max:5,message:"长度在 3 到 5 个字符",trigger:"blur"}],region:[{required:!0,message:"请选择活动区域",trigger:"change"}],date1:[{type:"date",required:!0,message:"请选择日期",trigger:"change"}],date2:[{type:"date",required:!0,message:"请选择时间",trigger:"change"}],type:[{type:"array",required:!0,message:"请至少选择一个活动性质",trigger:"change"}],resource:[{required:!0,message:"请选择活动资源",trigger:"change"}],desc:[{required:!0,message:"请填写活动形式",trigger:"blur"}]}}),methods:{submitForm(e){this.$refs[e].validate(e=>{if(!e)return console.log("error submit!!"),!1;alert("submit!")})},resetForm(e){this.$refs[e].resetFields()}}};return Object.assign({render:function(o,r){const c=e("el-input"),u=e("el-form-item"),s=e("el-option"),b=e("el-select"),p=e("el-date-picker"),f=e("el-col"),h=e("el-time-picker"),g=e("el-switch"),V=e("el-checkbox"),F=e("el-checkbox-group"),y=e("el-radio"),v=e("el-radio-group"),j=e("el-button"),O=e("el-form");return a(),n("div",null,[t(O,{model:o.ruleForm,rules:o.rules,ref:"ruleForm","label-width":"100px",class:"demo-ruleForm"},{default:l(()=>[t(u,{label:"活动名称",prop:"name"},{default:l(()=>[t(c,{modelValue:o.ruleForm.name,"onUpdate:modelValue":r[1]||(r[1]=e=>o.ruleForm.name=e)},null,8,["modelValue"])]),_:1}),t(u,{label:"活动区域",prop:"region"},{default:l(()=>[t(b,{modelValue:o.ruleForm.region,"onUpdate:modelValue":r[2]||(r[2]=e=>o.ruleForm.region=e),placeholder:"请选择活动区域"},{default:l(()=>[t(s,{label:"区域一",value:"shanghai"}),t(s,{label:"区域二",value:"beijing"})]),_:1},8,["modelValue"])]),_:1}),t(u,{label:"活动时间",required:""},{default:l(()=>[t(f,{span:11},{default:l(()=>[t(u,{prop:"date1"},{default:l(()=>[t(p,{type:"date",placeholder:"选择日期",modelValue:o.ruleForm.date1,"onUpdate:modelValue":r[3]||(r[3]=e=>o.ruleForm.date1=e),style:{width:"100%"}},null,8,["modelValue"])]),_:1})]),_:1}),t(f,{class:"line",span:2},{default:l(()=>[d]),_:1}),t(f,{span:11},{default:l(()=>[t(u,{prop:"date2"},{default:l(()=>[t(h,{placeholder:"选择时间",modelValue:o.ruleForm.date2,"onUpdate:modelValue":r[4]||(r[4]=e=>o.ruleForm.date2=e),style:{width:"100%"}},null,8,["modelValue"])]),_:1})]),_:1})]),_:1}),t(u,{label:"即时配送",prop:"delivery"},{default:l(()=>[t(g,{modelValue:o.ruleForm.delivery,"onUpdate:modelValue":r[5]||(r[5]=e=>o.ruleForm.delivery=e)},null,8,["modelValue"])]),_:1}),t(u,{label:"活动性质",prop:"type"},{default:l(()=>[t(F,{modelValue:o.ruleForm.type,"onUpdate:modelValue":r[6]||(r[6]=e=>o.ruleForm.type=e)},{default:l(()=>[t(V,{label:"美食/餐厅线上活动",name:"type"}),t(V,{label:"地推活动",name:"type"}),t(V,{label:"线下主题活动",name:"type"}),t(V,{label:"单纯品牌曝光",name:"type"})]),_:1},8,["modelValue"])]),_:1}),t(u,{label:"特殊资源",prop:"resource"},{default:l(()=>[t(v,{modelValue:o.ruleForm.resource,"onUpdate:modelValue":r[7]||(r[7]=e=>o.ruleForm.resource=e)},{default:l(()=>[t(y,{label:"线上品牌商赞助"}),t(y,{label:"线下场地免费"})]),_:1},8,["modelValue"])]),_:1}),t(u,{label:"活动形式",prop:"desc"},{default:l(()=>[t(c,{type:"textarea",modelValue:o.ruleForm.desc,"onUpdate:modelValue":r[8]||(r[8]=e=>o.ruleForm.desc=e)},null,8,["modelValue"])]),_:1}),t(u,null,{default:l(()=>[t(j,{type:"primary",onClick:r[9]||(r[9]=e=>o.submitForm("ruleForm"))},{default:l(()=>[i]),_:1}),t(j,{onClick:r[10]||(r[10]=e=>o.resetForm("ruleForm"))},{default:l(()=>[m]),_:1})]),_:1})]),_:1},8,["model","rules"])])}},c)}(),"element-demo4":function(){const{resolveComponent:e,createVNode:t,withCtx:l,createTextVNode:r,openBlock:a,createBlock:n}=o,d=r("提交"),i=r("重置");const m={data(){return{ruleForm:{pass:"",checkPass:"",age:""},rules:{pass:[{validator:(e,t,l)=>{""===t?l(new Error("请输入密码")):(""!==this.ruleForm.checkPass&&this.$refs.ruleForm.validateField("checkPass"),l())},trigger:"blur"}],checkPass:[{validator:(e,t,l)=>{""===t?l(new Error("请再次输入密码")):t!==this.ruleForm.pass?l(new Error("两次输入密码不一致!")):l()},trigger:"blur"}],age:[{validator:(e,t,l)=>{if(!t)return l(new Error("年龄不能为空"));setTimeout(()=>{Number.isInteger(t)?t<18?l(new Error("必须年满18岁")):l():l(new Error("请输入数字值"))},1e3)},trigger:"blur"}]}}},methods:{submitForm(e){this.$refs[e].validate(e=>{if(!e)return console.log("error submit!!"),!1;alert("submit!")})},resetForm(e){this.$refs[e].resetFields()}}};return Object.assign({render:function(o,r){const m=e("el-input"),c=e("el-form-item"),u=e("el-button"),s=e("el-form");return a(),n("div",null,[t(s,{model:o.ruleForm,"status-icon":"",rules:o.rules,ref:"ruleForm","label-width":"100px",class:"demo-ruleForm"},{default:l(()=>[t(c,{label:"密码",prop:"pass"},{default:l(()=>[t(m,{type:"password",modelValue:o.ruleForm.pass,"onUpdate:modelValue":r[1]||(r[1]=e=>o.ruleForm.pass=e),autocomplete:"off"},null,8,["modelValue"])]),_:1}),t(c,{label:"确认密码",prop:"checkPass"},{default:l(()=>[t(m,{type:"password",modelValue:o.ruleForm.checkPass,"onUpdate:modelValue":r[2]||(r[2]=e=>o.ruleForm.checkPass=e),autocomplete:"off"},null,8,["modelValue"])]),_:1}),t(c,{label:"年龄",prop:"age"},{default:l(()=>[t(m,{modelValue:o.ruleForm.age,"onUpdate:modelValue":r[3]||(r[3]=e=>o.ruleForm.age=e),modelModifiers:{number:!0}},null,8,["modelValue"])]),_:1}),t(c,null,{default:l(()=>[t(u,{type:"primary",onClick:r[4]||(r[4]=e=>o.submitForm("ruleForm"))},{default:l(()=>[d]),_:1}),t(u,{onClick:r[5]||(r[5]=e=>o.resetForm("ruleForm"))},{default:l(()=>[i]),_:1})]),_:1})]),_:1},8,["model","rules"])])}},m)}(),"element-demo5":function(){const{resolveComponent:e,createVNode:t,withCtx:l,renderList:r,Fragment:a,openBlock:n,createBlock:d,createTextVNode:i,withModifiers:m}=o,c=i("删除"),u=i("提交"),s=i("新增域名"),b=i("重置");const p={data:()=>({dynamicValidateForm:{domains:[{value:""}],email:""}}),methods:{submitForm(e){this.$refs[e].validate(e=>{if(!e)return console.log("error submit!!"),!1;alert("submit!")})},resetForm(e){this.$refs[e].resetFields()},removeDomain(e){var t=this.dynamicValidateForm.domains.indexOf(e);-1!==t&&this.dynamicValidateForm.domains.splice(t,1)},addDomain(){this.dynamicValidateForm.domains.push({value:"",key:Date.now()})}}};return Object.assign({render:function(o,i){const p=e("el-input"),f=e("el-form-item"),h=e("el-button"),g=e("el-form");return n(),d("div",null,[t(g,{model:o.dynamicValidateForm,ref:"dynamicValidateForm","label-width":"100px",class:"demo-dynamic"},{default:l(()=>[t(f,{prop:"email",label:"邮箱",rules:[{required:!0,message:"请输入邮箱地址",trigger:"blur"},{type:"email",message:"请输入正确的邮箱地址",trigger:["blur","change"]}]},{default:l(()=>[t(p,{modelValue:o.dynamicValidateForm.email,"onUpdate:modelValue":i[1]||(i[1]=e=>o.dynamicValidateForm.email=e)},null,8,["modelValue"])]),_:1}),(n(!0),d(a,null,r(o.dynamicValidateForm.domains,(e,r)=>(n(),d(f,{label:"域名"+r,key:e.key,prop:"domains."+r+".value",rules:{required:!0,message:"域名不能为空",trigger:"blur"}},{default:l(()=>[t(p,{modelValue:e.value,"onUpdate:modelValue":t=>e.value=t},null,8,["modelValue","onUpdate:modelValue"]),t(h,{onClick:m(t=>o.removeDomain(e),["prevent"])},{default:l(()=>[c]),_:1},8,["onClick"])]),_:2},1032,["label","prop"]))),128)),t(f,null,{default:l(()=>[t(h,{type:"primary",onClick:i[2]||(i[2]=e=>o.submitForm("dynamicValidateForm"))},{default:l(()=>[u]),_:1}),t(h,{onClick:o.addDomain},{default:l(()=>[s]),_:1},8,["onClick"]),t(h,{onClick:i[3]||(i[3]=e=>o.resetForm("dynamicValidateForm"))},{default:l(()=>[b]),_:1})]),_:1})]),_:1},8,["model"])])}},p)}(),"element-demo6":function(){const{resolveComponent:e,createVNode:t,withCtx:l,createTextVNode:r,openBlock:a,createBlock:n}=o,d=r("提交"),i=r("重置");const m={data:()=>({numberValidateForm:{age:""}}),methods:{submitForm(e){this.$refs[e].validate(e=>{if(!e)return console.log("error submit!!"),!1;alert("submit!")})},resetForm(e){this.$refs[e].resetFields()}}};return Object.assign({render:function(o,r){const m=e("el-input"),c=e("el-form-item"),u=e("el-button"),s=e("el-form");return a(),n("div",null,[t(s,{model:o.numberValidateForm,ref:"numberValidateForm","label-width":"100px",class:"demo-ruleForm"},{default:l(()=>[t(c,{label:"年龄",prop:"age",rules:[{required:!0,message:"年龄不能为空"},{type:"number",message:"年龄必须为数字值"}]},{default:l(()=>[t(m,{type:"age",modelValue:o.numberValidateForm.age,"onUpdate:modelValue":r[1]||(r[1]=e=>o.numberValidateForm.age=e),modelModifiers:{number:!0},autocomplete:"off"},null,8,["modelValue"])]),_:1}),t(c,null,{default:l(()=>[t(u,{type:"primary",onClick:r[2]||(r[2]=e=>o.submitForm("numberValidateForm"))},{default:l(()=>[d]),_:1}),t(u,{onClick:r[3]||(r[3]=e=>o.resetForm("numberValidateForm"))},{default:l(()=>[i]),_:1})]),_:1})]),_:1},8,["model"])])}},m)}(),"element-demo7":function(){const{resolveComponent:e,createVNode:t,withCtx:l,createTextVNode:r,openBlock:a,createBlock:n}=o,d=r("-"),i=r("立即创建"),m=r("取消");const c={data:()=>({sizeForm:{name:"",region:"",date1:"",date2:"",delivery:!1,type:[],resource:"",desc:""}}),methods:{onSubmit(){console.log("submit!")}}};return Object.assign({render:function(o,r){const c=e("el-input"),u=e("el-form-item"),s=e("el-option"),b=e("el-select"),p=e("el-date-picker"),f=e("el-col"),h=e("el-time-picker"),g=e("el-checkbox-button"),V=e("el-checkbox-group"),F=e("el-radio"),y=e("el-radio-group"),v=e("el-button"),j=e("el-form");return a(),n("div",null,[t(j,{ref:"form",model:o.sizeForm,"label-width":"80px",size:"mini"},{default:l(()=>[t(u,{label:"活动名称"},{default:l(()=>[t(c,{modelValue:o.sizeForm.name,"onUpdate:modelValue":r[1]||(r[1]=e=>o.sizeForm.name=e)},null,8,["modelValue"])]),_:1}),t(u,{label:"活动区域"},{default:l(()=>[t(b,{modelValue:o.sizeForm.region,"onUpdate:modelValue":r[2]||(r[2]=e=>o.sizeForm.region=e),placeholder:"请选择活动区域"},{default:l(()=>[t(s,{label:"区域一",value:"shanghai"}),t(s,{label:"区域二",value:"beijing"})]),_:1},8,["modelValue"])]),_:1}),t(u,{label:"活动时间"},{default:l(()=>[t(f,{span:11},{default:l(()=>[t(p,{type:"date",placeholder:"选择日期",modelValue:o.sizeForm.date1,"onUpdate:modelValue":r[3]||(r[3]=e=>o.sizeForm.date1=e),style:{width:"100%"}},null,8,["modelValue"])]),_:1}),t(f,{class:"line",span:2},{default:l(()=>[d]),_:1}),t(f,{span:11},{default:l(()=>[t(h,{placeholder:"选择时间",modelValue:o.sizeForm.date2,"onUpdate:modelValue":r[4]||(r[4]=e=>o.sizeForm.date2=e),style:{width:"100%"}},null,8,["modelValue"])]),_:1})]),_:1}),t(u,{label:"活动性质"},{default:l(()=>[t(V,{modelValue:o.sizeForm.type,"onUpdate:modelValue":r[5]||(r[5]=e=>o.sizeForm.type=e)},{default:l(()=>[t(g,{label:"美食/餐厅线上活动",name:"type"}),t(g,{label:"地推活动",name:"type"}),t(g,{label:"线下主题活动",name:"type"})]),_:1},8,["modelValue"])]),_:1}),t(u,{label:"特殊资源"},{default:l(()=>[t(y,{modelValue:o.sizeForm.resource,"onUpdate:modelValue":r[6]||(r[6]=e=>o.sizeForm.resource=e),size:"medium"},{default:l(()=>[t(F,{border:"",label:"线上品牌商赞助"}),t(F,{border:"",label:"线下场地免费"})]),_:1},8,["modelValue"])]),_:1}),t(u,{size:"large"},{default:l(()=>[t(v,{type:"primary",onClick:o.onSubmit},{default:l(()=>[i]),_:1},8,["onClick"]),t(v,null,{default:l(()=>[m]),_:1})]),_:1})]),_:1},8,["model"])])}},c)}()},render:function(e,t,l,B,$,A){const E=Object(o.resolveComponent)("element-demo0"),L=Object(o.resolveComponent)("demo-block"),D=Object(o.resolveComponent)("element-demo1"),M=Object(o.resolveComponent)("element-demo2"),J=Object(o.resolveComponent)("element-demo3"),W=Object(o.resolveComponent)("element-demo4"),R=Object(o.resolveComponent)("element-demo5"),G=Object(o.resolveComponent)("element-demo6"),H=Object(o.resolveComponent)("element-demo7");return Object(o.openBlock)(),Object(o.createBlock)("section",r,[a,n,d,i,Object(o.createVNode)(L,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(E)]),highlight:Object(o.withCtx)(()=>[c]),default:Object(o.withCtx)(()=>[m]),_:1}),u,Object(o.createVNode)(L,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(D)]),highlight:Object(o.withCtx)(()=>[b]),default:Object(o.withCtx)(()=>[s]),_:1}),p,f,Object(o.createVNode)(L,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(M)]),highlight:Object(o.withCtx)(()=>[g]),default:Object(o.withCtx)(()=>[h]),_:1}),V,F,Object(o.createVNode)(L,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(J)]),highlight:Object(o.withCtx)(()=>[v]),default:Object(o.withCtx)(()=>[y]),_:1}),j,O,Object(o.createVNode)(L,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(W)]),highlight:Object(o.withCtx)(()=>[N]),default:Object(o.withCtx)(()=>[x]),_:1}),k,w,Object(o.createVNode)(L,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(R)]),highlight:Object(o.withCtx)(()=>[C]),default:Object(o.withCtx)(()=>[_]),_:1}),z,Object(o.createVNode)(L,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(G)]),highlight:Object(o.withCtx)(()=>[U]),default:Object(o.withCtx)(()=>[T]),_:1}),q,Object(o.createVNode)(L,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(H)]),highlight:Object(o.withCtx)(()=>[I]),default:Object(o.withCtx)(()=>[P]),_:1}),S])}};t.default=B}}]);