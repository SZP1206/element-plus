(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{528:function(e,t,r){"use strict";r.r(t);var c=r(0);const o={class:"content element-doc"},n=Object(c.createVNode)("h2",{id:"progress"},[Object(c.createVNode)("a",{class:"header-anchor",href:"#progress"},"¶"),Object(c.createTextVNode)(" Progress")],-1),s=Object(c.createVNode)("p",null,"Progress is used to show the progress of current operation, and inform the user the current status.",-1),a=Object(c.createVNode)("h3",{id:"linear-progress-bar"},[Object(c.createVNode)("a",{class:"header-anchor",href:"#linear-progress-bar"},"¶"),Object(c.createTextVNode)(" Linear progress bar")],-1),l=Object(c.createVNode)("div",null,[Object(c.createVNode)("p",null,[Object(c.createTextVNode)("Use "),Object(c.createVNode)("code",null,"percentage"),Object(c.createTextVNode)(" attribute to set the percentage. It's "),Object(c.createVNode)("strong",null,"required"),Object(c.createTextVNode)(" and must be between "),Object(c.createVNode)("code",null,"0-100"),Object(c.createTextVNode)(". You can custom text format by setting "),Object(c.createVNode)("code",null,"format"),Object(c.createTextVNode)(".")])],-1),d=Object(c.createVNode)("pre",null,[Object(c.createVNode)("code",{class:"html"},'<el-progress :percentage="50"></el-progress>\n<el-progress :percentage="100" :format="format"></el-progress>\n<el-progress :percentage="100" status="success"></el-progress>\n<el-progress :percentage="100" status="warning"></el-progress>\n<el-progress :percentage="50" status="exception"></el-progress>\n\n<script>\n  export default {\n    methods: {\n      format(percentage) {\n        return percentage === 100 ? \'Full\' : `${percentage}%`;\n      }\n    }\n  };\n<\/script>\n')],-1),p=Object(c.createVNode)("h3",{id:"internal-percentage"},[Object(c.createVNode)("a",{class:"header-anchor",href:"#internal-percentage"},"¶"),Object(c.createTextVNode)(" Internal percentage")],-1),i=Object(c.createVNode)("p",null,"In this case the percentage takes no additional space.",-1),u=Object(c.createVNode)("div",null,[Object(c.createVNode)("p",null,[Object(c.createVNode)("code",null,"stroke-width"),Object(c.createTextVNode)(" attribute decides the "),Object(c.createVNode)("code",null,"width"),Object(c.createTextVNode)(" of progress bar, and use "),Object(c.createVNode)("code",null,"text-inside"),Object(c.createTextVNode)(" attribute to put description inside the progress bar.")])],-1),g=Object(c.createVNode)("pre",null,[Object(c.createVNode)("code",{class:"html"},'<el-progress :text-inside="true" :stroke-width="26" :percentage="70"></el-progress>\n<el-progress :text-inside="true" :stroke-width="24" :percentage="100" status="success"></el-progress>\n<el-progress :text-inside="true" :stroke-width="22" :percentage="80" status="warning"></el-progress>\n<el-progress :text-inside="true" :stroke-width="20" :percentage="50" status="exception"></el-progress>\n')],-1),b=Object(c.createVNode)("h3",{id:"custom-color"},[Object(c.createVNode)("a",{class:"header-anchor",href:"#custom-color"},"¶"),Object(c.createTextVNode)(" Custom color")],-1),h=Object(c.createVNode)("p",null,[Object(c.createTextVNode)("You can use "),Object(c.createVNode)("code",null,"color"),Object(c.createTextVNode)(" attr to set the progress bar color. it accepts color string, function, or array.")],-1),O=Object(c.createVNode)("pre",null,[Object(c.createVNode)("code",{class:"html"},'<el-progress :percentage="percentage" :color="customColor"></el-progress>\n\n<el-progress :percentage="percentage" :color="customColorMethod"></el-progress>\n\n<el-progress :percentage="percentage" :color="customColors"></el-progress>\n<div>\n  <el-button-group>\n    <el-button icon="el-icon-minus" @click="decrease"></el-button>\n    <el-button icon="el-icon-plus" @click="increase"></el-button>\n  </el-button-group>\n</div>\n\n<script>\n  export default {\n    data() {\n      return {\n        percentage: 20,\n        customColor: \'#409eff\',\n        customColors: [\n          {color: \'#f56c6c\', percentage: 20},\n          {color: \'#e6a23c\', percentage: 40},\n          {color: \'#5cb87a\', percentage: 60},\n          {color: \'#1989fa\', percentage: 80},\n          {color: \'#6f7ad3\', percentage: 100}\n        ]\n      };\n    },\n    methods: {\n      customColorMethod(percentage) {\n        if (percentage < 30) {\n          return \'#909399\';\n        } else if (percentage < 70) {\n          return \'#e6a23c\';\n        } else {\n          return \'#67c23a\';\n        }\n      },\n      increase() {\n        this.percentage += 10;\n        if (this.percentage > 100) {\n          this.percentage = 100;\n        }\n      },\n      decrease() {\n        this.percentage -= 10;\n        if (this.percentage < 0) {\n          this.percentage = 0;\n        }\n      }\n    }\n  }\n<\/script>\n')],-1),j=Object(c.createVNode)("h3",{id:"circular-progress-bar"},[Object(c.createVNode)("a",{class:"header-anchor",href:"#circular-progress-bar"},"¶"),Object(c.createTextVNode)(" Circular progress bar")],-1),V=Object(c.createVNode)("div",null,[Object(c.createVNode)("p",null,[Object(c.createTextVNode)("You can specify "),Object(c.createVNode)("code",null,"type"),Object(c.createTextVNode)(" attribute to "),Object(c.createVNode)("code",null,"circle"),Object(c.createTextVNode)(" to use circular progress bar, and use "),Object(c.createVNode)("code",null,"width"),Object(c.createTextVNode)(" attribute to change the size of circle.")])],-1),N=Object(c.createVNode)("pre",null,[Object(c.createVNode)("code",{class:"html"},'<el-progress type="circle" :percentage="0"></el-progress>\n<el-progress type="circle" :percentage="25"></el-progress>\n<el-progress type="circle" :percentage="100" status="success"></el-progress>\n<el-progress type="circle" :percentage="70" status="warning"></el-progress>\n<el-progress type="circle" :percentage="50" status="exception"></el-progress>\n')],-1),m=Object(c.createVNode)("h3",{id:"dashboard-progress-bar"},[Object(c.createVNode)("a",{class:"header-anchor",href:"#dashboard-progress-bar"},"¶"),Object(c.createTextVNode)(" Dashboard progress bar")],-1),f=Object(c.createVNode)("p",null,[Object(c.createTextVNode)("You also can specify "),Object(c.createVNode)("code",null,"type"),Object(c.createTextVNode)(" attribute to "),Object(c.createVNode)("code",null,"dashboard"),Object(c.createTextVNode)(" to use dashboard progress bar.")],-1),x=Object(c.createVNode)("pre",null,[Object(c.createVNode)("code",{class:"html"},'<el-progress type="dashboard" :percentage="percentage" :color="colors"></el-progress>\n<div>\n  <el-button-group>\n    <el-button icon="el-icon-minus" @click="decrease"></el-button>\n    <el-button icon="el-icon-plus" @click="increase"></el-button>\n  </el-button-group>\n</div>\n\n<script>\n  export default {\n    data() {\n      return {\n        percentage: 10,\n        colors: [\n          {color: \'#f56c6c\', percentage: 20},\n          {color: \'#e6a23c\', percentage: 40},\n          {color: \'#5cb87a\', percentage: 60},\n          {color: \'#1989fa\', percentage: 80},\n          {color: \'#6f7ad3\', percentage: 100}\n        ]\n      };\n    },\n    methods: {\n      increase() {\n        this.percentage += 10;\n        if (this.percentage > 100) {\n          this.percentage = 100;\n        }\n      },\n      decrease() {\n        this.percentage -= 10;\n        if (this.percentage < 0) {\n          this.percentage = 0;\n        }\n      }\n    }\n  }\n<\/script>\n')],-1),w=Object(c.createStaticVNode)('<h3 id="attributes"><a class="header-anchor" href="#attributes">¶</a> Attributes</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td><strong>percentage</strong></td><td>percentage, <strong>required</strong></td><td>number</td><td>0-100</td><td>0</td></tr><tr><td>type</td><td>the type of progress bar</td><td>string</td><td>line/circle/dashboard</td><td>line</td></tr><tr><td>stroke-width</td><td>the width of progress bar</td><td>number</td><td>—</td><td>6</td></tr><tr><td>text-inside</td><td>whether to place the percentage inside progress bar, only works when <code>type</code> is &#39;line&#39;</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>status</td><td>the current status of progress bar</td><td>string</td><td>success/exception/warning</td><td>—</td></tr><tr><td>color</td><td>background color of progress bar. Overrides <code>status</code> prop</td><td>string/function/array</td><td>—</td><td>&#39;&#39;</td></tr><tr><td>width</td><td>the canvas width of circle progress bar</td><td>number</td><td>—</td><td>126</td></tr><tr><td>show-text</td><td>whether to show percentage</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>stroke-linecap</td><td>circle/dashboard type shape at the end path</td><td>string</td><td>butt/round/square</td><td>round</td></tr></tbody></table>',2);var C={name:"component-doc",components:{"element-demo0":function(){const{resolveComponent:e,createVNode:t,openBlock:r,createBlock:o}=c;const n={methods:{format:e=>100===e?"Full":e+"%"}};return Object.assign({render:function(c,n){const s=e("el-progress");return r(),o("div",null,[t(s,{percentage:50}),t(s,{percentage:100,format:c.format},null,8,["format"]),t(s,{percentage:100,status:"success"}),t(s,{percentage:100,status:"warning"}),t(s,{percentage:50,status:"exception"})])}},n)}(),"element-demo1":function(){const{resolveComponent:e,createVNode:t,openBlock:r,createBlock:o}=c;return Object.assign({render:function(c,n){const s=e("el-progress");return r(),o("div",null,[t(s,{"text-inside":!0,"stroke-width":26,percentage:70}),t(s,{"text-inside":!0,"stroke-width":24,percentage:100,status:"success"}),t(s,{"text-inside":!0,"stroke-width":22,percentage:80,status:"warning"}),t(s,{"text-inside":!0,"stroke-width":20,percentage:50,status:"exception"})])}},{})}(),"element-demo2":function(){const{resolveComponent:e,createVNode:t,withCtx:r,openBlock:o,createBlock:n}=c;const s={data:()=>({percentage:20,customColor:"#409eff",customColors:[{color:"#f56c6c",percentage:20},{color:"#e6a23c",percentage:40},{color:"#5cb87a",percentage:60},{color:"#1989fa",percentage:80},{color:"#6f7ad3",percentage:100}]}),methods:{customColorMethod:e=>e<30?"#909399":e<70?"#e6a23c":"#67c23a",increase(){this.percentage+=10,this.percentage>100&&(this.percentage=100)},decrease(){this.percentage-=10,this.percentage<0&&(this.percentage=0)}}};return Object.assign({render:function(c,s){const a=e("el-progress"),l=e("el-button"),d=e("el-button-group");return o(),n("div",null,[t(a,{percentage:c.percentage,color:c.customColor},null,8,["percentage","color"]),t(a,{percentage:c.percentage,color:c.customColorMethod},null,8,["percentage","color"]),t(a,{percentage:c.percentage,color:c.customColors},null,8,["percentage","color"]),t("div",null,[t(d,null,{default:r(()=>[t(l,{icon:"el-icon-minus",onClick:c.decrease},null,8,["onClick"]),t(l,{icon:"el-icon-plus",onClick:c.increase},null,8,["onClick"])]),_:1})])])}},s)}(),"element-demo3":function(){const{resolveComponent:e,createVNode:t,openBlock:r,createBlock:o}=c;return Object.assign({render:function(c,n){const s=e("el-progress");return r(),o("div",null,[t(s,{type:"circle",percentage:0}),t(s,{type:"circle",percentage:25}),t(s,{type:"circle",percentage:100,status:"success"}),t(s,{type:"circle",percentage:70,status:"warning"}),t(s,{type:"circle",percentage:50,status:"exception"})])}},{})}(),"element-demo4":function(){const{resolveComponent:e,createVNode:t,withCtx:r,openBlock:o,createBlock:n}=c;const s={data:()=>({percentage:10,colors:[{color:"#f56c6c",percentage:20},{color:"#e6a23c",percentage:40},{color:"#5cb87a",percentage:60},{color:"#1989fa",percentage:80},{color:"#6f7ad3",percentage:100}]}),methods:{increase(){this.percentage+=10,this.percentage>100&&(this.percentage=100)},decrease(){this.percentage-=10,this.percentage<0&&(this.percentage=0)}}};return Object.assign({render:function(c,s){const a=e("el-progress"),l=e("el-button"),d=e("el-button-group");return o(),n("div",null,[t(a,{type:"dashboard",percentage:c.percentage,color:c.colors},null,8,["percentage","color"]),t("div",null,[t(d,null,{default:r(()=>[t(l,{icon:"el-icon-minus",onClick:c.decrease},null,8,["onClick"]),t(l,{icon:"el-icon-plus",onClick:c.increase},null,8,["onClick"])]),_:1})])])}},s)}()},render:function(e,t,r,C,k,v){const y=Object(c.resolveComponent)("element-demo0"),T=Object(c.resolveComponent)("demo-block"),B=Object(c.resolveComponent)("element-demo1"),_=Object(c.resolveComponent)("element-demo2"),M=Object(c.resolveComponent)("element-demo3"),Y=Object(c.resolveComponent)("element-demo4");return Object(c.openBlock)(),Object(c.createBlock)("section",o,[n,s,a,Object(c.createVNode)(T,null,{source:Object(c.withCtx)(()=>[Object(c.createVNode)(y)]),highlight:Object(c.withCtx)(()=>[d]),default:Object(c.withCtx)(()=>[l]),_:1}),p,i,Object(c.createVNode)(T,null,{source:Object(c.withCtx)(()=>[Object(c.createVNode)(B)]),highlight:Object(c.withCtx)(()=>[g]),default:Object(c.withCtx)(()=>[u]),_:1}),b,h,Object(c.createVNode)(T,null,{source:Object(c.withCtx)(()=>[Object(c.createVNode)(_)]),highlight:Object(c.withCtx)(()=>[O]),_:1}),j,Object(c.createVNode)(T,null,{source:Object(c.withCtx)(()=>[Object(c.createVNode)(M)]),highlight:Object(c.withCtx)(()=>[N]),default:Object(c.withCtx)(()=>[V]),_:1}),m,f,Object(c.createVNode)(T,null,{source:Object(c.withCtx)(()=>[Object(c.createVNode)(Y)]),highlight:Object(c.withCtx)(()=>[x]),_:1}),w])}};t.default=C}}]);