(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{467:function(e,t,n){"use strict";n.r(t);var a=n(0);const c={class:"content element-doc"},o=Object(a.createVNode)("h2",{id:"pagination-fen-ye"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#pagination-fen-ye"},"¶"),Object(a.createTextVNode)(" Pagination 分页")],-1),d=Object(a.createVNode)("p",null,"当数据量过多时，使用分页分解数据。",-1),r=Object(a.createVNode)("h3",{id:"ji-chu-yong-fa"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#ji-chu-yong-fa"},"¶"),Object(a.createTextVNode)(" 基础用法")],-1),l=Object(a.createVNode)("div",null,[Object(a.createVNode)("p",null,[Object(a.createTextVNode)("设置"),Object(a.createVNode)("code",null,"layout"),Object(a.createTextVNode)("，表示需要显示的内容，用逗号分隔，布局元素会依次显示。"),Object(a.createVNode)("code",null,"prev"),Object(a.createTextVNode)("表示上一页，"),Object(a.createVNode)("code",null,"next"),Object(a.createTextVNode)("为下一页，"),Object(a.createVNode)("code",null,"pager"),Object(a.createTextVNode)("表示页码列表，除此以外还提供了"),Object(a.createVNode)("code",null,"jumper"),Object(a.createTextVNode)("和"),Object(a.createVNode)("code",null,"total"),Object(a.createTextVNode)("，"),Object(a.createVNode)("code",null,"size"),Object(a.createTextVNode)("和特殊的布局符号"),Object(a.createVNode)("code",null,"->"),Object(a.createTextVNode)("，"),Object(a.createVNode)("code",null,"->"),Object(a.createTextVNode)("后的元素会靠右显示，"),Object(a.createVNode)("code",null,"jumper"),Object(a.createTextVNode)("表示跳页元素，"),Object(a.createVNode)("code",null,"total"),Object(a.createTextVNode)("表示总条目数，"),Object(a.createVNode)("code",null,"size"),Object(a.createTextVNode)("用于设置每页显示的页码数量。")])],-1),i=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<div class="block">\n  <span class="demonstration">页数较少时的效果</span>\n  <el-pagination\n    layout="prev, pager, next"\n    :total="50">\n  </el-pagination>\n</div>\n<div class="block">\n  <span class="demonstration">大于 7 页时的效果</span>\n  <el-pagination\n    layout="prev, pager, next"\n    :total="1000">\n  </el-pagination>\n</div>\n')],-1),s=Object(a.createVNode)("h3",{id:"she-zhi-zui-da-ye-ma-an-niu-shu"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#she-zhi-zui-da-ye-ma-an-niu-shu"},"¶"),Object(a.createTextVNode)(" 设置最大页码按钮数")],-1),u=Object(a.createVNode)("div",null,[Object(a.createVNode)("p",null,[Object(a.createTextVNode)("默认情况下，当总页数超过 7 页时，Pagination 会折叠多余的页码按钮。通过"),Object(a.createVNode)("code",null,"pager-count"),Object(a.createTextVNode)("属性可以设置最大页码按钮数。")])],-1),g=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<el-pagination\n  :page-size="20"\n  :pager-count="11"\n  layout="prev, pager, next"\n  :total="1000">\n</el-pagination>\n')],-1),h=Object(a.createVNode)("h3",{id:"dai-you-bei-jing-se-de-fen-ye"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#dai-you-bei-jing-se-de-fen-ye"},"¶"),Object(a.createTextVNode)(" 带有背景色的分页")],-1),p=Object(a.createVNode)("div",null,[Object(a.createVNode)("p",null,[Object(a.createTextVNode)("设置"),Object(a.createVNode)("code",null,"background"),Object(a.createTextVNode)("属性可以为分页按钮添加背景色。")])],-1),b=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<el-pagination\n  background\n  layout="prev, pager, next"\n  :total="1000">\n</el-pagination>\n')],-1),j=Object(a.createVNode)("h3",{id:"xiao-xing-fen-ye"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#xiao-xing-fen-ye"},"¶"),Object(a.createTextVNode)(" 小型分页")],-1),O=Object(a.createVNode)("p",null,"在空间有限的情况下，可以使用简单的小型分页。",-1),V=Object(a.createVNode)("div",null,[Object(a.createVNode)("p",null,[Object(a.createTextVNode)("只需要一个"),Object(a.createVNode)("code",null,"small"),Object(a.createTextVNode)("属性，它接受一个"),Object(a.createVNode)("code",null,"Boolean"),Object(a.createTextVNode)("，默认为"),Object(a.createVNode)("code",null,"false"),Object(a.createTextVNode)("，设为"),Object(a.createVNode)("code",null,"true"),Object(a.createTextVNode)("即可启用。")])],-1),N=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<el-pagination\n  small\n  layout="prev, pager, next"\n  :total="50">\n</el-pagination>\n')],-1),m=Object(a.createVNode)("h3",{id:"fu-jia-gong-neng"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#fu-jia-gong-neng"},"¶"),Object(a.createTextVNode)(" 附加功能")],-1),v=Object(a.createVNode)("p",null,"根据场景需要，可以添加其他功能模块。",-1),x=Object(a.createVNode)("div",null,[Object(a.createVNode)("p",null,[Object(a.createTextVNode)("此例是一个完整的用例，使用了"),Object(a.createVNode)("code",null,"size-change"),Object(a.createTextVNode)("和"),Object(a.createVNode)("code",null,"current-change"),Object(a.createTextVNode)("事件来处理页码大小和当前页变动时候触发的事件。"),Object(a.createVNode)("code",null,"page-sizes"),Object(a.createTextVNode)("接受一个整型数组，数组元素为展示的选择每页显示个数的选项，"),Object(a.createVNode)("code",null,"[100, 200, 300, 400]"),Object(a.createTextVNode)("表示四个选项，每页显示 100 个，200 个，300 个或者 400 个。")])],-1),C=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<template>\n  <div class="block">\n    <span class="demonstration">显示总数</span>\n    <el-pagination\n      @size-change="handleSizeChange"\n      @current-change="handleCurrentChange"\n      :current-page.sync="currentPage1"\n      :page-size="100"\n      layout="total, prev, pager, next"\n      :total="1000">\n    </el-pagination>\n  </div>\n  <div class="block">\n    <span class="demonstration">调整每页显示条数</span>\n    <el-pagination\n      @size-change="handleSizeChange"\n      @current-change="handleCurrentChange"\n      :current-page.sync="currentPage2"\n      :page-sizes="[100, 200, 300, 400]"\n      :page-size="100"\n      layout="sizes, prev, pager, next"\n      :total="1000">\n    </el-pagination>\n  </div>\n  <div class="block">\n    <span class="demonstration">直接前往</span>\n    <el-pagination\n      @size-change="handleSizeChange"\n      @current-change="handleCurrentChange"\n      :current-page.sync="currentPage3"\n      :page-size="100"\n      layout="prev, pager, next, jumper"\n      :total="1000">\n    </el-pagination>\n  </div>\n  <div class="block">\n    <span class="demonstration">完整功能</span>\n    <el-pagination\n      @size-change="handleSizeChange"\n      @current-change="handleCurrentChange"\n      :current-page="currentPage4"\n      :page-sizes="[100, 200, 300, 400]"\n      :page-size="100"\n      layout="total, sizes, prev, pager, next, jumper"\n      :total="400">\n    </el-pagination>\n  </div>\n</template>\n<script>\n  export default {\n    methods: {\n      handleSizeChange(val) {\n        console.log(`每页 ${val} 条`);\n      },\n      handleCurrentChange(val) {\n        console.log(`当前页: ${val}`);\n      }\n    },\n    data() {\n      return {\n        currentPage1: 5,\n        currentPage2: 5,\n        currentPage3: 5,\n        currentPage4: 4\n      };\n    }\n  }\n<\/script>\n')],-1),y=Object(a.createVNode)("h3",{id:"dang-zhi-you-yi-ye-shi-yin-cang-fen-ye"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#dang-zhi-you-yi-ye-shi-yin-cang-fen-ye"},"¶"),Object(a.createTextVNode)(" 当只有一页时隐藏分页")],-1),z=Object(a.createVNode)("p",null,[Object(a.createTextVNode)("当只有一页时，通过设置 "),Object(a.createVNode)("code",null,"hide-on-single-page"),Object(a.createTextVNode)(" 属性来隐藏分页。")],-1),f=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<div>\n <el-switch v-model="value">\n </el-switch>\n <el-pagination\n  :hide-on-single-page="value"\n  :total="5"\n  layout="prev, pager, next">\n</el-pagination>\n</div>\n\n<script>\n  export default {\n    data() {\n      return {\n        value: false\n      }\n    }\n  }\n<\/script>\n')],-1),T=Object(a.createStaticVNode)('<h3 id="attributes"><a class="header-anchor" href="#attributes">¶</a> Attributes</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>small</td><td>是否使用小型分页样式</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>background</td><td>是否为分页按钮添加背景色</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>page-size</td><td>每页显示条目个数，支持 .sync 修饰符</td><td>number</td><td>—</td><td>10</td></tr><tr><td>total</td><td>总条目数</td><td>number</td><td>—</td><td>—</td></tr><tr><td>page-count</td><td>总页数，total 和 page-count 设置任意一个就可以达到显示页码的功能；如果要支持 page-sizes 的更改，则需要使用 total 属性</td><td>Number</td><td>—</td><td>—</td></tr><tr><td>pager-count</td><td>页码按钮的数量，当总页数超过该值时会折叠</td><td>number</td><td>大于等于 5 且小于等于 21 的奇数</td><td>7</td></tr><tr><td>current-page</td><td>当前页数，支持 .sync 修饰符</td><td>number</td><td>—</td><td>1</td></tr><tr><td>layout</td><td>组件布局，子组件名用逗号分隔</td><td>String</td><td><code>sizes</code>, <code>prev</code>, <code>pager</code>, <code>next</code>, <code>jumper</code>, <code>-&gt;</code>, <code>total</code>, <code>slot</code></td><td>&#39;prev, pager, next, jumper, -&gt;, total&#39;</td></tr><tr><td>page-sizes</td><td>每页显示个数选择器的选项设置</td><td>number[]</td><td>—</td><td>[10, 20, 30, 40, 50, 100]</td></tr><tr><td>popper-class</td><td>每页显示个数选择器的下拉框类名</td><td>string</td><td>—</td><td>—</td></tr><tr><td>prev-text</td><td>替代图标显示的上一页文字</td><td>string</td><td>—</td><td>—</td></tr><tr><td>next-text</td><td>替代图标显示的下一页文字</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>hide-on-single-page</td><td>只有一页时是否隐藏</td><td>boolean</td><td>—</td><td>-</td></tr></tbody></table><h3 id="events"><a class="header-anchor" href="#events">¶</a> Events</h3><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>size-change</td><td>pageSize 改变时会触发</td><td>每页条数</td></tr><tr><td>current-change</td><td>currentPage 改变时会触发</td><td>当前页</td></tr><tr><td>prev-click</td><td>用户点击上一页按钮改变当前页后触发</td><td>当前页</td></tr><tr><td>next-click</td><td>用户点击下一页按钮改变当前页后触发</td><td>当前页</td></tr></tbody></table><h3 id="slot"><a class="header-anchor" href="#slot">¶</a> Slot</h3><table><thead><tr><th>name</th><th>说明</th></tr></thead><tbody><tr><td>—</td><td>自定义内容，需要在 <code>layout</code> 中列出 <code>slot</code></td></tr></tbody></table>',6);var k={name:"component-doc",components:{"element-demo0":function(){const{createVNode:e,resolveComponent:t,openBlock:n,createBlock:c}=a,o={class:"block"},d=e("span",{class:"demonstration"},"页数较少时的效果",-1),r={class:"block"},l=e("span",{class:"demonstration"},"大于 7 页时的效果",-1);return Object.assign({render:function(a,i){const s=t("el-pagination");return n(),c("div",null,[e("div",o,[d,e(s,{layout:"prev, pager, next",total:50})]),e("div",r,[l,e(s,{layout:"prev, pager, next",total:1e3})])])}},{})}(),"element-demo1":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:c}=a;return Object.assign({render:function(a,o){const d=e("el-pagination");return n(),c("div",null,[t(d,{"page-size":20,"pager-count":11,layout:"prev, pager, next",total:1e3})])}},{})}(),"element-demo2":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:c}=a;return Object.assign({render:function(a,o){const d=e("el-pagination");return n(),c("div",null,[t(d,{background:"",layout:"prev, pager, next",total:1e3})])}},{})}(),"element-demo3":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:c}=a;return Object.assign({render:function(a,o){const d=e("el-pagination");return n(),c("div",null,[t(d,{small:"",layout:"prev, pager, next",total:50})])}},{})}(),"element-demo4":function(){const{createVNode:e,resolveComponent:t,openBlock:n,createBlock:c}=a,o={class:"block"},d=e("span",{class:"demonstration"},"显示总数",-1),r={class:"block"},l=e("span",{class:"demonstration"},"调整每页显示条数",-1),i={class:"block"},s=e("span",{class:"demonstration"},"直接前往",-1),u={class:"block"},g=e("span",{class:"demonstration"},"完整功能",-1);const h={methods:{handleSizeChange(e){console.log(`每页 ${e} 条`)},handleCurrentChange(e){console.log("当前页: "+e)}},data:()=>({currentPage1:5,currentPage2:5,currentPage3:5,currentPage4:4})};return Object.assign({render:function(a,h){const p=t("el-pagination");return n(),c("div",null,[e("div",o,[d,e(p,{"onSize-change":a.handleSizeChange,"onCurrent-change":a.handleCurrentChange,"current-page":a.currentPage1,"page-size":100,layout:"total, prev, pager, next",total:1e3},null,8,["onSize-change","onCurrent-change","current-page"])]),e("div",r,[l,e(p,{"onSize-change":a.handleSizeChange,"onCurrent-change":a.handleCurrentChange,"current-page":a.currentPage2,"page-sizes":[100,200,300,400],"page-size":100,layout:"sizes, prev, pager, next",total:1e3},null,8,["onSize-change","onCurrent-change","current-page"])]),e("div",i,[s,e(p,{"onSize-change":a.handleSizeChange,"onCurrent-change":a.handleCurrentChange,"current-page":a.currentPage3,"page-size":100,layout:"prev, pager, next, jumper",total:1e3},null,8,["onSize-change","onCurrent-change","current-page"])]),e("div",u,[g,e(p,{"onSize-change":a.handleSizeChange,"onCurrent-change":a.handleCurrentChange,"current-page":a.currentPage4,"page-sizes":[100,200,300,400],"page-size":100,layout:"total, sizes, prev, pager, next, jumper",total:400},null,8,["onSize-change","onCurrent-change","current-page"])])])}},h)}(),"element-demo5":function(){const{resolveComponent:e,createVNode:t,openBlock:n,createBlock:c}=a;const o={data:()=>({value:!1})};return Object.assign({render:function(a,o){const d=e("el-switch"),r=e("el-pagination");return n(),c("div",null,[t("div",null,[t(d,{modelValue:a.value,"onUpdate:modelValue":o[1]||(o[1]=e=>a.value=e)},null,8,["modelValue"]),t(r,{"hide-on-single-page":a.value,total:5,layout:"prev, pager, next"},null,8,["hide-on-single-page"])])])}},o)}()},render:function(e,t,n,k,w,S){const P=Object(a.resolveComponent)("element-demo0"),B=Object(a.resolveComponent)("demo-block"),_=Object(a.resolveComponent)("element-demo1"),$=Object(a.resolveComponent)("element-demo2"),J=Object(a.resolveComponent)("element-demo3"),A=Object(a.resolveComponent)("element-demo4"),E=Object(a.resolveComponent)("element-demo5");return Object(a.openBlock)(),Object(a.createBlock)("section",c,[o,d,r,Object(a.createVNode)(B,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)(P)]),highlight:Object(a.withCtx)(()=>[i]),default:Object(a.withCtx)(()=>[l]),_:1}),s,Object(a.createVNode)(B,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)(_)]),highlight:Object(a.withCtx)(()=>[g]),default:Object(a.withCtx)(()=>[u]),_:1}),h,Object(a.createVNode)(B,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)($)]),highlight:Object(a.withCtx)(()=>[b]),default:Object(a.withCtx)(()=>[p]),_:1}),j,O,Object(a.createVNode)(B,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)(J)]),highlight:Object(a.withCtx)(()=>[N]),default:Object(a.withCtx)(()=>[V]),_:1}),m,v,Object(a.createVNode)(B,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)(A)]),highlight:Object(a.withCtx)(()=>[C]),default:Object(a.withCtx)(()=>[x]),_:1}),y,z,Object(a.createVNode)(B,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)(E)]),highlight:Object(a.withCtx)(()=>[f]),_:1}),T])}};t.default=k}}]);