(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{655:function(e,t,d){"use strict";d.r(t);var r=d(0);const n={class:"content element-doc"},o=Object(r.createVNode)("h2",{id:"timeselect"},[Object(r.createVNode)("a",{class:"header-anchor",href:"#timeselect"},"¶"),Object(r.createTextVNode)(" TimeSelect")],-1),a=Object(r.createVNode)("p",null,"Utiliser TimeSelect pour sélectionner un horaire.",-1),c=Object(r.createVNode)("h3",{id:"selection-d-horaire-fixe"},[Object(r.createVNode)("a",{class:"header-anchor",href:"#selection-d-horaire-fixe"},"¶"),Object(r.createTextVNode)(" Sélection d'horaire fixe")],-1),i=Object(r.createVNode)("p",null,"Vous pouvez fournir une liste d'horaires fixés pour que l'utilisateur en choisisse un.",-1),l=Object(r.createVNode)("div",null,[Object(r.createVNode)("p",null,[Object(r.createTextVNode)("Utilisez "),Object(r.createVNode)("code",null,"el-time-select"),Object(r.createTextVNode)(" puis assignez un horaire de début, de fin et un pas grâce aux propriétés "),Object(r.createVNode)("code",null,"start"),Object(r.createTextVNode)(", "),Object(r.createVNode)("code",null,"end"),Object(r.createTextVNode)(" et "),Object(r.createVNode)("code",null,"step"),Object(r.createTextVNode)(" de l'attribut "),Object(r.createVNode)("code",null,"picker-options"),Object(r.createTextVNode)(".")])],-1),s=Object(r.createVNode)("pre",null,[Object(r.createVNode)("code",{class:"html"},"<el-time-select\n  v-model=\"value\"\n  :picker-options=\"{\n    start: '08:30',\n    step: '00:15',\n    end: '18:30'\n  }\"\n  placeholder=\"Choisissez un horaire\">\n</el-time-select>\n\n<script>\n  export default {\n    data() {\n      return {\n        value: ''\n      };\n    }\n  }\n<\/script>\n")],-1),u=Object(r.createVNode)("h3",{id:"intervalle-de-temps-fixe"},[Object(r.createVNode)("a",{class:"header-anchor",href:"#intervalle-de-temps-fixe"},"¶"),Object(r.createTextVNode)(" Intervalle de temps fixe")],-1),h=Object(r.createVNode)("p",null,"Vous pouvez définir un intervalle de temps. Si l'horaire de début est sélectionné en premier, certains horaires de fins seront désactivés s'ils ont lieu avant l'horaire de début.",-1),m=Object(r.createVNode)("pre",null,[Object(r.createVNode)("code",{class:"html"},"<template>\n  <el-time-select\n    placeholder=\"Horaire de début\"\n    v-model=\"startTime\"\n    :picker-options=\"{\n      start: '08:30',\n      step: '00:15',\n      end: '18:30'\n    }\">\n  </el-time-select>\n  <el-time-select\n    placeholder=\"Horaire de fin\"\n    v-model=\"endTime\"\n    :picker-options=\"{\n      start: '08:30',\n      step: '00:15',\n      end: '18:30',\n      minTime: startTime\n    }\">\n  </el-time-select>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        startTime: '',\n        endTime: ''\n      };\n    }\n  }\n<\/script>\n")],-1),p=Object(r.createStaticVNode)('<h3 id="attributs"><a class="header-anchor" href="#attributs">¶</a> Attributs</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Valeurs acceptées</th><th>Défaut</th></tr></thead><tbody><tr><td>value / v-model</td><td>La valeur liée.</td><td>date(TimePicker) / string(TimeSelect)</td><td>-</td><td>-</td></tr><tr><td>editable</td><td>Si le champ d&#39;input est éditable.</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>clearable</td><td>Si un bouton d&#39;effacement doit être affiché.</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>size</td><td>Taille du champ.</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>placeholder</td><td>Placeholder en mode non-intervalle.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>picker-options</td><td>Options additionnelles, voir la table ci-dessous.</td><td>object</td><td>—</td><td>{}</td></tr><tr><td>name</td><td>Attribut <code>name</code> natif de l&#39;input.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>prefix-icon</td><td>Classe de l&#39;icône de préfixe.</td><td>string</td><td>—</td><td>el-icon-time</td></tr><tr><td>clear-icon</td><td>Classe de l&#39;icône d&#39;effacement.</td><td>string</td><td>—</td><td>el-icon-circle-close</td></tr></tbody></table><h3 id="options-de-timeselect"><a class="header-anchor" href="#options-de-timeselect">¶</a> Options de TimeSelect</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Valeurs acceptées</th><th>Défaut</th></tr></thead><tbody><tr><td>start</td><td>Horaire de début.</td><td>string</td><td>—</td><td>09:00</td></tr><tr><td>end</td><td>Horaire de fin.</td><td>string</td><td>—</td><td>18:00</td></tr><tr><td>step</td><td>Intervalle entre les horaires.</td><td>string</td><td>—</td><td>00:30</td></tr><tr><td>minTime</td><td>Horaire minimum, n&#39;importe quel horaire avant celui-ci sera désactivé.</td><td>string</td><td>—</td><td>00:00</td></tr><tr><td>maxTime</td><td>Horaire maximum, n&#39;importe quel horaire après celui-ci sera désactivé.</td><td>string</td><td>—</td><td>—</td></tr></tbody></table><h3 id="evenements"><a class="header-anchor" href="#evenements">¶</a> Évènements</h3><table><thead><tr><th>Nom</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>change</td><td>Se déclenche quand l&#39;utilisateur confirme la valeur.</td><td>La valeur confirmée.</td></tr><tr><td>blur</td><td>Se déclenche quand le composant perd le focus.</td><td>L&#39;instance du composant.</td></tr><tr><td>focus</td><td>Se déclenche quand le composant a le focus.</td><td>L&#39;instance du composant.</td></tr></tbody></table><h3 id="methodes"><a class="header-anchor" href="#methodes">¶</a> Méthodes</h3><table><thead><tr><th>Méthode</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>focus</td><td>Met le focus sur le composant.</td><td>-</td></tr><tr><td>blur</td><td>Enlève le focus sur le composant.</td><td>-</td></tr></tbody></table>',8);var b={name:"component-doc",components:{"element-demo0":function(){const{resolveComponent:e,createVNode:t,openBlock:d,createBlock:n}=r;const o={data:()=>({value:""})};return Object.assign({render:function(r,o){const a=e("el-time-select");return d(),n("div",null,[t(a,{modelValue:r.value,"onUpdate:modelValue":o[1]||(o[1]=e=>r.value=e),"picker-options":{start:"08:30",step:"00:15",end:"18:30"},placeholder:"Choisissez un horaire"},null,8,["modelValue"])])}},o)}(),"element-demo1":function(){const{resolveComponent:e,createVNode:t,openBlock:d,createBlock:n}=r;const o={data:()=>({startTime:"",endTime:""})};return Object.assign({render:function(r,o){const a=e("el-time-select");return d(),n("div",null,[t(a,{placeholder:"Horaire de début",modelValue:r.startTime,"onUpdate:modelValue":o[1]||(o[1]=e=>r.startTime=e),"picker-options":{start:"08:30",step:"00:15",end:"18:30"}},null,8,["modelValue"]),t(a,{placeholder:"Horaire de fin",modelValue:r.endTime,"onUpdate:modelValue":o[2]||(o[2]=e=>r.endTime=e),"picker-options":{start:"08:30",step:"00:15",end:"18:30",minTime:r.startTime}},null,8,["modelValue","picker-options"])])}},o)}()},render:function(e,t,d,b,f,V){const O=Object(r.resolveComponent)("element-demo0"),j=Object(r.resolveComponent)("demo-block"),v=Object(r.resolveComponent)("element-demo1");return Object(r.openBlock)(),Object(r.createBlock)("section",n,[o,a,c,i,Object(r.createVNode)(j,null,{source:Object(r.withCtx)(()=>[Object(r.createVNode)(O)]),highlight:Object(r.withCtx)(()=>[s]),default:Object(r.withCtx)(()=>[l]),_:1}),u,h,Object(r.createVNode)(j,null,{source:Object(r.withCtx)(()=>[Object(r.createVNode)(v)]),highlight:Object(r.withCtx)(()=>[m]),_:1}),p])}};t.default=b}}]);