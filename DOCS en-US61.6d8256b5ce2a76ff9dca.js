(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{546:function(e,t,l){"use strict";l.r(t);var o=l(0);const d={class:"content element-doc"},n=Object(o.createVNode)("h2",{id:"upload"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#upload"},"¶"),Object(o.createTextVNode)(" Upload")],-1),a=Object(o.createVNode)("p",null,"Upload files by clicking or drag-and-drop",-1),i=Object(o.createVNode)("h3",{id:"click-to-upload-files"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#click-to-upload-files"},"¶"),Object(o.createTextVNode)(" Click to upload files")],-1),c=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Customize upload button type and text using "),Object(o.createVNode)("code",null,"slot"),Object(o.createTextVNode)(". Set "),Object(o.createVNode)("code",null,"limit"),Object(o.createTextVNode)(" and "),Object(o.createVNode)("code",null,"on-exceed"),Object(o.createTextVNode)(" to limit the maximum number of uploads allowed and specify method when the limit is exceeded. Plus, you can abort removing a file in the "),Object(o.createVNode)("code",null,"before-remove"),Object(o.createTextVNode)(" hook.")])],-1),s=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="upload-demo"\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :on-preview="handlePreview"\n  :on-remove="handleRemove"\n  :before-remove="beforeRemove"\n  multiple\n  :limit="3"\n  :on-exceed="handleExceed"\n  :file-list="fileList"\n>\n  <el-button size="small" type="primary">Click to upload</el-button>\n  <template #tip>\n    <div class="el-upload__tip">jpg/png files with a size less than 500kb</div>\n  </template>\n</el-upload>\n<script>\n  export default {\n    data() {\n      return {\n        fileList: [\n          {\n            name: \'food.jpeg\',\n            url:\n              \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\',\n          },\n          {\n            name: \'food2.jpeg\',\n            url:\n              \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\',\n          },\n        ],\n      }\n    },\n    methods: {\n      handleRemove(file, fileList) {\n        console.log(file, fileList)\n      },\n      handlePreview(file) {\n        console.log(file)\n      },\n      handleExceed(files, fileList) {\n        this.$message.warning(\n          `The limit is 3, you selected ${\n            files.length\n          } files this time, add up to ${\n            files.length + fileList.length\n          } totally`,\n        )\n      },\n      beforeRemove(file, fileList) {\n        return this.$confirm(`Cancel the transfert of ${file.name} ?`)\n      },\n    },\n  }\n<\/script>\n')],-1),r=Object(o.createVNode)("h3",{id:"user-avatar-upload"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#user-avatar-upload"},"¶"),Object(o.createTextVNode)(" User avatar upload")],-1),p=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Use "),Object(o.createVNode)("code",null,"before-upload"),Object(o.createTextVNode)(" hook to limit the upload file format and size.")],-1),u=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="avatar-uploader"\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :show-file-list="false"\n  :on-success="handleAvatarSuccess"\n  :before-upload="beforeAvatarUpload"\n>\n  <img v-if="imageUrl" :src="imageUrl" class="avatar" />\n  <i v-else class="el-icon-plus avatar-uploader-icon"></i>\n</el-upload>\n\n<style>\n  .avatar-uploader .el-upload {\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n  }\n  .avatar-uploader .el-upload:hover {\n    border-color: #409eff;\n  }\n  .avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 178px;\n    height: 178px;\n    line-height: 178px;\n    text-align: center;\n  }\n  .avatar {\n    width: 178px;\n    height: 178px;\n    display: block;\n  }\n</style>\n\n<script>\n  export default {\n    data() {\n      return {\n        imageUrl: \'\',\n      }\n    },\n    methods: {\n      handleAvatarSuccess(res, file) {\n        this.imageUrl = URL.createObjectURL(file.raw)\n      },\n      beforeAvatarUpload(file) {\n        const isJPG = file.type === \'image/jpeg\'\n        const isLt2M = file.size / 1024 / 1024 < 2\n\n        if (!isJPG) {\n          this.$message.error(\'Avatar picture must be JPG format!\')\n        }\n        if (!isLt2M) {\n          this.$message.error(\'Avatar picture size can not exceed 2MB!\')\n        }\n        return isJPG && isLt2M\n      },\n    },\n  }\n<\/script>\n')],-1),h=Object(o.createVNode)("h3",{id:"photo-wall"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#photo-wall"},"¶"),Object(o.createTextVNode)(" Photo Wall")],-1),m=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Use "),Object(o.createVNode)("code",null,"list-type"),Object(o.createTextVNode)(" to change the fileList style.")],-1),f=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  action="https://jsonplaceholder.typicode.com/posts/"\n  list-type="picture-card"\n  :on-preview="handlePictureCardPreview"\n  :on-remove="handleRemove"\n>\n  <i class="el-icon-plus"></i>\n</el-upload>\n<el-dialog :visible.sync="dialogVisible">\n  <img width="100%" :src="dialogImageUrl" alt="" />\n</el-dialog>\n<script>\n  export default {\n    data() {\n      return {\n        dialogImageUrl: \'\',\n        dialogVisible: false,\n      }\n    },\n    methods: {\n      handleRemove(file, fileList) {\n        console.log(file, fileList)\n      },\n      handlePictureCardPreview(file) {\n        this.dialogImageUrl = file.url\n        this.dialogVisible = true\n      },\n    },\n  }\n<\/script>\n')],-1),b=Object(o.createVNode)("h3",{id:"custom-file-thumbnail"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#custom-file-thumbnail"},"¶"),Object(o.createTextVNode)(" Custom file thumbnail")],-1),g=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Use "),Object(o.createVNode)("code",null,"scoped-slot"),Object(o.createTextVNode)(" to change default thumbnail template.")],-1),j=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload action="#" list-type="picture-card" :auto-upload="false">\n  <template #default>\n    <i class="el-icon-plus"></i>\n  </template>\n  <template #file="{file}">\n    <div>\n      <img class="el-upload-list__item-thumbnail" :src="file.url" alt="" />\n      <span class="el-upload-list__item-actions">\n        <span\n          class="el-upload-list__item-preview"\n          @click="handlePictureCardPreview(file)"\n        >\n          <i class="el-icon-zoom-in"></i>\n        </span>\n        <span\n          v-if="!disabled"\n          class="el-upload-list__item-delete"\n          @click="handleDownload(file)"\n        >\n          <i class="el-icon-download"></i>\n        </span>\n        <span\n          v-if="!disabled"\n          class="el-upload-list__item-delete"\n          @click="handleRemove(file)"\n        >\n          <i class="el-icon-delete"></i>\n        </span>\n      </span>\n    </div>\n  </template>\n</el-upload>\n<el-dialog :visible.sync="dialogVisible">\n  <img width="100%" :src="dialogImageUrl" alt="" />\n</el-dialog>\n<script>\n  export default {\n    data() {\n      return {\n        dialogImageUrl: \'\',\n        dialogVisible: false,\n        disabled: false,\n      }\n    },\n    methods: {\n      handleRemove(file) {\n        console.log(file)\n      },\n      handlePictureCardPreview(file) {\n        this.dialogImageUrl = file.url\n        this.dialogVisible = true\n      },\n      handleDownload(file) {\n        console.log(file)\n      },\n    },\n  }\n<\/script>\n')],-1),v=Object(o.createVNode)("h3",{id:"filelist-with-thumbnail"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#filelist-with-thumbnail"},"¶"),Object(o.createTextVNode)(" FileList with thumbnail")],-1),w=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="upload-demo"\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :on-preview="handlePreview"\n  :on-remove="handleRemove"\n  :file-list="fileList"\n  list-type="picture"\n>\n  <el-button size="small" type="primary">Click to upload</el-button>\n  <template #tip>\n    <div class="el-upload__tip">\n      jpg/png files with a size less than 500kb\n    </div>\n  </template>\n</el-upload>\n<script>\n  export default {\n    data() {\n      return {\n        fileList: [\n          {\n            name: \'food.jpeg\',\n            url:\n              \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\',\n          },\n          {\n            name: \'food2.jpeg\',\n            url:\n              \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\',\n          },\n        ],\n      }\n    },\n    methods: {\n      handleRemove(file, fileList) {\n        console.log(file, fileList)\n      },\n      handlePreview(file) {\n        console.log(file)\n      },\n    },\n  }\n<\/script>\n')],-1),O=Object(o.createVNode)("h3",{id:"file-list-control"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#file-list-control"},"¶"),Object(o.createTextVNode)(" File list control")],-1),V=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Use "),Object(o.createVNode)("code",null,"on-change"),Object(o.createTextVNode)(" hook function to control upload file list")],-1),x=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="upload-demo"\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :on-change="handleChange"\n  :file-list="fileList"\n>\n  <el-button size="small" type="primary">Click to upload</el-button>\n  <template #tip>\n    <div class="el-upload__tip">\n      jpg/png files with a size less than 500kb\n    </div>\n  </template>\n</el-upload>\n<script>\n  export default {\n    data() {\n      return {\n        fileList: [\n          {\n            name: \'food.jpeg\',\n            url:\n              \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\',\n          },\n          {\n            name: \'food2.jpeg\',\n            url:\n              \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\',\n          },\n        ],\n      }\n    },\n    methods: {\n      handleChange(file, fileList) {\n        this.fileList = fileList.slice(-3)\n      },\n    },\n  }\n<\/script>\n')],-1),N=Object(o.createVNode)("h3",{id:"drag-to-upload"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#drag-to-upload"},"¶"),Object(o.createTextVNode)(" Drag to upload")],-1),y=Object(o.createVNode)("p",null,"You can drag your file to a certain area to upload it.",-1),k=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="upload-demo"\n  drag\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :on-preview="handlePreview"\n  :on-remove="handleRemove"\n  :file-list="fileList"\n  multiple\n>\n  <i class="el-icon-upload"></i>\n  <div class="el-upload__text">Drop file here or <em>click to upload</em></div>\n  <template #tip>\n    <div class="el-upload__tip">\n      jpg/png files with a size less than 500kb\n    </div>\n  </template>\n</el-upload>\n')],-1),C=Object(o.createVNode)("h3",{id:"manual-upload"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#manual-upload"},"¶"),Object(o.createTextVNode)(" Manual upload")],-1),_=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="upload-demo"\n  ref="upload"\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :auto-upload="false"\n>\n  <template #trigger>\n    <el-button size="small" type="primary">select file</el-button>\n  </template>\n  <el-button\n    style="margin-left: 10px;"\n    size="small"\n    type="success"\n    @click="submitUpload"\n    >upload to server</el-button\n  >\n  <template #tip>\n    <div class="el-upload__tip">\n      jpg/png files with a size less than 500kb\n    </div>\n  </template>\n</el-upload>\n<script>\n  export default {\n    methods: {\n      submitUpload() {\n        this.$refs.upload.submit()\n      },\n    },\n  }\n<\/script>\n')],-1),L=Object(o.createStaticVNode)('<h3 id="attributes"><a class="header-anchor" href="#attributes">¶</a> Attributes</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>action</td><td>required, request URL</td><td>string</td><td>—</td><td>—</td></tr><tr><td>headers</td><td>request headers</td><td>object</td><td>—</td><td>—</td></tr><tr><td>multiple</td><td>whether uploading multiple files is permitted</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>data</td><td>additions options of request</td><td>object</td><td>—</td><td>—</td></tr><tr><td>name</td><td>key name for uploaded file</td><td>string</td><td>—</td><td>file</td></tr><tr><td>with-credentials</td><td>whether cookies are sent</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-file-list</td><td>whether to show the uploaded file list</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>drag</td><td>whether to activate drag and drop mode</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>accept</td><td>accepted <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept">file types</a>, will not work when <code>thumbnail-mode</code> is <code>true</code></td><td>string</td><td>—</td><td>—</td></tr><tr><td>on-preview</td><td>hook function when clicking the uploaded files</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>on-remove</td><td>hook function when files are removed</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-success</td><td>hook function when uploaded successfully</td><td>function(response, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-error</td><td>hook function when some errors occurs</td><td>function(err, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-progress</td><td>hook function when some progress occurs</td><td>function(event, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-change</td><td>hook function when select file or upload file success or upload file fail</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>before-upload</td><td>hook function before uploading with the file to be uploaded as its parameter. If <code>false</code> is returned or a <code>Promise</code> is returned and then is rejected, uploading will be aborted</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>before-remove</td><td>hook function before removing a file with the file and file list as its parameters. If <code>false</code> is returned or a <code>Promise</code> is returned and then is rejected, removing will be aborted.</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>thumbnail-mode</td><td>whether thumbnail is displayed</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>file-list</td><td>default uploaded files, e.g. [{name: &#39;food.jpg&#39;, url: &#39;https://xxx.cdn.com/xxx.jpg&#39;}]</td><td>array</td><td>—</td><td>[]</td></tr><tr><td>list-type</td><td>type of fileList</td><td>string</td><td>text/picture/picture-card</td><td>text</td></tr><tr><td>auto-upload</td><td>whether to auto upload file</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>http-request</td><td>override default xhr behavior, allowing you to implement your own upload-file&#39;s request</td><td>function</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>whether to disable upload</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>limit</td><td>maximum number of uploads allowed</td><td>number</td><td>—</td><td>—</td></tr><tr><td>on-exceed</td><td>hook function when limit is exceeded</td><td>function(files, fileList)</td><td>—</td><td>-</td></tr></tbody></table><h3 id="slot"><a class="header-anchor" href="#slot">¶</a> Slot</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>trigger</td><td>content which triggers file dialog</td></tr><tr><td>tip</td><td>content of tips</td></tr></tbody></table><h3 id="methods"><a class="header-anchor" href="#methods">¶</a> Methods</h3><table><thead><tr><th>Methods Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>clearFiles</td><td>clear the uploaded file list (this method is not supported in the <code>before-upload</code> hook)</td><td>—</td></tr><tr><td>abort</td><td>cancel upload request</td><td>（ file: fileList&#39;s item ）</td></tr><tr><td>submit</td><td>upload the file list manually</td><td>—</td></tr></tbody></table>',6);var U={name:"component-doc",components:{"element-demo0":function(){const{createTextVNode:e,resolveComponent:t,withCtx:l,createVNode:d,openBlock:n,createBlock:a}=o,i=e("Click to upload"),c=d("div",{class:"el-upload__tip"},"jpg/png files with a size less than 500kb",-1);const s={data:()=>({fileList:[{name:"food.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"},{name:"food2.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"}]}),methods:{handleRemove(e,t){console.log(e,t)},handlePreview(e){console.log(e)},handleExceed(e,t){this.$message.warning(`The limit is 3, you selected ${e.length} files this time, add up to ${e.length+t.length} totally`)},beforeRemove(e,t){return this.$confirm(`Cancel the transfert of ${e.name} ?`)}}};return Object.assign({render:function(e,o){const s=t("el-button"),r=t("el-upload");return n(),a("div",null,[d(r,{class:"upload-demo",action:"https://jsonplaceholder.typicode.com/posts/","on-preview":e.handlePreview,"on-remove":e.handleRemove,"before-remove":e.beforeRemove,multiple:"",limit:3,"on-exceed":e.handleExceed,"file-list":e.fileList},{tip:l(()=>[c]),default:l(()=>[d(s,{size:"small",type:"primary"},{default:l(()=>[i]),_:1})]),_:1},8,["on-preview","on-remove","before-remove","on-exceed","file-list"])])}},s)}(),"element-demo1":function(){const{createVNode:e,openBlock:t,createBlock:l,createCommentVNode:d,resolveComponent:n,withCtx:a}=o,i={key:1,class:"el-icon-plus avatar-uploader-icon"};const c={data:()=>({imageUrl:""}),methods:{handleAvatarSuccess(e,t){this.imageUrl=URL.createObjectURL(t.raw)},beforeAvatarUpload(e){const t="image/jpeg"===e.type,l=e.size/1024/1024<2;return t||this.$message.error("Avatar picture must be JPG format!"),l||this.$message.error("Avatar picture size can not exceed 2MB!"),t&&l}}};return Object.assign({render:function(o,d){const c=n("el-upload");return t(),l("div",null,[e(c,{class:"avatar-uploader",action:"https://jsonplaceholder.typicode.com/posts/","show-file-list":!1,"on-success":o.handleAvatarSuccess,"before-upload":o.beforeAvatarUpload},{default:a(()=>[o.imageUrl?(t(),l("img",{key:0,src:o.imageUrl,class:"avatar"},null,8,["src"])):(t(),l("i",i))]),_:1},8,["on-success","before-upload"])])}},c)}(),"element-demo2":function(){const{createVNode:e,resolveComponent:t,withCtx:l,openBlock:d,createBlock:n}=o,a=e("i",{class:"el-icon-plus"},null,-1);const i={data:()=>({dialogImageUrl:"",dialogVisible:!1}),methods:{handleRemove(e,t){console.log(e,t)},handlePictureCardPreview(e){this.dialogImageUrl=e.url,this.dialogVisible=!0}}};return Object.assign({render:function(o,i){const c=t("el-upload"),s=t("el-dialog");return d(),n("div",null,[e(c,{action:"https://jsonplaceholder.typicode.com/posts/","list-type":"picture-card","on-preview":o.handlePictureCardPreview,"on-remove":o.handleRemove},{default:l(()=>[a]),_:1},8,["on-preview","on-remove"]),e(s,{visible:o.dialogVisible},{default:l(()=>[e("img",{width:"100%",src:o.dialogImageUrl,alt:""},null,8,["src"])]),_:1},8,["visible"])])}},i)}(),"element-demo3":function(){const{createVNode:e,openBlock:t,createBlock:l,createCommentVNode:d,resolveComponent:n,withCtx:a}=o,i=e("i",{class:"el-icon-plus"},null,-1),c={class:"el-upload-list__item-actions"},s=e("i",{class:"el-icon-zoom-in"},null,-1),r=e("i",{class:"el-icon-download"},null,-1),p=e("i",{class:"el-icon-delete"},null,-1);const u={data:()=>({dialogImageUrl:"",dialogVisible:!1,disabled:!1}),methods:{handleRemove(e){console.log(e)},handlePictureCardPreview(e){this.dialogImageUrl=e.url,this.dialogVisible=!0},handleDownload(e){console.log(e)}}};return Object.assign({render:function(o,u){const h=n("el-upload"),m=n("el-dialog");return t(),l("div",null,[e(h,{action:"#","list-type":"picture-card","auto-upload":!1},{default:a(()=>[i]),file:a(({file:n})=>[e("div",null,[e("img",{class:"el-upload-list__item-thumbnail",src:n.url,alt:""},null,8,["src"]),e("span",c,[e("span",{class:"el-upload-list__item-preview",onClick:e=>o.handlePictureCardPreview(n)},[s],8,["onClick"]),o.disabled?d("",!0):(t(),l("span",{key:0,class:"el-upload-list__item-delete",onClick:e=>o.handleDownload(n)},[r],8,["onClick"])),o.disabled?d("",!0):(t(),l("span",{key:1,class:"el-upload-list__item-delete",onClick:e=>o.handleRemove(n)},[p],8,["onClick"]))])])]),_:1}),e(m,{visible:o.dialogVisible},{default:a(()=>[e("img",{width:"100%",src:o.dialogImageUrl,alt:""},null,8,["src"])]),_:1},8,["visible"])])}},u)}(),"element-demo4":function(){const{createTextVNode:e,resolveComponent:t,withCtx:l,createVNode:d,openBlock:n,createBlock:a}=o,i=e("Click to upload"),c=d("div",{class:"el-upload__tip"}," jpg/png files with a size less than 500kb ",-1);const s={data:()=>({fileList:[{name:"food.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"},{name:"food2.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"}]}),methods:{handleRemove(e,t){console.log(e,t)},handlePreview(e){console.log(e)}}};return Object.assign({render:function(e,o){const s=t("el-button"),r=t("el-upload");return n(),a("div",null,[d(r,{class:"upload-demo",action:"https://jsonplaceholder.typicode.com/posts/","on-preview":e.handlePreview,"on-remove":e.handleRemove,"file-list":e.fileList,"list-type":"picture"},{tip:l(()=>[c]),default:l(()=>[d(s,{size:"small",type:"primary"},{default:l(()=>[i]),_:1})]),_:1},8,["on-preview","on-remove","file-list"])])}},s)}(),"element-demo5":function(){const{createTextVNode:e,resolveComponent:t,withCtx:l,createVNode:d,openBlock:n,createBlock:a}=o,i=e("Click to upload"),c=d("div",{class:"el-upload__tip"}," jpg/png files with a size less than 500kb ",-1);const s={data:()=>({fileList:[{name:"food.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"},{name:"food2.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"}]}),methods:{handleChange(e,t){this.fileList=t.slice(-3)}}};return Object.assign({render:function(e,o){const s=t("el-button"),r=t("el-upload");return n(),a("div",null,[d(r,{class:"upload-demo",action:"https://jsonplaceholder.typicode.com/posts/","on-change":e.handleChange,"file-list":e.fileList},{tip:l(()=>[c]),default:l(()=>[d(s,{size:"small",type:"primary"},{default:l(()=>[i]),_:1})]),_:1},8,["on-change","file-list"])])}},s)}(),"element-demo6":function(){const{createVNode:e,createTextVNode:t,resolveComponent:l,withCtx:d,openBlock:n,createBlock:a}=o,i=e("i",{class:"el-icon-upload"},null,-1),c=e("div",{class:"el-upload__text"},[t("Drop file here or "),e("em",null,"click to upload")],-1),s=e("div",{class:"el-upload__tip"}," jpg/png files with a size less than 500kb ",-1);return Object.assign({render:function(t,o){const r=l("el-upload");return n(),a("div",null,[e(r,{class:"upload-demo",drag:"",action:"https://jsonplaceholder.typicode.com/posts/","on-preview":t.handlePreview,"on-remove":t.handleRemove,"file-list":t.fileList,multiple:""},{tip:d(()=>[s]),default:d(()=>[i,c]),_:1},8,["on-preview","on-remove","file-list"])])}},{})}(),"element-demo7":function(){const{createTextVNode:e,resolveComponent:t,withCtx:l,createVNode:d,openBlock:n,createBlock:a}=o,i=e("select file"),c=e("upload to server"),s=d("div",{class:"el-upload__tip"}," jpg/png files with a size less than 500kb ",-1);const r={methods:{submitUpload(){this.$refs.upload.submit()}}};return Object.assign({render:function(e,o){const r=t("el-button"),p=t("el-upload");return n(),a("div",null,[d(p,{class:"upload-demo",ref:"upload",action:"https://jsonplaceholder.typicode.com/posts/","auto-upload":!1},{trigger:l(()=>[d(r,{size:"small",type:"primary"},{default:l(()=>[i]),_:1})]),tip:l(()=>[s]),default:l(()=>[d(r,{style:{"margin-left":"10px"},size:"small",type:"success",onClick:e.submitUpload},{default:l(()=>[c]),_:1},8,["onClick"])]),_:1},512)])}},r)}()},render:function(e,t,l,U,P,T){const z=Object(o.resolveComponent)("element-demo0"),R=Object(o.resolveComponent)("demo-block"),M=Object(o.resolveComponent)("element-demo1"),B=Object(o.resolveComponent)("element-demo2"),q=Object(o.resolveComponent)("element-demo3"),$=Object(o.resolveComponent)("element-demo4"),A=Object(o.resolveComponent)("element-demo5"),I=Object(o.resolveComponent)("element-demo6"),D=Object(o.resolveComponent)("element-demo7");return Object(o.openBlock)(),Object(o.createBlock)("section",d,[n,a,i,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(z)]),highlight:Object(o.withCtx)(()=>[s]),default:Object(o.withCtx)(()=>[c]),_:1}),r,p,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(M)]),highlight:Object(o.withCtx)(()=>[u]),_:1}),h,m,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(B)]),highlight:Object(o.withCtx)(()=>[f]),_:1}),b,g,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(q)]),highlight:Object(o.withCtx)(()=>[j]),_:1}),v,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)($)]),highlight:Object(o.withCtx)(()=>[w]),_:1}),O,V,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(A)]),highlight:Object(o.withCtx)(()=>[x]),_:1}),N,y,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(I)]),highlight:Object(o.withCtx)(()=>[k]),_:1}),C,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(D)]),highlight:Object(o.withCtx)(()=>[_]),_:1}),L])}};t.default=U}}]);