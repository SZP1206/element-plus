(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{625:function(e,t,r){"use strict";r.r(t);var o=r(0);const a={class:"content element-doc"},d=Object(o.createStaticVNode)('<h2 id="drawer"><a class="header-anchor" href="#drawer">¶</a> Drawer</h2><p>Sometimes, <code>Dialog</code> does not always satisfy our requirements, let&#39;s say you have a massive form, or you need space to display something like <code>terms &amp; conditions</code>, <code>Drawer</code> has almost identical API with <code>Dialog</code>, but it introduces different user experience.</p><h3 id="basic-usage"><a class="header-anchor" href="#basic-usage">¶</a> Basic Usage</h3><p>Callout a temporary drawer, from multiple direction</p>',4),n=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("You must set "),Object(o.createVNode)("code",null,"visible"),Object(o.createTextVNode)(" for "),Object(o.createVNode)("code",null,"Drawer"),Object(o.createTextVNode)(" like "),Object(o.createVNode)("code",null,"Dialog"),Object(o.createTextVNode)(" does to control the visibility of "),Object(o.createVNode)("code",null,"Drawer"),Object(o.createTextVNode)(" itself, it's "),Object(o.createVNode)("code",null,"boolean"),Object(o.createTextVNode)(" type. "),Object(o.createVNode)("code",null,"Drawer"),Object(o.createTextVNode)(" has to parts: "),Object(o.createVNode)("code",null,"title"),Object(o.createTextVNode)(" & "),Object(o.createVNode)("code",null,"body"),Object(o.createTextVNode)(", the "),Object(o.createVNode)("code",null,"title"),Object(o.createTextVNode)(" is a named slot, you can also set the title through attribute named "),Object(o.createVNode)("code",null,"title"),Object(o.createTextVNode)(", default to an empty string, the "),Object(o.createVNode)("code",null,"body"),Object(o.createTextVNode)(" part is the main area of "),Object(o.createVNode)("code",null,"Drawer"),Object(o.createTextVNode)(", which contains user defined content. When opening, "),Object(o.createVNode)("code",null,"Drawer"),Object(o.createTextVNode)(" expand itself from the "),Object(o.createVNode)("strong",null,"right corner to left"),Object(o.createTextVNode)(" which size is "),Object(o.createVNode)("strong",null,"30%"),Object(o.createTextVNode)(" of the browser window by default. You can change that default behavior by setting "),Object(o.createVNode)("code",null,"direction"),Object(o.createTextVNode)(" and "),Object(o.createVNode)("code",null,"size"),Object(o.createTextVNode)(" attribute. This show case also demonstrated how to use the "),Object(o.createVNode)("code",null,"before-close"),Object(o.createTextVNode)(" API, check the Attribute section for more detail")])],-1),l=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-radio-group v-model="direction">\n  <el-radio label="ltr">left to right</el-radio>\n  <el-radio label="rtl">right to left</el-radio>\n  <el-radio label="ttb">top to bottom</el-radio>\n  <el-radio label="btt">bottom to top</el-radio>\n</el-radio-group>\n\n<el-button @click="drawer = true" type="primary" style="margin-left: 16px;">\n  open\n</el-button>\n\n<el-drawer\n  title="I am the title"\n  :visible.sync="drawer"\n  :direction="direction"\n  :before-close="handleClose">\n  <span>Hi, there!</span>\n</el-drawer>\n\n<script>\n  export default {\n    data() {\n      return {\n        drawer: false,\n        direction: \'rtl\',\n      };\n    },\n    methods: {\n      handleClose(done) {\n        this.$confirm(\'Are you sure you want to close this?\')\n          .then(_ => {\n            done();\n          })\n          .catch(_ => {});\n      }\n    }\n  };\n<\/script>\n')],-1),i=Object(o.createVNode)("h3",{id:"no-title"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#no-title"},"¶"),Object(o.createTextVNode)(" No Title")],-1),c=Object(o.createVNode)("p",null,"When you no longer need a title, you can remove title from drawer.",-1),s=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Set the "),Object(o.createVNode)("code",null,"withHeader"),Object(o.createTextVNode)(" attribute to "),Object(o.createVNode)("strong",null,"false"),Object(o.createTextVNode)(", you can remove the title from drawer, thus your drawer can have more space on screen. If you want to be accessible, make sure to set the "),Object(o.createVNode)("code",null,"title"),Object(o.createTextVNode)(" attribute.")])],-1),b=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-button @click="drawer = true" type="primary" style="margin-left: 16px;">\n  open\n</el-button>\n\n<el-drawer\n  title="I am the title"\n  :visible.sync="drawer"\n  :with-header="false">\n  <span>Hi there!</span>\n</el-drawer>\n\n<script>\n  export default {\n    data() {\n      return {\n        drawer: false,\n      };\n    }\n  };\n<\/script>\n')],-1),h=Object(o.createVNode)("h3",{id:"customization-content"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#customization-content"},"¶"),Object(o.createTextVNode)(" Customization Content")],-1),u=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Like "),Object(o.createVNode)("code",null,"Dialog"),Object(o.createTextVNode)(", "),Object(o.createVNode)("code",null,"Drawer"),Object(o.createTextVNode)(" can do many diverse interaction as you wanted.")],-1),m=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-button type="text" @click="table = true">Open Drawer with nested table</el-button>\n<el-button type="text" @click="dialog = true">Open Drawer with nested form</el-button>\n<el-drawer\n  title="I have a nested table inside!"\n  :visible.sync="table"\n  direction="rtl"\n  size="50%">\n   <el-table :data="gridData">\n      <el-table-column property="date" label="Date" width="150"></el-table-column>\n      <el-table-column property="name" label="Name" width="200"></el-table-column>\n      <el-table-column property="address" label="Address"></el-table-column>\n    </el-table>\n</el-drawer>\n\n<el-drawer\n  title="I have a nested form inside!"\n  :before-close="handleClose"\n  :visible.sync="dialog"\n  direction="ltr"\n  custom-class="demo-drawer"\n  ref="drawer"\n  >\n  <div class="demo-drawer__content">\n    <el-form :model="form">\n      <el-form-item label="Name" :label-width="formLabelWidth">\n        <el-input v-model="form.name" autocomplete="off"></el-input>\n      </el-form-item>\n      <el-form-item label="Area" :label-width="formLabelWidth">\n        <el-select v-model="form.region" placeholder="Please select activity area">\n          <el-option label="Area1" value="shanghai"></el-option>\n          <el-option label="Area2" value="beijing"></el-option>\n        </el-select>\n      </el-form-item>\n    </el-form>\n    <div class="demo-drawer__footer">\n      <el-button @click="cancelForm">Cancel</el-button>\n      <el-button type="primary" @click="$refs.drawer.closeDrawer()" :loading="loading">{{ loading ? \'Submitting ...\' : \'Submit\' }}</el-button>\n    </div>\n  </div>\n</el-drawer>\n\n<script>\nexport default {\n  data() {\n    return {\n      table: false,\n      dialog: false,\n      loading: false,\n      gridData: [{\n        date: \'2016-05-02\',\n        name: \'Peter Parker\',\n        address: \'Queens, New York City\'\n      }, {\n        date: \'2016-05-04\',\n        name: \'Peter Parker\',\n        address: \'Queens, New York City\'\n      }, {\n        date: \'2016-05-01\',\n        name: \'Peter Parker\',\n        address: \'Queens, New York City\'\n      }, {\n        date: \'2016-05-03\',\n        name: \'Peter Parker\',\n        address: \'Queens, New York City\'\n      }],\n      form: {\n        name: \'\',\n        region: \'\',\n        date1: \'\',\n        date2: \'\',\n        delivery: false,\n        type: [],\n        resource: \'\',\n        desc: \'\'\n      },\n      formLabelWidth: \'80px\',\n      timer: null,\n    };\n  },\n  methods: {\n    handleClose(done) {\n      if (this.loading) {\n        return;\n      }\n      this.$confirm(\'Do you want to submit?\')\n        .then(_ => {\n          this.loading = true;\n          this.timer = setTimeout(() => {\n            done();\n            // animation takes time\n            setTimeout(() => {\n              this.loading = false;\n            }, 400);\n          }, 2000);\n        })\n        .catch(_ => {});\n    },\n    cancelForm() {\n      this.loading = false;\n      this.dialog = false;\n      clearTimeout(this.timer);\n    }\n  }\n}\n<\/script>\n')],-1),p=Object(o.createVNode)("h3",{id:"nested-drawer"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#nested-drawer"},"¶"),Object(o.createTextVNode)(" Nested Drawer")],-1),w=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("You can also have multiple layer of "),Object(o.createVNode)("code",null,"Drawer"),Object(o.createTextVNode)(" just like "),Object(o.createVNode)("code",null,"Dialog"),Object(o.createTextVNode)(".")],-1),f=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("If you need multiple Drawer in different layer, you must set the "),Object(o.createVNode)("code",null,"append-to-body"),Object(o.createTextVNode)(" attribute to "),Object(o.createVNode)("strong",null,"true")])],-1),y=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'\n<el-button @click="drawer = true" type="primary" style="margin-left: 16px;">\n  open\n</el-button>\n\n<el-drawer\n  title="I\'m outer Drawer"\n  :visible.sync="drawer"\n  size="50%">\n  <div>\n   <el-button @click="innerDrawer = true">Click me!</el-button>\n   <el-drawer\n     title="I\'m inner Drawer"\n     :append-to-body="true"\n     :before-close="handleClose"\n     :visible.sync="innerDrawer">\n     <p>_(:зゝ∠)_</p>\n   </el-drawer>\n  </div>\n</el-drawer>\n\n<script>\n  export default {\n    data() {\n      return {\n        drawer: false,\n        innerDrawer: false,\n      };\n    },\n    methods: {\n      handleClose(done) {\n        this.$confirm(\'You still have unsaved data, proceed?\')\n          .then(_ => {\n            done();\n          })\n          .catch(_ => {});\n      }\n    }\n  };\n<\/script>\n\n')],-1),g=Object(o.createStaticVNode)('<div class="tip"><p>The content inside Drawer should be lazy rendered, which means that the content inside Drawer will not impact the initial render performance, therefore any DOM operation should be performed through <code>ref</code> or after <code>open</code> event emitted.</p></div><div class="tip"><p>Drawer provides an API called <code>destroyOnClose</code>, which is a flag variable that indicates should destroy the children content inside Drawer after Drawer was closed. You can use this API when you need your <code>mounted</code> life cycle to be called every time the Drawer opens.</p></div><div class="tip"><p>If the variable bound to <code>visible</code> is managed in Vuex store, the <code>.sync</code> can not work properly. In this case, please remove the <code>.sync</code> modifier, listen to <code>open</code> and <code>close</code> events of Dialog, and commit Vuex mutations to update the value of that variable in the event handlers.</p></div><h3 id="drawer-attributes"><a class="header-anchor" href="#drawer-attributes">¶</a> Drawer Attributes</h3><table><thead><tr><th>Parameter</th><th>Description</th><th>Type</th><th>Acceptable Values</th><th>Defaults</th></tr></thead><tbody><tr><td>append-to-body</td><td>Controls should Drawer be inserted to DocumentBody Element, nested Drawer must assign this param to <strong>true</strong></td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>before-close</td><td>If set, closing procedure will be halted</td><td>function(done), done is function type that accepts a boolean as parameter, calling done with true or without parameter will abort the close procedure</td><td>—</td><td>—</td></tr><tr><td>close-on-press-escape</td><td>Indicates whether Drawer can be closed by pressing ESC</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>custom-class</td><td>Extra class names for Drawer</td><td>string</td><td>—</td><td>—</td></tr><tr><td>destroy-on-close</td><td>Indicates whether children should be destroyed after Drawer closed</td><td>boolean</td><td>-</td><td>false</td></tr><tr><td>modal</td><td>Should show shadowing layer</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>modal-append-to-body</td><td>Indicates should shadowing layer be insert into DocumentBody element</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>direction</td><td>Drawer&#39;s opening direction</td><td>Direction</td><td>rtl / ltr / ttb / btt</td><td>rtl</td></tr><tr><td>show-close</td><td>Should show close button at the top right of Drawer</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>size</td><td>Drawer&#39;s size, if Drawer is horizontal mode, it effects the width property, otherwise it effects the height property, when size is <code>number</code> type, it describes the size by unit of pixels; when size is <code>string</code> type, it should be used with <code>x%</code> notation, other wise it will be interpreted to pixel unit</td><td>number / string</td><td>-</td><td>&#39;30%&#39;</td></tr><tr><td>title</td><td>Drawer&#39;s title, can also be set by named slot, detailed descriptions can be found in the slot form</td><td>string</td><td>—</td><td>—</td></tr><tr><td>visible</td><td>Should Drawer be displayed, also support the <code>.sync</code> notation</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>wrapperClosable</td><td>Indicates whether user can close Drawer by clicking the shadowing layer.</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td>withHeader</td><td>Flag that controls the header section&#39;s existance, default to true, when withHeader set to false, both <code>title attribute</code> and <code>title slot</code> won&#39;t work</td><td>boolean</td><td>-</td><td>true</td></tr></tbody></table><h3 id="drawer-slot"><a class="header-anchor" href="#drawer-slot">¶</a> Drawer Slot</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>—</td><td>Drawer&#39;s Content</td></tr><tr><td>title</td><td>Drawer Title Section</td></tr></tbody></table><h3 id="drawer-methods"><a class="header-anchor" href="#drawer-methods">¶</a> Drawer Methods</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>closeDrawer</td><td>In order to close Drawer, this method will call <code>before-close</code>.</td></tr></tbody></table><h3 id="drawer-events"><a class="header-anchor" href="#drawer-events">¶</a> Drawer Events</h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Parameter</th></tr></thead><tbody><tr><td>open</td><td>Triggered before Drawer opening animation begins</td><td>—</td></tr><tr><td>opened</td><td>Triggered after Drawer opening animation ended</td><td>—</td></tr><tr><td>close</td><td>Triggered before Drawer closing animation begins</td><td>—</td></tr><tr><td>closed</td><td>Triggered after Drawer closing animation ended</td><td>—</td></tr></tbody></table>',11);var O={name:"component-doc",components:{"element-demo0":function(){const{createTextVNode:e,resolveComponent:t,withCtx:r,createVNode:a,openBlock:d,createBlock:n}=o,l=e("left to right"),i=e("right to left"),c=e("top to bottom"),s=e("bottom to top"),b=e(" open "),h=a("span",null,"Hi, there!",-1);const u={data:()=>({drawer:!1,direction:"rtl"}),methods:{handleClose(e){this.$confirm("Are you sure you want to close this?").then(t=>{e()}).catch(e=>{})}}};return Object.assign({render:function(e,o){const u=t("el-radio"),m=t("el-radio-group"),p=t("el-button"),w=t("el-drawer");return d(),n("div",null,[a(m,{modelValue:e.direction,"onUpdate:modelValue":o[1]||(o[1]=t=>e.direction=t)},{default:r(()=>[a(u,{label:"ltr"},{default:r(()=>[l]),_:1}),a(u,{label:"rtl"},{default:r(()=>[i]),_:1}),a(u,{label:"ttb"},{default:r(()=>[c]),_:1}),a(u,{label:"btt"},{default:r(()=>[s]),_:1})]),_:1},8,["modelValue"]),a(p,{onClick:o[2]||(o[2]=t=>e.drawer=!0),type:"primary",style:{"margin-left":"16px"}},{default:r(()=>[b]),_:1}),a(w,{title:"I am the title",visible:e.drawer,direction:e.direction,"before-close":e.handleClose},{default:r(()=>[h]),_:1},8,["visible","direction","before-close"])])}},u)}(),"element-demo1":function(){const{createTextVNode:e,resolveComponent:t,withCtx:r,createVNode:a,openBlock:d,createBlock:n}=o,l=e(" open "),i=a("span",null,"Hi there!",-1);const c={data:()=>({drawer:!1})};return Object.assign({render:function(e,o){const c=t("el-button"),s=t("el-drawer");return d(),n("div",null,[a(c,{onClick:o[1]||(o[1]=t=>e.drawer=!0),type:"primary",style:{"margin-left":"16px"}},{default:r(()=>[l]),_:1}),a(s,{title:"I am the title",visible:e.drawer,"with-header":!1},{default:r(()=>[i]),_:1},8,["visible"])])}},c)}(),"element-demo2":function(){const{createTextVNode:e,resolveComponent:t,withCtx:r,createVNode:a,toDisplayString:d,openBlock:n,createBlock:l}=o,i=e("Open Drawer with nested table"),c=e("Open Drawer with nested form"),s={class:"demo-drawer__content"},b={class:"demo-drawer__footer"},h=e("Cancel");const u={data:()=>({table:!1,dialog:!1,loading:!1,gridData:[{date:"2016-05-02",name:"Peter Parker",address:"Queens, New York City"},{date:"2016-05-04",name:"Peter Parker",address:"Queens, New York City"},{date:"2016-05-01",name:"Peter Parker",address:"Queens, New York City"},{date:"2016-05-03",name:"Peter Parker",address:"Queens, New York City"}],form:{name:"",region:"",date1:"",date2:"",delivery:!1,type:[],resource:"",desc:""},formLabelWidth:"80px",timer:null}),methods:{handleClose(e){this.loading||this.$confirm("Do you want to submit?").then(t=>{this.loading=!0,this.timer=setTimeout(()=>{e(),setTimeout(()=>{this.loading=!1},400)},2e3)}).catch(e=>{})},cancelForm(){this.loading=!1,this.dialog=!1,clearTimeout(this.timer)}}};return Object.assign({render:function(o,u){const m=t("el-button"),p=t("el-table-column"),w=t("el-table"),f=t("el-drawer"),y=t("el-input"),g=t("el-form-item"),O=t("el-option"),j=t("el-select"),N=t("el-form");return n(),l("div",null,[a(m,{type:"text",onClick:u[1]||(u[1]=e=>o.table=!0)},{default:r(()=>[i]),_:1}),a(m,{type:"text",onClick:u[2]||(u[2]=e=>o.dialog=!0)},{default:r(()=>[c]),_:1}),a(f,{title:"I have a nested table inside!",visible:o.table,direction:"rtl",size:"50%"},{default:r(()=>[a(w,{data:o.gridData},{default:r(()=>[a(p,{property:"date",label:"Date",width:"150"}),a(p,{property:"name",label:"Name",width:"200"}),a(p,{property:"address",label:"Address"})]),_:1},8,["data"])]),_:1},8,["visible"]),a(f,{title:"I have a nested form inside!","before-close":o.handleClose,visible:o.dialog,direction:"ltr","custom-class":"demo-drawer",ref:"drawer"},{default:r(()=>[a("div",s,[a(N,{model:o.form},{default:r(()=>[a(g,{label:"Name","label-width":o.formLabelWidth},{default:r(()=>[a(y,{modelValue:o.form.name,"onUpdate:modelValue":u[3]||(u[3]=e=>o.form.name=e),autocomplete:"off"},null,8,["modelValue"])]),_:1},8,["label-width"]),a(g,{label:"Area","label-width":o.formLabelWidth},{default:r(()=>[a(j,{modelValue:o.form.region,"onUpdate:modelValue":u[4]||(u[4]=e=>o.form.region=e),placeholder:"Please select activity area"},{default:r(()=>[a(O,{label:"Area1",value:"shanghai"}),a(O,{label:"Area2",value:"beijing"})]),_:1},8,["modelValue"])]),_:1},8,["label-width"])]),_:1},8,["model"]),a("div",b,[a(m,{onClick:o.cancelForm},{default:r(()=>[h]),_:1},8,["onClick"]),a(m,{type:"primary",onClick:u[5]||(u[5]=e=>o.$refs.drawer.closeDrawer()),loading:o.loading},{default:r(()=>[e(d(o.loading?"Submitting ...":"Submit"),1)]),_:1},8,["loading"])])])]),_:1},8,["before-close","visible"])])}},u)}(),"element-demo3":function(){const{createTextVNode:e,resolveComponent:t,withCtx:r,createVNode:a,openBlock:d,createBlock:n}=o,l=e(" open "),i=e("Click me!"),c=a("p",null,"_(:зゝ∠)_",-1);const s={data:()=>({drawer:!1,innerDrawer:!1}),methods:{handleClose(e){this.$confirm("You still have unsaved data, proceed?").then(t=>{e()}).catch(e=>{})}}};return Object.assign({render:function(e,o){const s=t("el-button"),b=t("el-drawer");return d(),n("div",null,[a(s,{onClick:o[1]||(o[1]=t=>e.drawer=!0),type:"primary",style:{"margin-left":"16px"}},{default:r(()=>[l]),_:1}),a(b,{title:"I'm outer Drawer",visible:e.drawer,size:"50%"},{default:r(()=>[a("div",null,[a(s,{onClick:o[2]||(o[2]=t=>e.innerDrawer=!0)},{default:r(()=>[i]),_:1}),a(b,{title:"I'm inner Drawer","append-to-body":!0,"before-close":e.handleClose,visible:e.innerDrawer},{default:r(()=>[c]),_:1},8,["before-close","visible"])])]),_:1},8,["visible"])])}},s)}()},render:function(e,t,r,O,j,N){const V=Object(o.resolveComponent)("element-demo0"),v=Object(o.resolveComponent)("demo-block"),D=Object(o.resolveComponent)("element-demo1"),x=Object(o.resolveComponent)("element-demo2"),C=Object(o.resolveComponent)("element-demo3");return Object(o.openBlock)(),Object(o.createBlock)("section",a,[d,Object(o.createVNode)(v,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(V)]),highlight:Object(o.withCtx)(()=>[l]),default:Object(o.withCtx)(()=>[n]),_:1}),i,c,Object(o.createVNode)(v,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(D)]),highlight:Object(o.withCtx)(()=>[b]),default:Object(o.withCtx)(()=>[s]),_:1}),h,u,Object(o.createVNode)(v,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(x)]),highlight:Object(o.withCtx)(()=>[m]),_:1}),p,w,Object(o.createVNode)(v,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(C)]),highlight:Object(o.withCtx)(()=>[y]),default:Object(o.withCtx)(()=>[f]),_:1}),g])}};t.default=O}}]);