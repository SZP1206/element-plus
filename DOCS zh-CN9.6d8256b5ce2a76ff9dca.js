(window.webpackJsonp=window.webpackJsonp||[]).push([[247],{440:function(e,t,c){"use strict";c.r(t);var n=c(0);const o={class:"content element-doc"},l=Object(n.createVNode)("h2",{id:"carousel-zou-ma-deng"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#carousel-zou-ma-deng"},"¶"),Object(n.createTextVNode)(" Carousel 走马灯")],-1),r=Object(n.createVNode)("p",null,"在有限空间内，循环播放同一类型的图片、文字等内容",-1),d=Object(n.createVNode)("h3",{id:"ji-chu-yong-fa"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#ji-chu-yong-fa"},"¶"),Object(n.createTextVNode)(" 基础用法")],-1),a=Object(n.createVNode)("p",null,"适用广泛的基础用法",-1),i=Object(n.createVNode)("div",null,[Object(n.createVNode)("p",null,[Object(n.createTextVNode)("结合使用"),Object(n.createVNode)("code",null,"el-carousel"),Object(n.createTextVNode)("和"),Object(n.createVNode)("code",null,"el-carousel-item"),Object(n.createTextVNode)("标签就得到了一个走马灯。幻灯片的内容是任意的，需要放在"),Object(n.createVNode)("code",null,"el-carousel-item"),Object(n.createTextVNode)("标签中。默认情况下，在鼠标 hover 底部的指示器时就会触发切换。通过设置"),Object(n.createVNode)("code",null,"trigger"),Object(n.createTextVNode)("属性为"),Object(n.createVNode)("code",null,"click"),Object(n.createTextVNode)("，可以达到点击触发的效果。")])],-1),s=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},'<template>\n  <div class="block">\n    <span class="demonstration">默认 Hover 指示器触发</span>\n    <el-carousel height="150px">\n      <el-carousel-item v-for="item in 4" :key="item">\n        <h3 class="small">{{ item }}</h3>\n      </el-carousel-item>\n    </el-carousel>\n  </div>\n  <div class="block">\n    <span class="demonstration">Click 指示器触发</span>\n    <el-carousel trigger="click" height="150px">\n      <el-carousel-item v-for="item in 4" :key="item">\n        <h3 class="small">{{ item }}</h3>\n      </el-carousel-item>\n    </el-carousel>\n  </div>\n</template>\n\n<style>\n  .el-carousel__item h3 {\n    color: #475669;\n    font-size: 14px;\n    opacity: 0.75;\n    line-height: 150px;\n    margin: 0;\n  }\n\n  .el-carousel__item:nth-child(2n) {\n     background-color: #99a9bf;\n  }\n  \n  .el-carousel__item:nth-child(2n+1) {\n     background-color: #d3dce6;\n  }\n</style>\n')],-1),h=Object(n.createVNode)("h3",{id:"zhi-shi-qi"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#zhi-shi-qi"},"¶"),Object(n.createTextVNode)(" 指示器")],-1),u=Object(n.createVNode)("p",null,"可以将指示器的显示位置设置在容器外部",-1),b=Object(n.createVNode)("div",null,[Object(n.createVNode)("p",null,[Object(n.createVNode)("code",null,"indicator-position"),Object(n.createTextVNode)("属性定义了指示器的位置。默认情况下，它会显示在走马灯内部，设置为"),Object(n.createVNode)("code",null,"outside"),Object(n.createTextVNode)("则会显示在外部；设置为"),Object(n.createVNode)("code",null,"none"),Object(n.createTextVNode)("则不会显示指示器。")])],-1),m=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},'<template>\n  <el-carousel indicator-position="outside">\n    <el-carousel-item v-for="item in 4" :key="item">\n      <h3>{{ item }}</h3>\n    </el-carousel-item>\n  </el-carousel>\n</template>\n\n<style>\n  .el-carousel__item h3 {\n    color: #475669;\n    font-size: 18px;\n    opacity: 0.75;\n    line-height: 300px;\n    margin: 0;\n  }\n  \n  .el-carousel__item:nth-child(2n) {\n    background-color: #99a9bf;\n  }\n  \n  .el-carousel__item:nth-child(2n+1) {\n    background-color: #d3dce6;\n  }\n</style>\n')],-1),j=Object(n.createVNode)("h3",{id:"qie-huan-jian-tou"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#qie-huan-jian-tou"},"¶"),Object(n.createTextVNode)(" 切换箭头")],-1),O=Object(n.createVNode)("p",null,"可以设置切换箭头的显示时机",-1),p=Object(n.createVNode)("div",null,[Object(n.createVNode)("p",null,[Object(n.createVNode)("code",null,"arrow"),Object(n.createTextVNode)("属性定义了切换箭头的显示时机。默认情况下，切换箭头只有在鼠标 hover 到走马灯上时才会显示；若将"),Object(n.createVNode)("code",null,"arrow"),Object(n.createTextVNode)("设置为"),Object(n.createVNode)("code",null,"always"),Object(n.createTextVNode)("，则会一直显示；设置为"),Object(n.createVNode)("code",null,"never"),Object(n.createTextVNode)("，则会一直隐藏。")])],-1),N=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},'<template>\n  <el-carousel :interval="5000" arrow="always">\n    <el-carousel-item v-for="item in 4" :key="item">\n      <h3>{{ item }}</h3>\n    </el-carousel-item>\n  </el-carousel>\n</template>\n\n<style>\n  .el-carousel__item h3 {\n    color: #475669;\n    font-size: 18px;\n    opacity: 0.75;\n    line-height: 300px;\n    margin: 0;\n  }\n  \n  .el-carousel__item:nth-child(2n) {\n    background-color: #99a9bf;\n  }\n  \n  .el-carousel__item:nth-child(2n+1) {\n    background-color: #d3dce6;\n  }\n</style>\n')],-1),V=Object(n.createVNode)("h3",{id:"qia-pian-hua"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#qia-pian-hua"},"¶"),Object(n.createTextVNode)(" 卡片化")],-1),g=Object(n.createVNode)("p",null,"当页面宽度方向空间空余，但高度方向空间匮乏时，可使用卡片风格",-1),x=Object(n.createVNode)("div",null,[Object(n.createVNode)("p",null,[Object(n.createTextVNode)("将"),Object(n.createVNode)("code",null,"type"),Object(n.createTextVNode)("属性设置为"),Object(n.createVNode)("code",null,"card"),Object(n.createTextVNode)("即可启用卡片模式。从交互上来说，卡片模式和一般模式的最大区别在于，可以通过直接点击两侧的幻灯片进行切换。")])],-1),f=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},'<template>\n  <el-carousel :interval="4000" type="card" height="200px">\n    <el-carousel-item v-for="item in 6" :key="item">\n      <h3 class="medium">{{ item }}</h3>\n    </el-carousel-item>\n  </el-carousel>\n</template>\n\n<style>\n  .el-carousel__item h3 {\n    color: #475669;\n    font-size: 14px;\n    opacity: 0.75;\n    line-height: 200px;\n    margin: 0;\n  }\n  \n  .el-carousel__item:nth-child(2n) {\n    background-color: #99a9bf;\n  }\n  \n  .el-carousel__item:nth-child(2n+1) {\n    background-color: #d3dce6;\n  }\n</style>\n')],-1),v=Object(n.createVNode)("h3",{id:"fang-xiang"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#fang-xiang"},"¶"),Object(n.createTextVNode)(" 方向")],-1),y=Object(n.createVNode)("p",null,[Object(n.createTextVNode)("默认情况下，"),Object(n.createVNode)("code",null,"direction"),Object(n.createTextVNode)(" 为 "),Object(n.createVNode)("code",null,"horizontal"),Object(n.createTextVNode)("。通过设置 "),Object(n.createVNode)("code",null,"direction"),Object(n.createTextVNode)(" 为 "),Object(n.createVNode)("code",null,"vertical"),Object(n.createTextVNode)(" 来让走马灯在垂直方向上显示。")],-1),k=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},'<template>\n  <el-carousel height="200px" direction="vertical" :autoplay="false">\n    <el-carousel-item v-for="item in 3" :key="item">\n      <h3 class="medium">{{ item }}</h3>\n    </el-carousel-item>\n  </el-carousel>\n</template>\n\n<style>\n  .el-carousel__item h3 {\n    color: #475669;\n    font-size: 14px;\n    opacity: 0.75;\n    line-height: 200px;\n    margin: 0;\n  }\n  \n  .el-carousel__item:nth-child(2n) {\n    background-color: #99a9bf;\n  }\n  \n  .el-carousel__item:nth-child(2n+1) {\n    background-color: #d3dce6;\n  }\n</style>\n')],-1),_=Object(n.createStaticVNode)('<h3 id="carousel-attributes"><a class="header-anchor" href="#carousel-attributes">¶</a> Carousel Attributes</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>height</td><td>走马灯的高度</td><td>string</td><td>—</td><td>—</td></tr><tr><td>initial-index</td><td>初始状态激活的幻灯片的索引，从 0 开始</td><td>number</td><td>—</td><td>0</td></tr><tr><td>trigger</td><td>指示器的触发方式</td><td>string</td><td>click</td><td>—</td></tr><tr><td>autoplay</td><td>是否自动切换</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>interval</td><td>自动切换的时间间隔，单位为毫秒</td><td>number</td><td>—</td><td>3000</td></tr><tr><td>indicator-position</td><td>指示器的位置</td><td>string</td><td>outside/none</td><td>—</td></tr><tr><td>arrow</td><td>切换箭头的显示时机</td><td>string</td><td>always/hover/never</td><td>hover</td></tr><tr><td>type</td><td>走马灯的类型</td><td>string</td><td>card</td><td>—</td></tr><tr><td>loop</td><td>是否循环显示</td><td>boolean</td><td>-</td><td>true</td></tr><tr><td>direction</td><td>走马灯展示的方向</td><td>string</td><td>horizontal/vertical</td><td>horizontal</td></tr></tbody></table><h3 id="carousel-events"><a class="header-anchor" href="#carousel-events">¶</a> Carousel Events</h3><table><thead><tr><th>事件名称</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>change</td><td>幻灯片切换时触发</td><td>目前激活的幻灯片的索引，原幻灯片的索引</td></tr></tbody></table><h3 id="carousel-methods"><a class="header-anchor" href="#carousel-methods">¶</a> Carousel Methods</h3><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>setActiveItem</td><td>手动切换幻灯片</td><td>需要切换的幻灯片的索引，从 0 开始；或相应 <code>el-carousel-item</code> 的 <code>name</code> 属性值</td></tr><tr><td>prev</td><td>切换至上一张幻灯片</td><td>—</td></tr><tr><td>next</td><td>切换至下一张幻灯片</td><td>—</td></tr></tbody></table><h3 id="carousel-item-attributes"><a class="header-anchor" href="#carousel-item-attributes">¶</a> Carousel-Item Attributes</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>幻灯片的名字，可用作 <code>setActiveItem</code> 的参数</td><td>string</td><td>—</td><td>—</td></tr><tr><td>label</td><td>该幻灯片所对应指示器的文本</td><td>string</td><td>—</td><td>—</td></tr></tbody></table>',8);var C={name:"component-doc",components:{"element-demo0":function(){const{createVNode:e,renderList:t,Fragment:c,openBlock:o,createBlock:l,toDisplayString:r,resolveComponent:d,withCtx:a}=n,i={class:"block"},s=e("span",{class:"demonstration"},"默认 Hover 指示器触发",-1),h={class:"small"},u={class:"block"},b=e("span",{class:"demonstration"},"Click 指示器触发",-1),m={class:"small"};return Object.assign({render:function(n,j){const O=d("el-carousel-item"),p=d("el-carousel");return o(),l("div",null,[e("div",i,[s,e(p,{height:"150px"},{default:a(()=>[(o(),l(c,null,t(4,t=>e(O,{key:t},{default:a(()=>[e("h3",h,r(t),1)]),_:2},1024)),64))]),_:1})]),e("div",u,[b,e(p,{trigger:"click",height:"150px"},{default:a(()=>[(o(),l(c,null,t(4,t=>e(O,{key:t},{default:a(()=>[e("h3",m,r(t),1)]),_:2},1024)),64))]),_:1})])])}},{})}(),"element-demo1":function(){const{renderList:e,Fragment:t,openBlock:c,createBlock:o,toDisplayString:l,createVNode:r,resolveComponent:d,withCtx:a}=n;return Object.assign({render:function(n,i){const s=d("el-carousel-item"),h=d("el-carousel");return c(),o("div",null,[r(h,{"indicator-position":"outside"},{default:a(()=>[(c(),o(t,null,e(4,e=>r(s,{key:e},{default:a(()=>[r("h3",null,l(e),1)]),_:2},1024)),64))]),_:1})])}},{})}(),"element-demo2":function(){const{renderList:e,Fragment:t,openBlock:c,createBlock:o,toDisplayString:l,createVNode:r,resolveComponent:d,withCtx:a}=n;return Object.assign({render:function(n,i){const s=d("el-carousel-item"),h=d("el-carousel");return c(),o("div",null,[r(h,{interval:5e3,arrow:"always"},{default:a(()=>[(c(),o(t,null,e(4,e=>r(s,{key:e},{default:a(()=>[r("h3",null,l(e),1)]),_:2},1024)),64))]),_:1})])}},{})}(),"element-demo3":function(){const{renderList:e,Fragment:t,openBlock:c,createBlock:o,toDisplayString:l,createVNode:r,resolveComponent:d,withCtx:a}=n,i={class:"medium"};return Object.assign({render:function(n,s){const h=d("el-carousel-item"),u=d("el-carousel");return c(),o("div",null,[r(u,{interval:4e3,type:"card",height:"200px"},{default:a(()=>[(c(),o(t,null,e(6,e=>r(h,{key:e},{default:a(()=>[r("h3",i,l(e),1)]),_:2},1024)),64))]),_:1})])}},{})}(),"element-demo4":function(){const{renderList:e,Fragment:t,openBlock:c,createBlock:o,toDisplayString:l,createVNode:r,resolveComponent:d,withCtx:a}=n,i={class:"medium"};return Object.assign({render:function(n,s){const h=d("el-carousel-item"),u=d("el-carousel");return c(),o("div",null,[r(u,{height:"200px",direction:"vertical",autoplay:!1},{default:a(()=>[(c(),o(t,null,e(3,e=>r(h,{key:e},{default:a(()=>[r("h3",i,l(e),1)]),_:2},1024)),64))]),_:1})])}},{})}()},render:function(e,t,c,C,w,T){const z=Object(n.resolveComponent)("element-demo0"),B=Object(n.resolveComponent)("demo-block"),q=Object(n.resolveComponent)("element-demo1"),S=Object(n.resolveComponent)("element-demo2"),D=Object(n.resolveComponent)("element-demo3"),F=Object(n.resolveComponent)("element-demo4");return Object(n.openBlock)(),Object(n.createBlock)("section",o,[l,r,d,a,Object(n.createVNode)(B,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(z)]),highlight:Object(n.withCtx)(()=>[s]),default:Object(n.withCtx)(()=>[i]),_:1}),h,u,Object(n.createVNode)(B,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(q)]),highlight:Object(n.withCtx)(()=>[m]),default:Object(n.withCtx)(()=>[b]),_:1}),j,O,Object(n.createVNode)(B,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(S)]),highlight:Object(n.withCtx)(()=>[N]),default:Object(n.withCtx)(()=>[p]),_:1}),V,g,Object(n.createVNode)(B,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(D)]),highlight:Object(n.withCtx)(()=>[f]),default:Object(n.withCtx)(()=>[x]),_:1}),v,y,Object(n.createVNode)(B,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(F)]),highlight:Object(n.withCtx)(()=>[k]),_:1}),_])}};t.default=C}}]);