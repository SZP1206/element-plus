(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{676:function(s,a,n){"use strict";n.r(a);var l=n(0);const e={class:"content element-doc"},p=Object(l.createStaticVNode)('<h2 id="internationalisation"><a class="header-anchor" href="#internationalisation">¶</a> Internationalisation</h2><p>La langue par défaut d&#39;Element Plus est le Chinois. Si vous souhaitez utiliser une autre langue, il vous faudra la configurer. Par exemple, dans votre fichier d&#39;entrée, si vous importez Element Plus entièrement:</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> ElementPlus <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>\n<span class="hljs-keyword">import</span> locale <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale/lang/en&#39;</span>\n\ncreateApp(App).use(ElementPlus, { locale })\n</code></pre><p>Ou si vous importez Element Plus à la demande:</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> { Button, Select } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>\n<span class="hljs-keyword">import</span> lang <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale/lang/en&#39;</span>\n<span class="hljs-keyword">import</span> locale <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale&#39;</span>\n\n<span class="hljs-comment">// configure la langue</span>\nlocale.use(lang)\n\n<span class="hljs-comment">// importe les composants</span>\nVue.component(Button.name, Button)\nVue.component(Select.name, Select)\n</code></pre><p>La pack de la langue Chinois est importé par défaut, même si vous configurez une autre langue. En utilisant le <code>NormalModuleReplacementPlugin</code> fournit par webpack vous pouvez remplacer la locale par défaut:</p><p>webpack.config.js</p><pre><code class="hljs language-javascript">{\n  <span class="hljs-attr">plugins</span>: [\n    <span class="hljs-keyword">new</span> webpack.NormalModuleReplacementPlugin(<span class="hljs-regexp">/element-plus[\\/\\\\]lib[\\/\\\\]locale[\\/\\\\]lang[\\/\\\\]zh-CN/</span>, <span class="hljs-string">&#39;element-plus/lib/locale/lang/en&#39;</span>)\n  ]\n}\n</code></pre><h2 id="compatible-avec-vue-i18n-5.x"><a class="header-anchor" href="#compatible-avec-vue-i18n-5.x">¶</a> Compatible avec <code>vue-i18n@5.x</code></h2><p>Element Plus est compatible avec <a href="https://github.com/kazupon/vue-i18n">vue-i18n@5.x</a>, ce qui rend le changement de langue encore plus simple.</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> VueI18n <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue-i18n&#39;</span>\n<span class="hljs-keyword">import</span> ElementPlus <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>\n<span class="hljs-keyword">import</span> enLocale <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale/lang/en&#39;</span>\n<span class="hljs-keyword">import</span> zhLocale <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale/lang/zh-CN&#39;</span>\n<span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;./App.vue&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = createApp(App)\napp.use(ElementPlus)\nVue.use(VueI18n)\n\nVue.config.lang = <span class="hljs-string">&#39;zh-cn&#39;</span>\nVue.locale(<span class="hljs-string">&#39;zh-cn&#39;</span>, zhLocale)\nVue.locale(<span class="hljs-string">&#39;en&#39;</span>, enLocale)\n</code></pre><h2 id="compatible-avec-d-autres-plugins-i18n"><a class="header-anchor" href="#compatible-avec-d-autres-plugins-i18n">¶</a> Compatible avec d&#39;autres plugins i18n</h2><p>Element Plus n&#39;est pas forcément compatible avec d&#39;autres plugins i18n que vue-i18n, mais vous pouvez configurer le fonctionnement i18n.</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> ElementPlus <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>\n<span class="hljs-keyword">import</span> enLocale <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale/lang/en&#39;</span>\n<span class="hljs-keyword">import</span> zhLocale <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale/lang/zh-CN&#39;</span>\n\nVue.use(Element, {\n  <span class="hljs-attr">i18n</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">path, options</span>) </span>{\n    <span class="hljs-comment">// ...</span>\n  }\n})\n</code></pre><h2 id="compatible-avec-vue-i18n-6.x"><a class="header-anchor" href="#compatible-avec-vue-i18n-6.x">¶</a> Compatible avec <code>vue-i18n@6.x</code></h2><p>Vous devrez le configurer manuellement pour la compatibilité avec <code>6.x</code>.</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> ElementPlus <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>\n<span class="hljs-keyword">import</span> VueI18n <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue-i18n&#39;</span>\n<span class="hljs-keyword">import</span> enLocale <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale/lang/en&#39;</span>\n<span class="hljs-keyword">import</span> zhLocale <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale/lang/zh-CN&#39;</span>\n\nVue.use(VueI18n)\n\n<span class="hljs-keyword">const</span> messages = {\n  <span class="hljs-attr">en</span>: {\n    <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;hello&#39;</span>,\n    ...enLocale <span class="hljs-comment">// Ou utilisez `Object.assign({ message: &#39;hello&#39; }, enLocale)`</span>\n  },\n  <span class="hljs-attr">zh</span>: {\n    <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;你好&#39;</span>,\n    ...zhLocale <span class="hljs-comment">// Ou utilisez `Object.assign({ message: &#39;你好&#39; }, zhLocale)`</span>\n  }\n}\n\n<span class="hljs-comment">// Crée l&#39;instance de VueI18n avec ses options</span>\n<span class="hljs-keyword">const</span> i18n = <span class="hljs-keyword">new</span> VueI18n({\n  <span class="hljs-attr">locale</span>: <span class="hljs-string">&#39;en&#39;</span>, <span class="hljs-comment">// indique la locale</span>\n  messages, <span class="hljs-comment">// indique les messages</span>\n})\n\nVue.use(Element, {\n  <span class="hljs-attr">i18n</span>: <span class="hljs-function">(<span class="hljs-params">key, value</span>) =&gt;</span> i18n.t(key, value)\n})\n\n<span class="hljs-keyword">new</span> Vue({ i18n }).$mount(<span class="hljs-string">&#39;#app&#39;</span>)\n</code></pre><h2 id="i18n-personnalisee-dans-les-composants-a-la-demande"><a class="header-anchor" href="#i18n-personnalisee-dans-les-composants-a-la-demande">¶</a> i18n personnalisée dans les composants à la demande</h2><pre><code class="hljs language-js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> DatePicker <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element/lib/date-picker&#39;</span>\n<span class="hljs-keyword">import</span> VueI18n <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue-i18n&#39;</span>\n\n<span class="hljs-keyword">import</span> enLocale <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale/lang/en&#39;</span>\n<span class="hljs-keyword">import</span> zhLocale <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale/lang/zh-CN&#39;</span>\n<span class="hljs-keyword">import</span> ElementLocale <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus/lib/locale&#39;</span>\n\nVue.use(VueI18n)\nVue.use(DatePicker)\n\n<span class="hljs-keyword">const</span> messages = {\n  <span class="hljs-attr">en</span>: {\n    <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;hello&#39;</span>,\n    ...enLocale\n  },\n  <span class="hljs-attr">zh</span>: {\n    <span class="hljs-attr">message</span>: <span class="hljs-string">&#39;你好&#39;</span>,\n    ...zhLocale\n  }\n}\n\n<span class="hljs-comment">// Crée l&#39;instance de VueI18n avec ses options</span>\n<span class="hljs-keyword">const</span> i18n = <span class="hljs-keyword">new</span> VueI18n({\n  <span class="hljs-attr">locale</span>: <span class="hljs-string">&#39;en&#39;</span>, <span class="hljs-comment">// indique la locale</span>\n  messages, <span class="hljs-comment">// indique les messages</span>\n})\n\nElementLocale.i18n(<span class="hljs-function">(<span class="hljs-params">key, value</span>) =&gt;</span> i18n.t(key, value))\n</code></pre><h2 id="import-via-un-cdn"><a class="header-anchor" href="#import-via-un-cdn">¶</a> Import via un CDN</h2><pre><code class="hljs language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//unpkg.com/vue&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//unpkg.com/element-plus&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//unpkg.com/element-plus/lib/umd/locale/en.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span>\n  ELEMENT.locale(ELEMENT.lang.en)\n<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre><p>Compatible avec <code>vue-i18n</code></p><pre><code class="hljs language-html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//unpkg.com/vue&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//unpkg.com/vue-i18n/dist/vue-i18n.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//unpkg.com/element-plus&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//unpkg.com/element-plus/lib/umd/locale/zh-CN.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//unpkg.com/element-plus/lib/umd/locale/en.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n  Vue.locale(<span class="hljs-string">&#39;en&#39;</span>, ELEMENT.lang.en)\n  Vue.locale(<span class="hljs-string">&#39;zh-cn&#39;</span>, ELEMENT.lang.zhCN)\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>\n</code></pre><p>Actuellement, Element Plus supporte les langues suivantes:</p><ul class="language-list"><li>Chinois simplifié (zh-CN)</li><li>Anglais (en)</li><li>Allemand (de)</li><li>Portugais (pt)</li><li>Espagnol (es)</li><li>Danois (da)</li><li>Français (fr)</li><li>Norvégien (nb-NO)</li><li>Chinois traditionnel (zh-TW)</li><li>Italien (it)</li><li>Coréen (ko)</li><li>Japonais (ja)</li><li>Néerlandais (nl)</li><li>Vietnamien (vi)</li><li>Russe (ru-RU)</li><li>Turque (tr-TR)</li><li>Portugais brésilien (pt-br)</li><li>Farsi (fa)</li><li>Thaï (th)</li><li>Indonésien (id)</li><li>Bulgare (bg)</li><li>Polonais (pl)</li><li>Finnois (fi)</li><li>Suédois (sv-SE)</li><li>Grec (el)</li><li>Slovaque (sk)</li><li>Catalan (ca)</li><li>Tchèque (cs-CZ)</li><li>Ukrainien (ua)</li><li>Turkmène (tk)</li><li>Tamoul (ta)</li><li>Letton (lv)</li><li>Afrikaans (af-ZA)</li><li>Estonien (ee)</li><li>Slovène (sl)</li><li>Arabe (ar)</li><li>Hébreu (he)</li><li>Lituanien (lt)</li><li>Mongol (mn)</li><li>Kazakh (kz)</li><li>Hongrois (hu)</li><li>Roumain (ro)</li><li>Kurde (ku)</li><li>Ouïghour (ug-CN)</li><li>Khmer (km)</li><li>Serbe (sr)</li><li>Basque (eu)</li><li>Kirghize (kg)</li><li>Croate (hr)</li><li>Arménien (hy)</li><li>Espéranto (eo)</li></ul><p>Si votre langue n&#39;apparaît pas dans la liste, n&#39;hésitez pas a contribuer: ajoutez simplement un fichier de configuration <a href="https://github.com/ElemeFE/element/tree/dev/src/locale/lang">ici</a> et créez une pull request.</p>',26);const c={render:function(s,a,n,c,t,i){return Object(l.openBlock)(),Object(l.createBlock)("section",e,[p])}};a.default=c}}]);