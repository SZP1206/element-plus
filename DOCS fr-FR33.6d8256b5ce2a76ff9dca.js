(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{635:function(e,t,n){"use strict";n.r(t);var a=n(0);const o={class:"content element-doc"},d=Object(a.createVNode)("h2",{id:"loading"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#loading"},"¶"),Object(a.createTextVNode)(" Loading")],-1),l=Object(a.createVNode)("p",null,"Affiche une animation durant le chargement de données.",-1),c=Object(a.createVNode)("h3",{id:"loading-dans-un-conteneur"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#loading-dans-un-conteneur"},"¶"),Object(a.createTextVNode)(" Loading dans un conteneur")],-1),r=Object(a.createVNode)("p",null,"Affiche une animation dans un conteneur (Comme un tableau par exemple) pendant le chargement des données.",-1),s=Object(a.createVNode)("div",null,[Object(a.createVNode)("p",null,[Object(a.createTextVNode)("Element Plus fournit deux moyens d'invoquer Loading: la directive et le service. Pour la directive "),Object(a.createVNode)("code",null,"v-loading"),Object(a.createTextVNode)(", attachez simplement un "),Object(a.createVNode)("code",null,"boolean"),Object(a.createTextVNode)(". Par défaut le masque sera ajouté à l'élément contenant la directive. Ajoutez le modificateur "),Object(a.createVNode)("code",null,"body"),Object(a.createTextVNode)(" pour ajouter le masque à l'élément body.")])],-1),i=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<template>\n  <el-table\n    v-loading="loading"\n    :data="tableData"\n    style="width: 100%">\n    <el-table-column\n      prop="date"\n      label="Date"\n      width="180">\n    </el-table-column>\n    <el-table-column\n      prop="name"\n      label="Nom"\n      width="180">\n    </el-table-column>\n    <el-table-column\n      prop="address"\n      label="Adresse">\n    </el-table-column>\n  </el-table>\n</template>\n\n<style>\n  body {\n    margin: 0;\n  }\n</style>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: \'2016-05-02\',\n          name: \'John Smith\',\n          address: \'No.1518,  Jinshajiang Road, Putuo District\'\n        }, {\n          date: \'2016-05-04\',\n          name: \'John Smith\',\n          address: \'No.1518,  Jinshajiang Road, Putuo District\'\n        }, {\n          date: \'2016-05-01\',\n          name: \'John Smith\',\n          address: \'No.1518,  Jinshajiang Road, Putuo District\'\n        }],\n        loading: true\n      };\n    }\n  };\n<\/script>\n')],-1),u=Object(a.createVNode)("h3",{id:"personnalisation"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#personnalisation"},"¶"),Object(a.createTextVNode)(" Personnalisation")],-1),p=Object(a.createVNode)("p",null,"Vous pouvez personnaliser le texte, le spinner et la couleur de fond.",-1),m=Object(a.createVNode)("div",null,[Object(a.createVNode)("p",null,[Object(a.createTextVNode)("Ajoutez l'attribut "),Object(a.createVNode)("code",null,"element-loading-text"),Object(a.createTextVNode)(" à l'élement sur lequel "),Object(a.createVNode)("code",null,"v-loading"),Object(a.createTextVNode)(" est attaché et sa valeur sera affichée sous le spinner. De la même façon, "),Object(a.createVNode)("code",null,"element-loading-spinner"),Object(a.createTextVNode)(" et "),Object(a.createVNode)("code",null,"element-loading-background"),Object(a.createTextVNode)(" permettent de personnaliser le spinner et la couleur de fond.")])],-1),h=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<template>\n  <el-table\n    v-loading="loading"\n    element-loading-text="Loading..."\n    element-loading-spinner="el-icon-loading"\n    element-loading-background="rgba(0, 0, 0, 0.8)"\n    :data="tableData"\n    style="width: 100%">\n    <el-table-column\n      prop="date"\n      label="Date"\n      width="180">\n    </el-table-column>\n    <el-table-column\n      prop="name"\n      label="Nom"\n      width="180">\n    </el-table-column>\n    <el-table-column\n      prop="address"\n      label="Adresse">\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        tableData: [{\n          date: \'2016-05-02\',\n          name: \'John Smith\',\n          address: \'No.1518,  Jinshajiang Road, Putuo District\'\n        }, {\n          date: \'2016-05-04\',\n          name: \'John Smith\',\n          address: \'No.1518,  Jinshajiang Road, Putuo District\'\n        }, {\n          date: \'2016-05-01\',\n          name: \'John Smith\',\n          address: \'No.1518,  Jinshajiang Road, Putuo District\'\n        }],\n        loading: true\n      };\n    }\n  };\n<\/script>\n')],-1),b=Object(a.createVNode)("h3",{id:"chargement-plein-ecran"},[Object(a.createVNode)("a",{class:"header-anchor",href:"#chargement-plein-ecran"},"¶"),Object(a.createTextVNode)(" Chargement plein écran")],-1),g=Object(a.createVNode)("p",null,"Affichez une animation en plein écran quand vous charger des données.",-1),j=Object(a.createVNode)("div",null,[Object(a.createVNode)("p",null,[Object(a.createTextVNode)("Quand il est utilisé comme une directive, un Loading plein écran nécessite le modificateur "),Object(a.createVNode)("code",null,"fullscreen"),Object(a.createTextVNode)(" qui sera ajouté au body. Dans ce cas, si vous souhaitez désactiver le défilement du body, vous pouvez ajouter le modificateur "),Object(a.createVNode)("code",null,"lock"),Object(a.createTextVNode)(". Quand il est utilisé comme service, Loading est en plein écran par défaut.")])],-1),v=Object(a.createVNode)("pre",null,[Object(a.createVNode)("code",{class:"html"},'<template>\n  <el-button\n    type="primary"\n    @click="openFullScreen1"\n    v-loading.fullscreen.lock="fullscreenLoading">\n    Comme directive\n  </el-button>\n  <el-button\n    type="primary"\n    @click="openFullScreen2">\n    Comme service\n  </el-button>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        fullscreenLoading: false\n      }\n    },\n    methods: {\n      openFullScreen1() {\n        this.fullscreenLoading = true;\n        setTimeout(() => {\n          this.fullscreenLoading = false;\n        }, 2000);\n      },\n      openFullScreen2() {\n        const loading = this.$loading({\n          lock: true,\n          text: \'Loading\',\n          spinner: \'el-icon-loading\',\n          background: \'rgba(0, 0, 0, 0.7)\'\n        });\n        setTimeout(() => {\n          loading.close();\n        }, 2000);\n      }\n    }\n  }\n<\/script>\n')],-1),O=Object(a.createStaticVNode)('<h3 id="service"><a class="header-anchor" href="#service">¶</a> Service</h3><p>Vous pouvez invoquer Loading comme un service. Importez le service Loading:</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> { Loading } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\n</code></pre><p>Et invoquer-le:</p><pre><code class="hljs language-javascript">Loading.service(options);\n</code></pre><p>Le paramètre <code>options</code> correspond à la configuration de Loading (voir table suivante). <code>LoadingService</code> retourne une instance de Loading, que vous pouvez fermer en appelant la méthode <code>close</code>:</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">let</span> loadingInstance = Loading.service(options);\n<span class="hljs-built_in">this</span>.$nextTick(<span class="hljs-function">() =&gt;</span> { <span class="hljs-comment">// Loading should be closed asynchronously</span>\n  loadingInstance.close();\n});\n</code></pre><p>Notez que dans ce cas le Loading plein écran est un singleton. Si un nouveau Loading plein écran est invoqué avant la fermeture du précédent, celui-ci sera retourné au lieu d&#39;en créer un nouveau:</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">let</span> loadingInstance1 = Loading.service({ <span class="hljs-attr">fullscreen</span>: <span class="hljs-literal">true</span> });\n<span class="hljs-keyword">let</span> loadingInstance2 = Loading.service({ <span class="hljs-attr">fullscreen</span>: <span class="hljs-literal">true</span> });\n<span class="hljs-built_in">console</span>.log(loadingInstance1 === loadingInstance2); <span class="hljs-comment">// true</span>\n</code></pre><p>Appeler la méthode <code>close</code> sur n&#39;importe lequel des deux fermera le Loading.</p><p>Si Element Plus est importé en entier, une méthode globale <code>$loading</code> sera ajoutée à Vue.prototype. Vous pourrez l&#39;invoquer comme ceci: <code>this.$loading(options)</code> et elle retournera une instance Loading.</p><h3 id="options"><a class="header-anchor" href="#options">¶</a> Options</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Valeurs acceptées</th><th>Défaut</th></tr></thead><tbody><tr><td>target</td><td>L&#39;élément du DOM a couvrir. Accepte un objet DOM ou un string. Si c&#39;est un string, il sera passé à <code>document.querySelector</code> Pour avoir l&#39;élément du DOM correspondant.</td><td>object/string</td><td>—</td><td>document.body</td></tr><tr><td>body</td><td>Identique au modificateur <code>body</code> de <code>v-loading</code>.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>fullscreen</td><td>Identique au modificateur <code>fullscreen</code> de <code>v-loading</code>.</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>lock</td><td>Identique au modificateur <code>lock</code> de <code>v-loading</code>.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>text</td><td>Texte a afficher sous le spinner.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>spinner</td><td>Classe du spinner.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>background</td><td>Couleur de fond du masque.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>customClass</td><td>Classe du Loading.</td><td>string</td><td>—</td><td>—</td></tr></tbody></table>',13);var N={name:"component-doc",components:{"element-demo0":function(){const{resolveComponent:e,createVNode:t,resolveDirective:n,withCtx:o,withDirectives:d,openBlock:l,createBlock:c}=a;const r={data:()=>({tableData:[{date:"2016-05-02",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"},{date:"2016-05-04",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"},{date:"2016-05-01",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"}],loading:!0})};return Object.assign({render:function(a,r){const s=e("el-table-column"),i=e("el-table"),u=n("loading");return l(),c("div",null,[d(t(i,{data:a.tableData,style:{width:"100%"}},{default:o(()=>[t(s,{prop:"date",label:"Date",width:"180"}),t(s,{prop:"name",label:"Nom",width:"180"}),t(s,{prop:"address",label:"Adresse"})]),_:1},8,["data"]),[[u,a.loading]])])}},r)}(),"element-demo1":function(){const{resolveComponent:e,createVNode:t,resolveDirective:n,withCtx:o,withDirectives:d,openBlock:l,createBlock:c}=a;const r={data:()=>({tableData:[{date:"2016-05-02",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"},{date:"2016-05-04",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"},{date:"2016-05-01",name:"John Smith",address:"No.1518,  Jinshajiang Road, Putuo District"}],loading:!0})};return Object.assign({render:function(a,r){const s=e("el-table-column"),i=e("el-table"),u=n("loading");return l(),c("div",null,[d(t(i,{"element-loading-text":"Loading...","element-loading-spinner":"el-icon-loading","element-loading-background":"rgba(0, 0, 0, 0.8)",data:a.tableData,style:{width:"100%"}},{default:o(()=>[t(s,{prop:"date",label:"Date",width:"180"}),t(s,{prop:"name",label:"Nom",width:"180"}),t(s,{prop:"address",label:"Adresse"})]),_:1},8,["data"]),[[u,a.loading]])])}},r)}(),"element-demo2":function(){const{createTextVNode:e,resolveComponent:t,resolveDirective:n,withCtx:o,createVNode:d,withDirectives:l,openBlock:c,createBlock:r}=a,s=e(" Comme directive "),i=e(" Comme service ");const u={data:()=>({fullscreenLoading:!1}),methods:{openFullScreen1(){this.fullscreenLoading=!0,setTimeout(()=>{this.fullscreenLoading=!1},2e3)},openFullScreen2(){const e=this.$loading({lock:!0,text:"Loading",spinner:"el-icon-loading",background:"rgba(0, 0, 0, 0.7)"});setTimeout(()=>{e.close()},2e3)}}};return Object.assign({render:function(e,a){const u=t("el-button"),p=n("loading");return c(),r("div",null,[l(d(u,{type:"primary",onClick:e.openFullScreen1},{default:o(()=>[s]),_:1},8,["onClick"]),[[p,e.fullscreenLoading,void 0,{fullscreen:!0,lock:!0}]]),d(u,{type:"primary",onClick:e.openFullScreen2},{default:o(()=>[i]),_:1},8,["onClick"])])}},u)}()},render:function(e,t,n,N,f,V){const x=Object(a.resolveComponent)("element-demo0"),w=Object(a.resolveComponent)("demo-block"),D=Object(a.resolveComponent)("element-demo1"),k=Object(a.resolveComponent)("element-demo2");return Object(a.openBlock)(),Object(a.createBlock)("section",o,[d,l,c,r,Object(a.createVNode)(w,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)(x)]),highlight:Object(a.withCtx)(()=>[i]),default:Object(a.withCtx)(()=>[s]),_:1}),u,p,Object(a.createVNode)(w,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)(D)]),highlight:Object(a.withCtx)(()=>[h]),default:Object(a.withCtx)(()=>[m]),_:1}),b,g,Object(a.createVNode)(w,null,{source:Object(a.withCtx)(()=>[Object(a.createVNode)(k)]),highlight:Object(a.withCtx)(()=>[v]),default:Object(a.withCtx)(()=>[j]),_:1}),O])}};t.default=N}}]);