(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{616:function(e,t,c){"use strict";c.r(t);var d=c(0);const o={class:"content element-doc"},l=Object(d.createVNode)("h2",{id:"checkbox"},[Object(d.createVNode)("a",{class:"header-anchor",href:"#checkbox"},"¶"),Object(d.createTextVNode)(" Checkbox")],-1),n=Object(d.createVNode)("p",null,"Un groupe d'options à choix multiples.",-1),a=Object(d.createVNode)("h3",{id:"usage"},[Object(d.createVNode)("a",{class:"header-anchor",href:"#usage"},"¶"),Object(d.createTextVNode)(" Usage")],-1),r=Object(d.createVNode)("p",null,"Checkbox peut être utilisé seul pour switcher entre deux états.",-1),i=Object(d.createVNode)("div",null,[Object(d.createVNode)("p",null,[Object(d.createTextVNode)("Définissez "),Object(d.createVNode)("code",null,"v-model"),Object(d.createTextVNode)(" (variable liée) dans "),Object(d.createVNode)("code",null,"el-checkbox"),Object(d.createTextVNode)(". La valeur par défaut est un "),Object(d.createVNode)("code",null,"Boolean"),Object(d.createTextVNode)(" pour une seule "),Object(d.createVNode)("code",null,"checkbox"),Object(d.createTextVNode)(" et devient "),Object(d.createVNode)("code",null,"true"),Object(d.createTextVNode)(" quand elle est sélectionnée. Le contenu à l'intérieur de la balise "),Object(d.createVNode)("code",null,"el-checkbox"),Object(d.createTextVNode)(" deviendra le label du bouton de la checkbox.")])],-1),h=Object(d.createVNode)("pre",null,[Object(d.createVNode)("code",{class:"html"},'<template>\n  \x3c!-- `checked` should be true or false --\x3e\n  <el-checkbox v-model="checked">Option</el-checkbox>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        checked: true\n      };\n    }\n  };\n<\/script>\n')],-1),b=Object(d.createVNode)("h3",{id:"desactivation"},[Object(d.createVNode)("a",{class:"header-anchor",href:"#desactivation"},"¶"),Object(d.createTextVNode)(" Désactivation")],-1),u=Object(d.createVNode)("p",null,"La checkbox peut être désactivée.",-1),s=Object(d.createVNode)("div",null,[Object(d.createVNode)("p",null,[Object(d.createTextVNode)("Ajouter l'attribut "),Object(d.createVNode)("code",null,"disabled"),Object(d.createTextVNode)(".")])],-1),m=Object(d.createVNode)("pre",null,[Object(d.createVNode)("code",{class:"html"},'<template>\n  <el-checkbox v-model="checked1" disabled>Option</el-checkbox>\n  <el-checkbox v-model="checked2" disabled>Option</el-checkbox>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        checked1: false,\n        checked2: true\n      };\n    }\n  };\n<\/script>\n')],-1),p=Object(d.createVNode)("h3",{id:"checkbox-groupees"},[Object(d.createVNode)("a",{class:"header-anchor",href:"#checkbox-groupees"},"¶"),Object(d.createTextVNode)(" Checkbox groupées")],-1),k=Object(d.createVNode)("p",null,"Utile pour grouper des checkbox, indiquant si une option est sélectionnée en vérifiant la case en question.",-1),x=Object(d.createVNode)("div",null,[Object(d.createVNode)("p",null,[Object(d.createTextVNode)("L'élément "),Object(d.createVNode)("code",null,"checkbox-group"),Object(d.createTextVNode)(" peut gérer plusieurs checkbox d'un groupe en utilisant "),Object(d.createVNode)("code",null,"v-model"),Object(d.createTextVNode)(", qui sera un "),Object(d.createVNode)("code",null,"Array"),Object(d.createTextVNode)(". Dans l'élément "),Object(d.createVNode)("code",null,"el-checkbox"),Object(d.createTextVNode)(", "),Object(d.createVNode)("code",null,"label"),Object(d.createTextVNode)(" est la valeur de la checkbox. S'il n'y a aucun contenu dans la balise, "),Object(d.createVNode)("code",null,"label"),Object(d.createTextVNode)(" sera également la description de la checkbox. "),Object(d.createVNode)("code",null,"label"),Object(d.createTextVNode)(" correspond aussi aux valeurs des éléments dans le tableau. Il est sélectionné si la valeur spécifiée existe dans le tableau, et vice-versa.")])],-1),O=Object(d.createVNode)("pre",null,[Object(d.createVNode)("code",{class:"html"},'<template>\n  <el-checkbox-group v-model="checkList">\n    <el-checkbox label="Option A"></el-checkbox>\n    <el-checkbox label="Option B"></el-checkbox>\n    <el-checkbox label="Option C"></el-checkbox>\n    <el-checkbox label="Désactivée" disabled></el-checkbox>\n    <el-checkbox label="Sélectionnée et désactivée" disabled></el-checkbox>\n  </el-checkbox-group>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        checkList: [\'selected and disabled\',\'Option A\']\n      };\n    }\n  };\n<\/script>\n')],-1),V=Object(d.createVNode)("h3",{id:"indeterminee"},[Object(d.createVNode)("a",{class:"header-anchor",href:"#indeterminee"},"¶"),Object(d.createTextVNode)(" Indéterminée")],-1),j=Object(d.createVNode)("p",null,[Object(d.createTextVNode)("La propriété "),Object(d.createVNode)("code",null,"indeterminate"),Object(d.createTextVNode)(' permet de réaliser un effet "Sélectionner tout".')],-1),g=Object(d.createVNode)("pre",null,[Object(d.createVNode)("code",{class:"html"},'<template>\n  <el-checkbox :indeterminate="isIndeterminate" v-model="checkAll" @change="handleCheckAllChange">Sélectionner tout</el-checkbox>\n  <div style="margin: 15px 0;"></div>\n  <el-checkbox-group v-model="checkedCities" @change="handleCheckedCitiesChange">\n    <el-checkbox v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox>\n  </el-checkbox-group>\n</template>\n<script>\n  const cityOptions = [\'Shanghai\', \'Beijing\', \'Guangzhou\', \'Shenzhen\'];\n  export default {\n    data() {\n      return {\n        checkAll: false,\n        checkedCities: [\'Shanghai\', \'Beijing\'],\n        cities: cityOptions,\n        isIndeterminate: true\n      };\n    },\n    methods: {\n      handleCheckAllChange(val) {\n        this.checkedCities = val ? cityOptions : [];\n        this.isIndeterminate = false;\n      },\n      handleCheckedCitiesChange(value) {\n        let checkedCount = value.length;\n        this.checkAll = checkedCount === this.cities.length;\n        this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\n      }\n    }\n  };\n<\/script>\n')],-1),N=Object(d.createVNode)("h3",{id:"minimum-maximum-d-elements-selectionnes"},[Object(d.createVNode)("a",{class:"header-anchor",href:"#minimum-maximum-d-elements-selectionnes"},"¶"),Object(d.createTextVNode)(" Minimum / Maximum d'éléments sélectionnés")],-1),v=Object(d.createVNode)("p",null,[Object(d.createTextVNode)("Les propriétés "),Object(d.createVNode)("code",null,"min"),Object(d.createTextVNode)(" et "),Object(d.createVNode)("code",null,"max"),Object(d.createTextVNode)(" permettent de limiter la quantité d'éléments sélectionnés.")],-1),f=Object(d.createVNode)("pre",null,[Object(d.createVNode)("code",{class:"html"},"<template>\n  <el-checkbox-group\n    v-model=\"checkedCities\"\n    :min=\"1\"\n    :max=\"2\">\n    <el-checkbox v-for=\"city in cities\" :label=\"city\" :key=\"city\">{{city}}</el-checkbox>\n  </el-checkbox-group>\n</template>\n<script>\n  const cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\n  export default {\n    data() {\n      return {\n        checkedCities: ['Shanghai', 'Beijing'],\n        cities: cityOptions\n      };\n    }\n  };\n<\/script>\n")],-1),C=Object(d.createVNode)("h3",{id:"style-bouton"},[Object(d.createVNode)("a",{class:"header-anchor",href:"#style-bouton"},"¶"),Object(d.createTextVNode)(" Style bouton")],-1),y=Object(d.createVNode)("p",null,"Des checkbox avec une apparence de bouton.",-1),T=Object(d.createVNode)("div",null,[Object(d.createVNode)("p",null,[Object(d.createTextVNode)("Il vous suffit de changer "),Object(d.createVNode)("code",null,"el-checkbox"),Object(d.createTextVNode)(" en "),Object(d.createVNode)("code",null,"el-checkbox-button"),Object(d.createTextVNode)(". Il existe aussi un attribut "),Object(d.createVNode)("code",null,"size"),Object(d.createTextVNode)(".")])],-1),S=Object(d.createVNode)("pre",null,[Object(d.createVNode)("code",{class:"html"},'<template>\n  <div>\n    <el-checkbox-group v-model="checkboxGroup1">\n      <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\n    </el-checkbox-group>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox-group v-model="checkboxGroup2" size="medium">\n      <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\n    </el-checkbox-group>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox-group v-model="checkboxGroup3" size="small">\n      <el-checkbox-button v-for="city in cities" :label="city" :disabled="city === \'Beijing\'" :key="city">{{city}}</el-checkbox-button>\n    </el-checkbox-group>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox-group v-model="checkboxGroup4" size="mini" disabled>\n      <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\n    </el-checkbox-group>\n  </div>\n</template>\n<script>\n  const cityOptions = [\'Shanghai\', \'Beijing\', \'Guangzhou\', \'Shenzhen\'];\n\n  export default {\n    data () {\n      return {\n        checkboxGroup1: [\'Shanghai\'],\n        checkboxGroup2: [\'Shanghai\'],\n        checkboxGroup3: [\'Shanghai\'],\n        checkboxGroup4: [\'Shanghai\'],\n        cities: cityOptions\n      };\n    }\n  }\n<\/script>\n')],-1),G=Object(d.createVNode)("h3",{id:"bordures"},[Object(d.createVNode)("a",{class:"header-anchor",href:"#bordures"},"¶"),Object(d.createTextVNode)(" Bordures")],-1),w=Object(d.createVNode)("div",null,[Object(d.createVNode)("p",null,[Object(d.createTextVNode)("L'attribut "),Object(d.createVNode)("code",null,"border"),Object(d.createTextVNode)(" ajoute une bordure aux checkbox.")])],-1),B=Object(d.createVNode)("pre",null,[Object(d.createVNode)("code",{class:"html"},'<template>\n  <div>\n    <el-checkbox v-model="checked1" label="Option1" border></el-checkbox>\n    <el-checkbox v-model="checked2" label="Option2" border></el-checkbox>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox v-model="checked3" label="Option1" border size="medium"></el-checkbox>\n    <el-checkbox v-model="checked4" label="Option2" border size="medium"></el-checkbox>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox-group v-model="checkboxGroup1" size="small">\n      <el-checkbox label="Option1" border></el-checkbox>\n      <el-checkbox label="Option2" border disabled></el-checkbox>\n    </el-checkbox-group>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox-group v-model="checkboxGroup2" size="mini" disabled>\n      <el-checkbox label="Option1" border></el-checkbox>\n      <el-checkbox label="Option2" border></el-checkbox>\n    </el-checkbox-group>\n  </div>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        checked1: true,\n        checked2: false,\n        checked3: false,\n        checked4: true,\n        checkboxGroup1: [],\n        checkboxGroup2: []\n      };\n    }\n  }\n<\/script>\n')],-1),z=Object(d.createStaticVNode)('<h3 id="attributs-checkbox"><a class="header-anchor" href="#attributs-checkbox">¶</a> Attributs Checkbox</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Options</th><th>Défaut</th></tr></thead><tbody><tr><td>value / v-model</td><td>La valeur liée.</td><td>string / number / boolean</td><td>—</td><td>—</td></tr><tr><td>label</td><td>Valeur de la checkbox quand utilisée dans un <code>checkbox-group</code>.</td><td>string / number / boolean</td><td>—</td><td>—</td></tr><tr><td>true-label</td><td>Valeur de la checkbox si cochée.</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>false-label</td><td>Valeur de la checkbox si non cochée.</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>Désactive la checkbox.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>border</td><td>Ajoute une bordure à la checkbox.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>size</td><td>taille de la checkbox, ne marche que si <code>border</code> est &#39;true&#39;</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>name</td><td>Attribut &#39;name&#39; natif.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>checked</td><td>Si la checkbox est cochée.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>indeterminate</td><td>Identique à <code>indeterminate</code> dans les checkbox natives.</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id="evenements-checkbox"><a class="header-anchor" href="#evenements-checkbox">¶</a> Évènements Checkbox</h3><table><thead><tr><th>Nom</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>change</td><td>Se déclenche quand la valeur change.</td><td>La nouvelle valeur</td></tr></tbody></table><h3 id="attributs-checkbox-group"><a class="header-anchor" href="#attributs-checkbox-group">¶</a> Attributs Checkbox-group</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Options</th><th>Défaut</th></tr></thead><tbody><tr><td>value / v-model</td><td>La valeur liée.</td><td>array</td><td>—</td><td>—</td></tr><tr><td>size</td><td>Taille des checkbox-boutons ou des checkbox avec bordure.</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>disabled</td><td>Si les checkbox imbriquées sont désactivées.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>min</td><td>Nombre minimum de checkbox cochées.</td><td>number</td><td>—</td><td>—</td></tr><tr><td>max</td><td>Nombre maximum de checkbox cochées.</td><td>number</td><td>—</td><td>—</td></tr><tr><td>text-color</td><td>Couleur de police quand le bouton est actif.</td><td>string</td><td>—</td><td>#ffffff</td></tr><tr><td>fill</td><td>Couleur de la bordure et du fond quand le bouton est actif.</td><td>string</td><td>—</td><td>#409EFF</td></tr></tbody></table><h3 id="evenements-checkbox-group"><a class="header-anchor" href="#evenements-checkbox-group">¶</a> Évènements Checkbox-group</h3><table><thead><tr><th>Nom</th><th>Description</th><th>Paramètres</th></tr></thead><tbody><tr><td>change</td><td>Se déclenche quand la valeur change.</td><td>La nouvelle valeur</td></tr></tbody></table><h3 id="attributs-checkbox-button"><a class="header-anchor" href="#attributs-checkbox-button">¶</a> Attributs Checkbox-button</h3><table><thead><tr><th>Attribut</th><th>Description</th><th>Type</th><th>Options</th><th>Défaut</th></tr></thead><tbody><tr><td>label</td><td>Valeur de la checkbox quand utilisée dans un <code>checkbox-group</code></td><td>string / number / boolean</td><td>—</td><td>—</td></tr><tr><td>true-label</td><td>Valeur de la checkbox si cochée.</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>false-label</td><td>Valeur de la checkbox si non cochée.</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>Si la checkbox est désactivée.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>name</td><td>Attribut &#39;name&#39; natif.</td><td>string</td><td>—</td><td>—</td></tr><tr><td>checked</td><td>Si la checkbox est cochée.</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table>',10);var A={name:"component-doc",components:{"element-demo0":function(){const{createTextVNode:e,resolveComponent:t,withCtx:c,createVNode:o,openBlock:l,createBlock:n}=d,a=e("Option");const r={data:()=>({checked:!0})};return Object.assign({render:function(e,d){const r=t("el-checkbox");return l(),n("div",null,[o(r,{modelValue:e.checked,"onUpdate:modelValue":d[1]||(d[1]=t=>e.checked=t)},{default:c(()=>[a]),_:1},8,["modelValue"])])}},r)}(),"element-demo1":function(){const{createTextVNode:e,resolveComponent:t,withCtx:c,createVNode:o,openBlock:l,createBlock:n}=d,a=e("Option"),r=e("Option");const i={data:()=>({checked1:!1,checked2:!0})};return Object.assign({render:function(e,d){const i=t("el-checkbox");return l(),n("div",null,[o(i,{modelValue:e.checked1,"onUpdate:modelValue":d[1]||(d[1]=t=>e.checked1=t),disabled:""},{default:c(()=>[a]),_:1},8,["modelValue"]),o(i,{modelValue:e.checked2,"onUpdate:modelValue":d[2]||(d[2]=t=>e.checked2=t),disabled:""},{default:c(()=>[r]),_:1},8,["modelValue"])])}},i)}(),"element-demo2":function(){const{resolveComponent:e,createVNode:t,withCtx:c,openBlock:o,createBlock:l}=d;const n={data:()=>({checkList:["selected and disabled","Option A"]})};return Object.assign({render:function(d,n){const a=e("el-checkbox"),r=e("el-checkbox-group");return o(),l("div",null,[t(r,{modelValue:d.checkList,"onUpdate:modelValue":n[1]||(n[1]=e=>d.checkList=e)},{default:c(()=>[t(a,{label:"Option A"}),t(a,{label:"Option B"}),t(a,{label:"Option C"}),t(a,{label:"Désactivée",disabled:""}),t(a,{label:"Sélectionnée et désactivée",disabled:""})]),_:1},8,["modelValue"])])}},n)}(),"element-demo3":function(){const{createTextVNode:e,resolveComponent:t,withCtx:c,createVNode:o,renderList:l,Fragment:n,openBlock:a,createBlock:r,toDisplayString:i}=d,h=e("Sélectionner tout"),b=o("div",{style:{margin:"15px 0"}},null,-1);const u=["Shanghai","Beijing","Guangzhou","Shenzhen"],s={data:()=>({checkAll:!1,checkedCities:["Shanghai","Beijing"],cities:u,isIndeterminate:!0}),methods:{handleCheckAllChange(e){this.checkedCities=e?u:[],this.isIndeterminate=!1},handleCheckedCitiesChange(e){let t=e.length;this.checkAll=t===this.cities.length,this.isIndeterminate=t>0&&t<this.cities.length}}};return Object.assign({render:function(d,u){const s=t("el-checkbox"),m=t("el-checkbox-group");return a(),r("div",null,[o(s,{indeterminate:d.isIndeterminate,modelValue:d.checkAll,"onUpdate:modelValue":u[1]||(u[1]=e=>d.checkAll=e),onChange:d.handleCheckAllChange},{default:c(()=>[h]),_:1},8,["indeterminate","modelValue","onChange"]),b,o(m,{modelValue:d.checkedCities,"onUpdate:modelValue":u[2]||(u[2]=e=>d.checkedCities=e),onChange:d.handleCheckedCitiesChange},{default:c(()=>[(a(!0),r(n,null,l(d.cities,t=>(a(),r(s,{label:t,key:t},{default:c(()=>[e(i(t),1)]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue","onChange"])])}},s)}(),"element-demo4":function(){const{renderList:e,Fragment:t,openBlock:c,createBlock:o,toDisplayString:l,createTextVNode:n,resolveComponent:a,withCtx:r,createVNode:i}=d;const h=["Shanghai","Beijing","Guangzhou","Shenzhen"],b={data:()=>({checkedCities:["Shanghai","Beijing"],cities:h})};return Object.assign({render:function(d,h){const b=a("el-checkbox"),u=a("el-checkbox-group");return c(),o("div",null,[i(u,{modelValue:d.checkedCities,"onUpdate:modelValue":h[1]||(h[1]=e=>d.checkedCities=e),min:1,max:2},{default:r(()=>[(c(!0),o(t,null,e(d.cities,e=>(c(),o(b,{label:e,key:e},{default:r(()=>[n(l(e),1)]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue"])])}},b)}(),"element-demo5":function(){const{renderList:e,Fragment:t,openBlock:c,createBlock:o,toDisplayString:l,createTextVNode:n,resolveComponent:a,withCtx:r,createVNode:i}=d,h={style:{"margin-top":"20px"}},b={style:{"margin-top":"20px"}},u={style:{"margin-top":"20px"}};const s=["Shanghai","Beijing","Guangzhou","Shenzhen"],m={data:()=>({checkboxGroup1:["Shanghai"],checkboxGroup2:["Shanghai"],checkboxGroup3:["Shanghai"],checkboxGroup4:["Shanghai"],cities:s})};return Object.assign({render:function(d,s){const m=a("el-checkbox-button"),p=a("el-checkbox-group");return c(),o("div",null,[i("div",null,[i(p,{modelValue:d.checkboxGroup1,"onUpdate:modelValue":s[1]||(s[1]=e=>d.checkboxGroup1=e)},{default:r(()=>[(c(!0),o(t,null,e(d.cities,e=>(c(),o(m,{label:e,key:e},{default:r(()=>[n(l(e),1)]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue"])]),i("div",h,[i(p,{modelValue:d.checkboxGroup2,"onUpdate:modelValue":s[2]||(s[2]=e=>d.checkboxGroup2=e),size:"medium"},{default:r(()=>[(c(!0),o(t,null,e(d.cities,e=>(c(),o(m,{label:e,key:e},{default:r(()=>[n(l(e),1)]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue"])]),i("div",b,[i(p,{modelValue:d.checkboxGroup3,"onUpdate:modelValue":s[3]||(s[3]=e=>d.checkboxGroup3=e),size:"small"},{default:r(()=>[(c(!0),o(t,null,e(d.cities,e=>(c(),o(m,{label:e,disabled:"Beijing"===e,key:e},{default:r(()=>[n(l(e),1)]),_:2},1032,["label","disabled"]))),128))]),_:1},8,["modelValue"])]),i("div",u,[i(p,{modelValue:d.checkboxGroup4,"onUpdate:modelValue":s[4]||(s[4]=e=>d.checkboxGroup4=e),size:"mini",disabled:""},{default:r(()=>[(c(!0),o(t,null,e(d.cities,e=>(c(),o(m,{label:e,key:e},{default:r(()=>[n(l(e),1)]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue"])])])}},m)}(),"element-demo6":function(){const{resolveComponent:e,createVNode:t,withCtx:c,openBlock:o,createBlock:l}=d,n={style:{"margin-top":"20px"}},a={style:{"margin-top":"20px"}},r={style:{"margin-top":"20px"}};const i={data:()=>({checked1:!0,checked2:!1,checked3:!1,checked4:!0,checkboxGroup1:[],checkboxGroup2:[]})};return Object.assign({render:function(d,i){const h=e("el-checkbox"),b=e("el-checkbox-group");return o(),l("div",null,[t("div",null,[t(h,{modelValue:d.checked1,"onUpdate:modelValue":i[1]||(i[1]=e=>d.checked1=e),label:"Option1",border:""},null,8,["modelValue"]),t(h,{modelValue:d.checked2,"onUpdate:modelValue":i[2]||(i[2]=e=>d.checked2=e),label:"Option2",border:""},null,8,["modelValue"])]),t("div",n,[t(h,{modelValue:d.checked3,"onUpdate:modelValue":i[3]||(i[3]=e=>d.checked3=e),label:"Option1",border:"",size:"medium"},null,8,["modelValue"]),t(h,{modelValue:d.checked4,"onUpdate:modelValue":i[4]||(i[4]=e=>d.checked4=e),label:"Option2",border:"",size:"medium"},null,8,["modelValue"])]),t("div",a,[t(b,{modelValue:d.checkboxGroup1,"onUpdate:modelValue":i[5]||(i[5]=e=>d.checkboxGroup1=e),size:"small"},{default:c(()=>[t(h,{label:"Option1",border:""}),t(h,{label:"Option2",border:"",disabled:""})]),_:1},8,["modelValue"])]),t("div",r,[t(b,{modelValue:d.checkboxGroup2,"onUpdate:modelValue":i[6]||(i[6]=e=>d.checkboxGroup2=e),size:"mini",disabled:""},{default:c(()=>[t(h,{label:"Option1",border:""}),t(h,{label:"Option2",border:""})]),_:1},8,["modelValue"])])])}},i)}()},render:function(e,t,c,A,_,U){const L=Object(d.resolveComponent)("element-demo0"),D=Object(d.resolveComponent)("demo-block"),q=Object(d.resolveComponent)("element-demo1"),I=Object(d.resolveComponent)("element-demo2"),F=Object(d.resolveComponent)("element-demo3"),J=Object(d.resolveComponent)("element-demo4"),M=Object(d.resolveComponent)("element-demo5"),P=Object(d.resolveComponent)("element-demo6");return Object(d.openBlock)(),Object(d.createBlock)("section",o,[l,n,a,r,Object(d.createVNode)(D,null,{source:Object(d.withCtx)(()=>[Object(d.createVNode)(L)]),highlight:Object(d.withCtx)(()=>[h]),default:Object(d.withCtx)(()=>[i]),_:1}),b,u,Object(d.createVNode)(D,null,{source:Object(d.withCtx)(()=>[Object(d.createVNode)(q)]),highlight:Object(d.withCtx)(()=>[m]),default:Object(d.withCtx)(()=>[s]),_:1}),p,k,Object(d.createVNode)(D,null,{source:Object(d.withCtx)(()=>[Object(d.createVNode)(I)]),highlight:Object(d.withCtx)(()=>[O]),default:Object(d.withCtx)(()=>[x]),_:1}),V,j,Object(d.createVNode)(D,null,{source:Object(d.withCtx)(()=>[Object(d.createVNode)(F)]),highlight:Object(d.withCtx)(()=>[g]),_:1}),N,v,Object(d.createVNode)(D,null,{source:Object(d.withCtx)(()=>[Object(d.createVNode)(J)]),highlight:Object(d.withCtx)(()=>[f]),_:1}),C,y,Object(d.createVNode)(D,null,{source:Object(d.withCtx)(()=>[Object(d.createVNode)(M)]),highlight:Object(d.withCtx)(()=>[S]),default:Object(d.withCtx)(()=>[T]),_:1}),G,Object(d.createVNode)(D,null,{source:Object(d.withCtx)(()=>[Object(d.createVNode)(P)]),highlight:Object(d.withCtx)(()=>[B]),default:Object(d.withCtx)(()=>[w]),_:1}),z])}};t.default=A}}]);