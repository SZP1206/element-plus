(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{581:function(e,t,o){"use strict";o.r(t);var n=o(0);const c={class:"content element-doc"},a=Object(n.createVNode)("h2",{id:"notification"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#notification"},"¶"),Object(n.createTextVNode)(" Notification")],-1),i=Object(n.createVNode)("p",null,"Muestra un mensaje de notificación global en una esquina de la página.",-1),s=Object(n.createVNode)("h3",{id:"uso-basico"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#uso-basico"},"¶"),Object(n.createTextVNode)(" Uso básico")],-1),r=Object(n.createVNode)("div",null,[Object(n.createVNode)("p",null,[Object(n.createTextVNode)("Element Plus ha registrado el método"),Object(n.createVNode)("code",null,"$notify"),Object(n.createTextVNode)(" y recibe un objeto como parámetro. En el caso más sencillo, puede establecer el campo de "),Object(n.createVNode)("code",null,"title"),Object(n.createTextVNode)(" y el campo de "),Object(n.createVNode)("code",null," message"),Object(n.createTextVNode)(" para el título y el cuerpo de la notificación. De forma predeterminada, la notificación se cierra automáticamente después de 4500ms, pero configurando "),Object(n.createVNode)("code",null,"duration"),Object(n.createTextVNode)(" se puede controlar su duración. Específicamente, si está configurado en "),Object(n.createVNode)("code",null,"0"),Object(n.createTextVNode)(", no se cerrará automáticamente. Tenga en cuenta que "),Object(n.createVNode)("code",null,"duration"),Object(n.createTextVNode)(" recibe un "),Object(n.createVNode)("code",null,"Number"),Object(n.createTextVNode)(" en milisegundos.")])],-1),d=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open1\">\n    Closes automatically\n  </el-button>\n  <el-button\n    plain\n    @click=\"open2\">\n    Won't close automatically\n    </el-button>\n</template>\n\n<script>\n  import { h } from 'vue';\n\n  export default {\n    methods: {\n      open1() {\n        this.$notify({\n          title: 'Title',\n          message: h('i', { style: 'color: teal' }, 'This is a reminder')\n        });\n      },\n\n      open2() {\n        this.$notify({\n          title: 'Prompt',\n          message: 'This is a message that does not automatically close',\n          duration: 0\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),l=Object(n.createVNode)("h3",{id:"tipos-de-notificaciones"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#tipos-de-notificaciones"},"¶"),Object(n.createTextVNode)(" Tipos de notificaciones")],-1),u=Object(n.createVNode)("p",null,"Proporcionamos cuatro tipos: success, warning, info y error.",-1),p=Object(n.createVNode)("div",null,[Object(n.createVNode)("p",null,[Object(n.createTextVNode)("Element Plus proporciona cuatro tipos de notificación: "),Object(n.createVNode)("code",null,"success"),Object(n.createTextVNode)(", "),Object(n.createVNode)("code",null,"warning"),Object(n.createTextVNode)(", "),Object(n.createVNode)("code",null,"info"),Object(n.createTextVNode)(" y "),Object(n.createVNode)("code",null,"error"),Object(n.createTextVNode)(". Se definen por el campo "),Object(n.createVNode)("code",null,"type"),Object(n.createTextVNode)(" y se ignorarán otros valores. También se han registrado métodos para estos tipos que se pueden invocar directamente como en el ejemplo "),Object(n.createVNode)("code",null,"open3"),Object(n.createTextVNode)(" y "),Object(n.createVNode)("code",null,"open4"),Object(n.createTextVNode)(" sin pasar un campo "),Object(n.createVNode)("code",null,"type"),Object(n.createTextVNode)(".")])],-1),m=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open1\">\n    Success\n  </el-button>\n  <el-button\n    plain\n    @click=\"open2\">\n    Warning\n  </el-button>\n  <el-button\n    plain\n    @click=\"open3\">\n    Info\n  </el-button>\n  <el-button\n    plain\n    @click=\"open4\">\n    Error\n  </el-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      open1() {\n        this.$notify({\n          title: 'Success',\n          message: 'This is a success message',\n          type: 'success'\n        });\n      },\n\n      open2() {\n        this.$notify({\n          title: 'Warning',\n          message: 'This is a warning message',\n          type: 'warning'\n        });\n      },\n\n      open3() {\n        this.$notify.info({\n          title: 'Info',\n          message: 'This is an info message'\n        });\n      },\n\n      open4() {\n        this.$notify.error({\n          title: 'Error',\n          message: 'This is an error message'\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),b=Object(n.createVNode)("h3",{id:"posicion-personalizada"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#posicion-personalizada"},"¶"),Object(n.createTextVNode)(" Posición personalizada")],-1),h=Object(n.createVNode)("p",null,"La notificación puede surgir de cualquier rincón que uno desee.",-1),f=Object(n.createVNode)("div",null,[Object(n.createVNode)("p",null,[Object(n.createTextVNode)("El atributo "),Object(n.createVNode)("code",null,"position"),Object(n.createTextVNode)(" define desde qué esquina se desliza la notificación. Puede ser "),Object(n.createVNode)("code",null,"top-right"),Object(n.createTextVNode)(", "),Object(n.createVNode)("code",null,"top-left"),Object(n.createTextVNode)(", "),Object(n.createVNode)("code",null,"bottom-right"),Object(n.createTextVNode)(" o "),Object(n.createVNode)("code",null,"bottom-left"),Object(n.createTextVNode)(". Predeterminado: "),Object(n.createVNode)("code",null,"top-right"),Object(n.createTextVNode)(".")])],-1),j=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open1\">\n    Top Right\n  </el-button>\n  <el-button\n    plain\n    @click=\"open2\">\n    Bottom Right\n  </el-button>\n  <el-button\n    plain\n    @click=\"open3\">\n    Bottom Left\n  </el-button>\n  <el-button\n    plain\n    @click=\"open4\">\n    Top Left\n  </el-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      open1() {\n        this.$notify({\n          title: 'Custom Position',\n          message: 'I\\'m at the top right corner'\n        });\n      },\n\n      open2() {\n        this.$notify({\n          title: 'Custom Position',\n          message: 'I\\'m at the bottom right corner',\n          position: 'bottom-right'\n        });\n      },\n\n      open3() {\n        this.$notify({\n          title: 'Custom Position',\n          message: 'I\\'m at the bottom left corner',\n          position: 'bottom-left'\n        });\n      },\n\n      open4() {\n        this.$notify({\n          title: 'Custom Position',\n          message: 'I\\'m at the top left corner',\n          position: 'top-left'\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),O=Object(n.createVNode)("h3",{id:"desplazamiento"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#desplazamiento"},"¶"),Object(n.createTextVNode)(" Desplazamiento")],-1),g=Object(n.createVNode)("p",null,"Personalizar el desplazamiento de notificación desde el borde de la pantalla.",-1),N=Object(n.createVNode)("div",null,[Object(n.createVNode)("p",null,[Object(n.createTextVNode)("Configure el atributo "),Object(n.createVNode)("code",null,"offset"),Object(n.createTextVNode)(" para personalizar el desplazamiento de la notificación desde el borde de la pantalla. Tenga en cuenta que cada instancia de la notificación del mismo momento debe tener el mismo desplazamiento.")])],-1),V=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open\">\n    Notification with offset\n  </el-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      open() {\n        this.$notify.success({\n          title: 'Success',\n          message: 'This is a success message',\n          offset: 100\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),T=Object(n.createVNode)("h3",{id:"usando-cadenas-html"},[Object(n.createVNode)("a",{class:"header-anchor",href:"#usando-cadenas-html"},"¶"),Object(n.createTextVNode)(" Usando cadenas HTML")],-1),C=Object(n.createVNode)("p",null,[Object(n.createVNode)("code",null,"message"),Object(n.createTextVNode)(" soporta cadenas HTML.")],-1),x=Object(n.createVNode)("div",null,[Object(n.createVNode)("p",null,[Object(n.createTextVNode)("Configure "),Object(n.createVNode)("code",null,"dangerouslyUseHTMLString"),Object(n.createTextVNode)(" a true y "),Object(n.createVNode)("code",null,"message"),Object(n.createTextVNode)(" se tratará como una cadena HTML.")])],-1),y=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open\">\n    Use HTML String\n  </el-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      open() {\n        this.$notify({\n          title: 'HTML String',\n          dangerouslyUseHTMLString: true,\n          message: '<strong>This is <i>HTML</i> string</strong>'\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),k=Object(n.createStaticVNode)('<div class="warning"><p>Aunque la propiedad <code>message</code> soporta cadenas HTML, el renderizado dinámico de HTML arbitrario en su sitio web puede ser muy peligroso porque puede conducir fácilmente a <a href="https://en.wikipedia.org/wiki/Cross-site_scripting">ataques XSS</a>. Por lo tanto, cuando <code>dangerouslyUseHTMLString</code> está a true, por favor asegúrese de que el contenido del mensaje es confiable, y <strong>nunca</strong> asigne <code>message</code> al contenido proporcionado por el usuario.</p></div><h3 id="ocultar-boton-de-cerrar"><a class="header-anchor" href="#ocultar-boton-de-cerrar">¶</a> Ocultar boton de cerrar</h3><p>Es posible ocultar el botón de cerrar</p>',3),w=Object(n.createVNode)("div",null,[Object(n.createVNode)("p",null,[Object(n.createTextVNode)("Configure el atributo "),Object(n.createVNode)("code",null,"showClose"),Object(n.createTextVNode)(" como "),Object(n.createVNode)("code",null,"false"),Object(n.createTextVNode)(" para que el usuario no pueda cerrar la notificación.")])],-1),v=Object(n.createVNode)("pre",null,[Object(n.createVNode)("code",{class:"html"},"<template>\n  <el-button\n    plain\n    @click=\"open\">\n    Hide close button\n    </el-button>\n</template>\n\n<script>\n  export default {\n    methods: {\n      open() {\n        this.$notify.success({\n          title: 'Info',\n          message: 'This is a message without close button',\n          showClose: false\n        });\n      }\n    }\n  }\n<\/script>\n")],-1),$=Object(n.createStaticVNode)('<h3 id="metodo-global"><a class="header-anchor" href="#metodo-global">¶</a> Método global</h3><p>Element Plus ha añadido un método global <code>$notify</code> para Vue.prototype. Así que en una instancia de vue se puede llamar <code>Notification</code> como lo hacemos en esta página.</p><h3 id="importar-localmente"><a class="header-anchor" href="#importar-localmente">¶</a> Importar localmente</h3><p>Importar <code>Notification</code>:</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> { Notification } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\n</code></pre><p>En este caso, debe llamar a <code>Notification(options)</code>. También se han registrado métodos para diferentes tipos, e.j. <code>Notification.success(options)</code>. Puede llamar al método <code>Notification.closeAll()</code> para cerrar manualmente todas las instancias.</p><h3 id="opciones"><a class="header-anchor" href="#opciones">¶</a> Opciones</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>title</td><td>titulo</td><td>string</td><td>—</td><td>—</td></tr><tr><td>message</td><td>mensaje</td><td>string/Vue.VNode</td><td>—</td><td>—</td></tr><tr><td>dangerouslyUseHTMLString</td><td>si <code>message</code> es tratado como una cadena HTML</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>type</td><td>tipo de notificación</td><td>string</td><td>success/warning/info/error</td><td>—</td></tr><tr><td>iconClass</td><td>clase personalizada de icono. Será anulado por <code>type</code></td><td>string</td><td>—</td><td>—</td></tr><tr><td>customClass</td><td>nombre de clase personalizado para la notificación</td><td>string</td><td>—</td><td>—</td></tr><tr><td>duration</td><td>duración antes de cerrar. Si no se quiere que se cierre automáticamente este valor debe estar a 0</td><td>number</td><td>—</td><td>4500</td></tr><tr><td>position</td><td>posición personalizada</td><td>string</td><td>top-right/top-left/bottom-right/bottom-left</td><td>top-right</td></tr><tr><td>showClose</td><td>si se muestra el botón de cerrar</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>onClose</td><td>función que se ejecuta cuando la notificación se cierra</td><td>function</td><td>—</td><td>—</td></tr><tr><td>onClick</td><td>función que se ejecuta cuando se hace clic en la notificación</td><td>function</td><td>—</td><td>—</td></tr><tr><td>offset</td><td>desplazamiento desde el borde superior de la pantalla. Cada instancia de notificación del mismo momento debe tener siempre el mismo desplazamiento.</td><td>number</td><td>—</td><td>0</td></tr></tbody></table><h3 id="metodos"><a class="header-anchor" href="#metodos">¶</a> Métodos</h3><p><code>Notification</code> y <code>this.$notify</code> devuelven la instancia de la notificación actual. Para cerrar manualmente la instancia, se puede llamar <code>close</code> para ello.</p><table><thead><tr><th>Metodo</th><th>Descripción</th></tr></thead><tbody><tr><td>close</td><td>cierra la notificación</td></tr></tbody></table>',11);var L={name:"component-doc",components:{"element-demo0":function(){const{createTextVNode:e,resolveComponent:t,withCtx:o,createVNode:c,openBlock:a,createBlock:i}=n,s=e(" Closes automatically "),r=e(" Won't close automatically ");const{h:d}=n,l={methods:{open1(){this.$notify({title:"Title",message:d("i",{style:"color: teal"},"This is a reminder")})},open2(){this.$notify({title:"Prompt",message:"This is a message that does not automatically close",duration:0})}}};return Object.assign({render:function(e,n){const d=t("el-button");return a(),i("div",null,[c(d,{plain:"",onClick:e.open1},{default:o(()=>[s]),_:1},8,["onClick"]),c(d,{plain:"",onClick:e.open2},{default:o(()=>[r]),_:1},8,["onClick"])])}},l)}(),"element-demo1":function(){const{createTextVNode:e,resolveComponent:t,withCtx:o,createVNode:c,openBlock:a,createBlock:i}=n,s=e(" Success "),r=e(" Warning "),d=e(" Info "),l=e(" Error ");const u={methods:{open1(){this.$notify({title:"Success",message:"This is a success message",type:"success"})},open2(){this.$notify({title:"Warning",message:"This is a warning message",type:"warning"})},open3(){this.$notify.info({title:"Info",message:"This is an info message"})},open4(){this.$notify.error({title:"Error",message:"This is an error message"})}}};return Object.assign({render:function(e,n){const u=t("el-button");return a(),i("div",null,[c(u,{plain:"",onClick:e.open1},{default:o(()=>[s]),_:1},8,["onClick"]),c(u,{plain:"",onClick:e.open2},{default:o(()=>[r]),_:1},8,["onClick"]),c(u,{plain:"",onClick:e.open3},{default:o(()=>[d]),_:1},8,["onClick"]),c(u,{plain:"",onClick:e.open4},{default:o(()=>[l]),_:1},8,["onClick"])])}},u)}(),"element-demo2":function(){const{createTextVNode:e,resolveComponent:t,withCtx:o,createVNode:c,openBlock:a,createBlock:i}=n,s=e(" Top Right "),r=e(" Bottom Right "),d=e(" Bottom Left "),l=e(" Top Left ");const u={methods:{open1(){this.$notify({title:"Custom Position",message:"I'm at the top right corner"})},open2(){this.$notify({title:"Custom Position",message:"I'm at the bottom right corner",position:"bottom-right"})},open3(){this.$notify({title:"Custom Position",message:"I'm at the bottom left corner",position:"bottom-left"})},open4(){this.$notify({title:"Custom Position",message:"I'm at the top left corner",position:"top-left"})}}};return Object.assign({render:function(e,n){const u=t("el-button");return a(),i("div",null,[c(u,{plain:"",onClick:e.open1},{default:o(()=>[s]),_:1},8,["onClick"]),c(u,{plain:"",onClick:e.open2},{default:o(()=>[r]),_:1},8,["onClick"]),c(u,{plain:"",onClick:e.open3},{default:o(()=>[d]),_:1},8,["onClick"]),c(u,{plain:"",onClick:e.open4},{default:o(()=>[l]),_:1},8,["onClick"])])}},u)}(),"element-demo3":function(){const{createTextVNode:e,resolveComponent:t,withCtx:o,createVNode:c,openBlock:a,createBlock:i}=n,s=e(" Notification with offset ");const r={methods:{open(){this.$notify.success({title:"Success",message:"This is a success message",offset:100})}}};return Object.assign({render:function(e,n){const r=t("el-button");return a(),i("div",null,[c(r,{plain:"",onClick:e.open},{default:o(()=>[s]),_:1},8,["onClick"])])}},r)}(),"element-demo4":function(){const{createTextVNode:e,resolveComponent:t,withCtx:o,createVNode:c,openBlock:a,createBlock:i}=n,s=e(" Use HTML String ");const r={methods:{open(){this.$notify({title:"HTML String",dangerouslyUseHTMLString:!0,message:"<strong>This is <i>HTML</i> string</strong>"})}}};return Object.assign({render:function(e,n){const r=t("el-button");return a(),i("div",null,[c(r,{plain:"",onClick:e.open},{default:o(()=>[s]),_:1},8,["onClick"])])}},r)}(),"element-demo5":function(){const{createTextVNode:e,resolveComponent:t,withCtx:o,createVNode:c,openBlock:a,createBlock:i}=n,s=e(" Hide close button ");const r={methods:{open(){this.$notify.success({title:"Info",message:"This is a message without close button",showClose:!1})}}};return Object.assign({render:function(e,n){const r=t("el-button");return a(),i("div",null,[c(r,{plain:"",onClick:e.open},{default:o(()=>[s]),_:1},8,["onClick"])])}},r)}()},render:function(e,t,o,L,P,S){const M=Object(n.resolveComponent)("element-demo0"),_=Object(n.resolveComponent)("demo-block"),H=Object(n.resolveComponent)("element-demo1"),q=Object(n.resolveComponent)("element-demo2"),z=Object(n.resolveComponent)("element-demo3"),B=Object(n.resolveComponent)("element-demo4"),I=Object(n.resolveComponent)("element-demo5");return Object(n.openBlock)(),Object(n.createBlock)("section",c,[a,i,s,Object(n.createVNode)(_,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(M)]),highlight:Object(n.withCtx)(()=>[d]),default:Object(n.withCtx)(()=>[r]),_:1}),l,u,Object(n.createVNode)(_,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(H)]),highlight:Object(n.withCtx)(()=>[m]),default:Object(n.withCtx)(()=>[p]),_:1}),b,h,Object(n.createVNode)(_,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(q)]),highlight:Object(n.withCtx)(()=>[j]),default:Object(n.withCtx)(()=>[f]),_:1}),O,g,Object(n.createVNode)(_,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(z)]),highlight:Object(n.withCtx)(()=>[V]),default:Object(n.withCtx)(()=>[N]),_:1}),T,C,Object(n.createVNode)(_,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(B)]),highlight:Object(n.withCtx)(()=>[y]),default:Object(n.withCtx)(()=>[x]),_:1}),k,Object(n.createVNode)(_,null,{source:Object(n.withCtx)(()=>[Object(n.createVNode)(I)]),highlight:Object(n.withCtx)(()=>[v]),default:Object(n.withCtx)(()=>[w]),_:1}),$])}};t.default=L}}]);