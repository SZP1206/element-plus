(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{604:function(e,t,a){"use strict";a.r(t);var o=a(0);const l={class:"content element-doc"},d=Object(o.createVNode)("h2",{id:"carga-de-archivos"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#carga-de-archivos"},"¶"),Object(o.createTextVNode)(" Carga de archivos")],-1),n=Object(o.createVNode)("p",null,"Carga archivos haciendo clic o arrastrándolos.",-1),i=Object(o.createVNode)("h3",{id:"clic-para-cargar-archivos"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#clic-para-cargar-archivos"},"¶"),Object(o.createTextVNode)(" Clic para cargar archivos")],-1),c=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Personalice el tipo y texto del botón utilizando la propiedad "),Object(o.createVNode)("code",null,"slot"),Object(o.createTextVNode)(". Defina las propiedades "),Object(o.createVNode)("code",null,"limit"),Object(o.createTextVNode)(" y "),Object(o.createVNode)("code",null,"on-exceed"),Object(o.createTextVNode)(" para limitar el número máximo de archivos a subir y especifique un método para cuando el límite ha sido excedido.")])],-1),r=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="upload-demo"\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :on-preview="handlePreview"\n  :on-remove="handleRemove"\n  multiple\n  :limit="3"\n  :on-exceed="handleExceed"\n  :file-list="fileList">\n  <el-button size="small" type="primary">Clic para subir archivo</el-button>\n  <div slot="tip" class="el-upload__tip">Solo archivos jpg/png con un tamaño menor de 500kb</div>\n</el-upload>\n<script>\n  export default {\n    data() {\n      return {\n        fileList: [{name: \'food.jpeg\', url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\'}, {name: \'food2.jpeg\', url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\'}]\n      };\n    },\n    methods: {\n      handleRemove(file, fileList) {\n        console.log(file, fileList);\n      },\n      handlePreview(file) {\n        console.log(file);\n      },\n      handleExceed(files, fileList) {\n        this.$message.warning(`El límite es 3, haz seleccionado ${files.length} archivos esta vez, añade hasta ${files.length + fileList.length}`);\n      }\n    }\n  }\n<\/script>\n')],-1),s=Object(o.createVNode)("h3",{id:"cargar-avatar-de-usuario"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#cargar-avatar-de-usuario"},"¶"),Object(o.createTextVNode)(" Cargar avatar de usuario")],-1),p=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Utilice el "),Object(o.createVNode)("em",null,"hook"),Object(o.createTextVNode)(),Object(o.createVNode)("code",null,"before-upload"),Object(o.createTextVNode)(" para limitar el formato de archivo y su tamaño.")],-1),u=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="avatar-uploader"\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :show-file-list="false"\n  :on-success="handleAvatarSuccess"\n  :before-upload="beforeAvatarUpload">\n  <img v-if="imageUrl" :src="imageUrl" class="avatar">\n  <i v-else class="el-icon-plus avatar-uploader-icon"></i>\n</el-upload>\n\n<style>\n  .avatar-uploader .el-upload {\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n  }\n  .avatar-uploader .el-upload:hover {\n    border-color: #409EFF;\n  }\n  .avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 178px;\n    height: 178px;\n    line-height: 178px;\n    text-align: center;\n  }\n  .avatar {\n    width: 178px;\n    height: 178px;\n    display: block;\n  }\n</style>\n\n<script>\n  export default {\n    data() {\n      return {\n        imageUrl: \'\'\n      };\n    },\n    methods: {\n      handleAvatarSuccess(res, file) {\n        this.imageUrl = URL.createObjectURL(file.raw);\n      },\n      beforeAvatarUpload(file) {\n        const isJPG = file.type === \'image/jpeg\';\n        const isLt2M = file.size / 1024 / 1024 < 2;\n\n        if (!isJPG) {\n          this.$message.error(\'La imagen debe estar en formato JPG!\');\n        }\n        if (!isLt2M) {\n          this.$message.error(\'La imagen excede los 2MB!\');\n        }\n        return isJPG && isLt2M;\n      }\n    }\n  }\n<\/script>\n')],-1),m=Object(o.createVNode)("h3",{id:"pared-de-fotografias"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#pared-de-fotografias"},"¶"),Object(o.createTextVNode)(" Pared de fotografías")],-1),h=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Utilice la propiedad "),Object(o.createVNode)("code",null,"list-type"),Object(o.createTextVNode)(" para cambiar el estilo a un listado de archivos.")],-1),b=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  action="https://jsonplaceholder.typicode.com/posts/"\n  list-type="picture-card"\n  :on-preview="handlePictureCardPreview"\n  :on-remove="handleRemove">\n  <i class="el-icon-plus"></i>\n</el-upload>\n<el-dialog :visible.sync="dialogVisible">\n  <img width="100%" :src="dialogImageUrl" alt="">\n</el-dialog>\n<script>\n  export default {\n    data() {\n      return {\n        dialogImageUrl: \'\',\n        dialogVisible: false\n      };\n    },\n    methods: {\n      handleRemove(file, fileList) {\n        console.log(file, fileList);\n      },\n      handlePictureCardPreview(file) {\n        this.dialogImageUrl = file.url;\n        this.dialogVisible = true;\n      }\n    }\n  }\n<\/script>\n')],-1),f=Object(o.createVNode)("h3",{id:"custom-file-thumbnail"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#custom-file-thumbnail"},"¶"),Object(o.createTextVNode)(" Custom file thumbnail")],-1),g=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Use "),Object(o.createVNode)("code",null,"scoped-slot"),Object(o.createTextVNode)(" to change default thumbnail template.")],-1),v=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  action="#"\n  list-type="picture-card"\n  :auto-upload="false">\n    <i slot="default" class="el-icon-plus"></i>\n    <div slot="file" slot-scope="{file}">\n      <img\n        class="el-upload-list__item-thumbnail"\n        :src="file.url" alt=""\n      >\n      <span class="el-upload-list__item-actions">\n        <span\n          class="el-upload-list__item-preview"\n          @click="handlePictureCardPreview(file)"\n        >\n          <i class="el-icon-zoom-in"></i>\n        </span>\n        <span\n          v-if="!disabled"\n          class="el-upload-list__item-delete"\n          @click="handleDownload(file)"\n        >\n          <i class="el-icon-download"></i>\n        </span>\n        <span\n          v-if="!disabled"\n          class="el-upload-list__item-delete"\n          @click="handleRemove(file)"\n        >\n          <i class="el-icon-delete"></i>\n        </span>\n      </span>\n    </div>\n</el-upload>\n<el-dialog :visible.sync="dialogVisible">\n  <img width="100%" :src="dialogImageUrl" alt="">\n</el-dialog>\n<script>\n  export default {\n    data() {\n      return {\n        dialogImageUrl: \'\',\n        dialogVisible: false,\n        disabled: false\n      };\n    },\n    methods: {\n      handleRemove(file) {\n        console.log(file);\n      },\n      handlePictureCardPreview(file) {\n        this.dialogImageUrl = file.url;\n        this.dialogVisible = true;\n      },\n      handleDownload(file) {\n        console.log(file);\n      }\n    }\n  }\n<\/script>\n')],-1),j=Object(o.createVNode)("h3",{id:"lista-de-archivos-con-miniatura"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#lista-de-archivos-con-miniatura"},"¶"),Object(o.createTextVNode)(" Lista de archivos con miniatura")],-1),O=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="upload-demo"\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :on-preview="handlePreview"\n  :on-remove="handleRemove"\n  :file-list="fileList"\n  list-type="picture">\n  <el-button size="small" type="primary">Clic para subir archivo</el-button>\n  <div slot="tip" class="el-upload__tip">Solo archivos jpg/png con un tamaño menor de 500kb</div>\n</el-upload>\n<script>\n  export default {\n    data() {\n      return {\n        fileList: [{name: \'food.jpeg\', url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\'}, {name: \'food2.jpeg\', url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\'}]\n      };\n    },\n    methods: {\n      handleRemove(file, fileList) {\n        console.log(file, fileList);\n      },\n      handlePreview(file) {\n        console.log(file);\n      }\n    }\n  }\n<\/script>\n')],-1),V=Object(o.createVNode)("h3",{id:"control-de-lista-de-archivos"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#control-de-lista-de-archivos"},"¶"),Object(o.createTextVNode)(" Control de lista de archivos")],-1),x=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Utilice el "),Object(o.createVNode)("em",null,"hook"),Object(o.createTextVNode)(),Object(o.createVNode)("code",null,"on-change"),Object(o.createTextVNode)(" para controlar la funcionalidad de la lista de archivos subidos.")],-1),N=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="upload-demo"\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :on-change="handleChange"\n  :file-list="fileList">\n  <el-button size="small" type="primary">Clic para subir archivo</el-button>\n  <div slot="tip" class="el-upload__tip">Solo archivos jpg/png con un tamaño menor de 500kb</div>\n</el-upload>\n<script>\n  export default {\n    data() {\n      return {\n        fileList: [{\n          name: \'food.jpeg\',\n          url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\'\n        }, {\n          name: \'food2.jpeg\',\n          url: \'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100\'\n        }]\n      };\n    },\n    methods: {\n      handleChange(file, fileList) {\n        this.fileList = fileList.slice(-3);\n      }\n    }\n  }\n<\/script>\n')],-1),w=Object(o.createVNode)("h3",{id:"arrastrar-para-cargar-archivo"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#arrastrar-para-cargar-archivo"},"¶"),Object(o.createTextVNode)(" Arrastrar para cargar archivo")],-1),y=Object(o.createVNode)("p",null,"Puede arrastrar el archivo dentro de un área en especifico para cargar el archivo.",-1),C=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="upload-demo"\n  drag\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :on-preview="handlePreview"\n  :on-remove="handleRemove"\n  :file-list="fileList"\n  multiple>\n  <i class="el-icon-upload"></i>\n  <div class="el-upload__text">Suelta tu archivo aquí o <em>haz clic para cargar</em></div>\n  <div slot="tip" class="el-upload__tip">Solo archivos jpg/png con un tamaño menor de 500kb</div>\n</el-upload>\n')],-1),_=Object(o.createVNode)("h3",{id:"carga-normal"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#carga-normal"},"¶"),Object(o.createTextVNode)(" Carga normal")],-1),k=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<el-upload\n  class="upload-demo"\n  ref="upload"\n  action="https://jsonplaceholder.typicode.com/posts/"\n  :auto-upload="false">\n  <el-button slot="trigger" size="small" type="primary">Selecciona un archivo</el-button>\n  <el-button style="margin-left: 10px;" size="small" type="success" @click="submitUpload">Cargar al servidor</el-button>\n  <div slot="tip" class="el-upload__tip">Solo archivos jpg/png con un tamaño menor de 500kb</div>\n</el-upload>\n<script>\n  export default {\n    methods: {\n      submitUpload() {\n        this.$refs.upload.submit();\n      }\n    }\n  }\n<\/script>\n')],-1),L=Object(o.createStaticVNode)('<h3 id="atributos"><a class="header-anchor" href="#atributos">¶</a> Atributos</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>action</td><td>obligatorio, URL de la petición</td><td>string</td><td>—</td><td>—</td></tr><tr><td>headers</td><td>cabeceras de la petición</td><td>object</td><td>—</td><td>—</td></tr><tr><td>multiple</td><td>especifica si se permite subir múltiples archivos</td><td>boolean</td><td>—</td><td>—</td></tr><tr><td>data</td><td>opciones adicionales de la petición</td><td>object</td><td>—</td><td>—</td></tr><tr><td>name</td><td>nombre clave del archivo</td><td>string</td><td>—</td><td>file</td></tr><tr><td>with-credentials</td><td>especifica si enviará cookies</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>show-file-list</td><td>especifica si se debe mostrar la lista de archivos cargados</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>drag</td><td>se especifica si se activará el modo arrastrar y soltar</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>accept</td><td>acepta <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept">tipos de archivos</a>, puede no funcionar cuando <code>thumbnail-mode</code> esta en <code>true</code></td><td>string</td><td>—</td><td>—</td></tr><tr><td>on-preview</td><td><em>hook</em> lanzado al hacer clic en los archivos subidos</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>on-remove</td><td><em>hook</em> lanzado cuando los archivos son eliminados</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-success</td><td><em>hook</em> lanzado cuando los archivos fueron cargados correctamente</td><td>function(response, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-error</td><td><em>hook</em> lanzado cuando han ocurrido algunos errores</td><td>function(err, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-progress</td><td><em>hook</em> lanzado cuando se produce algún progreso</td><td>function(event, file, fileList)</td><td>—</td><td>—</td></tr><tr><td>on-change</td><td><em>hook</em> lanzado cuando el archivo seleccionado se carga correctamente o falla</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>before-upload</td><td><em>hook</em> lanzado antes de que el archivo sea cargado. Si este devuelve <code>true</code> o <code>Promise</code> entonces será rechazado, la carga puede ser cancelada</td><td>function(file)</td><td>—</td><td>—</td></tr><tr><td>before-remove</td><td><em>hook</em> lanzado antes de eliminar un archivo. Los parámetros son el archivo y la lista de archivos. Si se devuelve <code>false</code> o se devuelve una <code>Promise</code> y que luego es rechazada, la eliminación será abortada.</td><td>function(file, fileList)</td><td>—</td><td>—</td></tr><tr><td>thumbnail-mode</td><td>especifica si se mostrará la miniatura</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>file-list</td><td>archivos cargados por defecto, por ejemplo, [{name: &#39;food.jpg&#39;, url: &#39;https://xxx.cdn.com/xxx.jpg&#39;}]</td><td>array</td><td>—</td><td>[]</td></tr><tr><td>list-type</td><td>tipo de lista de archivos</td><td>string</td><td>text/picture/picture-card</td><td>text</td></tr><tr><td>auto-upload</td><td>se especifica si se autocargan archivos</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>http-request</td><td>sobrescribe el comportamiento por defecto de xhr, permitiendo implementar tu propia petición de carga de archivos</td><td>function</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>especifica si se deshabilita la carga de archivos</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>limit</td><td>número máximo de cargas permitidas</td><td>number</td><td>—</td><td>—</td></tr><tr><td>on-exceed</td><td><em>hook</em> lanzado cuando el límite ha sido excedido</td><td>function(files, fileList)</td><td>—</td><td>-</td></tr></tbody></table><h3 id="slot"><a class="header-anchor" href="#slot">¶</a> Slot</h3><table><thead><tr><th>Nombre</th><th>Descripcion</th></tr></thead><tbody><tr><td>trigger</td><td>contenido que desencadena el diálogo de archivo</td></tr><tr><td>tip</td><td>contenido de los tips</td></tr></tbody></table><h3 id="metodos"><a class="header-anchor" href="#metodos">¶</a> Métodos</h3><table><thead><tr><th>Nombre del método</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>clearFiles</td><td>limpia la lista de archivos cargados (este método no esta soportado en el <em>hook</em> <code>before-upload</code>)</td><td>—</td></tr><tr><td>abort</td><td>cancela la petición de carga</td><td>（ file: fileList&#39;s item ）</td></tr><tr><td>submit</td><td>La lista de archivos se sube manualmente</td><td>—</td></tr></tbody></table>',6);var P={name:"component-doc",components:{"element-demo0":function(){const{createTextVNode:e,resolveComponent:t,withCtx:a,createVNode:l,openBlock:d,createBlock:n}=o,i=e("Clic para subir archivo"),c=l("div",{slot:"tip",class:"el-upload__tip"},"Solo archivos jpg/png con un tamaño menor de 500kb",-1);const r={data:()=>({fileList:[{name:"food.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"},{name:"food2.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"}]}),methods:{handleRemove(e,t){console.log(e,t)},handlePreview(e){console.log(e)},handleExceed(e,t){this.$message.warning(`El límite es 3, haz seleccionado ${e.length} archivos esta vez, añade hasta ${e.length+t.length}`)}}};return Object.assign({render:function(e,o){const r=t("el-button"),s=t("el-upload");return d(),n("div",null,[l(s,{class:"upload-demo",action:"https://jsonplaceholder.typicode.com/posts/","on-preview":e.handlePreview,"on-remove":e.handleRemove,multiple:"",limit:3,"on-exceed":e.handleExceed,"file-list":e.fileList},{default:a(()=>[l(r,{size:"small",type:"primary"},{default:a(()=>[i]),_:1}),c]),_:1},8,["on-preview","on-remove","on-exceed","file-list"])])}},r)}(),"element-demo1":function(){const{createVNode:e,openBlock:t,createBlock:a,createCommentVNode:l,resolveComponent:d,withCtx:n}=o,i={key:1,class:"el-icon-plus avatar-uploader-icon"};const c={data:()=>({imageUrl:""}),methods:{handleAvatarSuccess(e,t){this.imageUrl=URL.createObjectURL(t.raw)},beforeAvatarUpload(e){const t="image/jpeg"===e.type,a=e.size/1024/1024<2;return t||this.$message.error("La imagen debe estar en formato JPG!"),a||this.$message.error("La imagen excede los 2MB!"),t&&a}}};return Object.assign({render:function(o,l){const c=d("el-upload");return t(),a("div",null,[e(c,{class:"avatar-uploader",action:"https://jsonplaceholder.typicode.com/posts/","show-file-list":!1,"on-success":o.handleAvatarSuccess,"before-upload":o.beforeAvatarUpload},{default:n(()=>[o.imageUrl?(t(),a("img",{key:0,src:o.imageUrl,class:"avatar"},null,8,["src"])):(t(),a("i",i))]),_:1},8,["on-success","before-upload"])])}},c)}(),"element-demo2":function(){const{createVNode:e,resolveComponent:t,withCtx:a,openBlock:l,createBlock:d}=o,n=e("i",{class:"el-icon-plus"},null,-1);const i={data:()=>({dialogImageUrl:"",dialogVisible:!1}),methods:{handleRemove(e,t){console.log(e,t)},handlePictureCardPreview(e){this.dialogImageUrl=e.url,this.dialogVisible=!0}}};return Object.assign({render:function(o,i){const c=t("el-upload"),r=t("el-dialog");return l(),d("div",null,[e(c,{action:"https://jsonplaceholder.typicode.com/posts/","list-type":"picture-card","on-preview":o.handlePictureCardPreview,"on-remove":o.handleRemove},{default:a(()=>[n]),_:1},8,["on-preview","on-remove"]),e(r,{visible:o.dialogVisible},{default:a(()=>[e("img",{width:"100%",src:o.dialogImageUrl,alt:""},null,8,["src"])]),_:1},8,["visible"])])}},i)}(),"element-demo3":function(){const{createVNode:e,openBlock:t,createBlock:a,createCommentVNode:l,resolveComponent:d,withCtx:n}=o,i=e("i",{slot:"default",class:"el-icon-plus"},null,-1),c={slot:"file","slot-scope":"{file}"},r={class:"el-upload-list__item-actions"},s=e("i",{class:"el-icon-zoom-in"},null,-1),p=e("i",{class:"el-icon-download"},null,-1),u=e("i",{class:"el-icon-delete"},null,-1);const m={data:()=>({dialogImageUrl:"",dialogVisible:!1,disabled:!1}),methods:{handleRemove(e){console.log(e)},handlePictureCardPreview(e){this.dialogImageUrl=e.url,this.dialogVisible=!0},handleDownload(e){console.log(e)}}};return Object.assign({render:function(o,m){const h=d("el-upload"),b=d("el-dialog");return t(),a("div",null,[e(h,{action:"#","list-type":"picture-card","auto-upload":!1},{default:n(()=>[i,e("div",c,[e("img",{class:"el-upload-list__item-thumbnail",src:o.file.url,alt:""},null,8,["src"]),e("span",r,[e("span",{class:"el-upload-list__item-preview",onClick:m[1]||(m[1]=e=>o.handlePictureCardPreview(o.file))},[s]),o.disabled?l("",!0):(t(),a("span",{key:0,class:"el-upload-list__item-delete",onClick:m[2]||(m[2]=e=>o.handleDownload(o.file))},[p])),o.disabled?l("",!0):(t(),a("span",{key:1,class:"el-upload-list__item-delete",onClick:m[3]||(m[3]=e=>o.handleRemove(o.file))},[u]))])])]),_:1}),e(b,{visible:o.dialogVisible},{default:n(()=>[e("img",{width:"100%",src:o.dialogImageUrl,alt:""},null,8,["src"])]),_:1},8,["visible"])])}},m)}(),"element-demo4":function(){const{createTextVNode:e,resolveComponent:t,withCtx:a,createVNode:l,openBlock:d,createBlock:n}=o,i=e("Clic para subir archivo"),c=l("div",{slot:"tip",class:"el-upload__tip"},"Solo archivos jpg/png con un tamaño menor de 500kb",-1);const r={data:()=>({fileList:[{name:"food.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"},{name:"food2.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"}]}),methods:{handleRemove(e,t){console.log(e,t)},handlePreview(e){console.log(e)}}};return Object.assign({render:function(e,o){const r=t("el-button"),s=t("el-upload");return d(),n("div",null,[l(s,{class:"upload-demo",action:"https://jsonplaceholder.typicode.com/posts/","on-preview":e.handlePreview,"on-remove":e.handleRemove,"file-list":e.fileList,"list-type":"picture"},{default:a(()=>[l(r,{size:"small",type:"primary"},{default:a(()=>[i]),_:1}),c]),_:1},8,["on-preview","on-remove","file-list"])])}},r)}(),"element-demo5":function(){const{createTextVNode:e,resolveComponent:t,withCtx:a,createVNode:l,openBlock:d,createBlock:n}=o,i=e("Clic para subir archivo"),c=l("div",{slot:"tip",class:"el-upload__tip"},"Solo archivos jpg/png con un tamaño menor de 500kb",-1);const r={data:()=>({fileList:[{name:"food.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"},{name:"food2.jpeg",url:"https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100"}]}),methods:{handleChange(e,t){this.fileList=t.slice(-3)}}};return Object.assign({render:function(e,o){const r=t("el-button"),s=t("el-upload");return d(),n("div",null,[l(s,{class:"upload-demo",action:"https://jsonplaceholder.typicode.com/posts/","on-change":e.handleChange,"file-list":e.fileList},{default:a(()=>[l(r,{size:"small",type:"primary"},{default:a(()=>[i]),_:1}),c]),_:1},8,["on-change","file-list"])])}},r)}(),"element-demo6":function(){const{createVNode:e,createTextVNode:t,resolveComponent:a,withCtx:l,openBlock:d,createBlock:n}=o,i=e("i",{class:"el-icon-upload"},null,-1),c=e("div",{class:"el-upload__text"},[t("Suelta tu archivo aquí o "),e("em",null,"haz clic para cargar")],-1),r=e("div",{slot:"tip",class:"el-upload__tip"},"Solo archivos jpg/png con un tamaño menor de 500kb",-1);return Object.assign({render:function(t,o){const s=a("el-upload");return d(),n("div",null,[e(s,{class:"upload-demo",drag:"",action:"https://jsonplaceholder.typicode.com/posts/","on-preview":t.handlePreview,"on-remove":t.handleRemove,"file-list":t.fileList,multiple:""},{default:l(()=>[i,c,r]),_:1},8,["on-preview","on-remove","file-list"])])}},{})}(),"element-demo7":function(){const{createTextVNode:e,resolveComponent:t,withCtx:a,createVNode:l,openBlock:d,createBlock:n}=o,i=e("Selecciona un archivo"),c=e("Cargar al servidor"),r=l("div",{slot:"tip",class:"el-upload__tip"},"Solo archivos jpg/png con un tamaño menor de 500kb",-1);const s={methods:{submitUpload(){this.$refs.upload.submit()}}};return Object.assign({render:function(e,o){const s=t("el-button"),p=t("el-upload");return d(),n("div",null,[l(p,{class:"upload-demo",ref:"upload",action:"https://jsonplaceholder.typicode.com/posts/","auto-upload":!1},{default:a(()=>[l(s,{slot:"trigger",size:"small",type:"primary"},{default:a(()=>[i]),_:1}),l(s,{style:{"margin-left":"10px"},size:"small",type:"success",onClick:e.submitUpload},{default:a(()=>[c]),_:1},8,["onClick"]),r]),_:1},512)])}},s)}()},render:function(e,t,a,P,U,z){const T=Object(o.resolveComponent)("element-demo0"),R=Object(o.resolveComponent)("demo-block"),S=Object(o.resolveComponent)("element-demo1"),B=Object(o.resolveComponent)("element-demo2"),q=Object(o.resolveComponent)("element-demo3"),M=Object(o.resolveComponent)("element-demo4"),I=Object(o.resolveComponent)("element-demo5"),$=Object(o.resolveComponent)("element-demo6"),A=Object(o.resolveComponent)("element-demo7");return Object(o.openBlock)(),Object(o.createBlock)("section",l,[d,n,i,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(T)]),highlight:Object(o.withCtx)(()=>[r]),default:Object(o.withCtx)(()=>[c]),_:1}),s,p,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(S)]),highlight:Object(o.withCtx)(()=>[u]),_:1}),m,h,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(B)]),highlight:Object(o.withCtx)(()=>[b]),_:1}),f,g,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(q)]),highlight:Object(o.withCtx)(()=>[v]),_:1}),j,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(M)]),highlight:Object(o.withCtx)(()=>[O]),_:1}),V,x,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(I)]),highlight:Object(o.withCtx)(()=>[N]),_:1}),w,y,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)($)]),highlight:Object(o.withCtx)(()=>[C]),_:1}),_,Object(o.createVNode)(R,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(A)]),highlight:Object(o.withCtx)(()=>[k]),_:1}),L])}};t.default=P}}]);