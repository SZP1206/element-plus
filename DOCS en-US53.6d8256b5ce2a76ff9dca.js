(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{538:function(t,e,d){"use strict";d.r(e);var r=d(0);const a={class:"content element-doc"},n=Object(r.createVNode)("h2",{id:"timepicker"},[Object(r.createVNode)("a",{class:"header-anchor",href:"#timepicker"},"¶"),Object(r.createTextVNode)(" TimePicker")],-1),o=Object(r.createVNode)("p",null,"Use Time Picker for time input.",-1),c=Object(r.createVNode)("h3",{id:"arbitrary-time-picker"},[Object(r.createVNode)("a",{class:"header-anchor",href:"#arbitrary-time-picker"},"¶"),Object(r.createTextVNode)(" Arbitrary time picker")],-1),l=Object(r.createVNode)("p",null,"Can pick an arbitrary time.",-1),i=Object(r.createVNode)("div",null,[Object(r.createVNode)("p",null,[Object(r.createTextVNode)("Use "),Object(r.createVNode)("code",null,"el-time-picker"),Object(r.createTextVNode)(" label, and you can limit the time range by specifying "),Object(r.createVNode)("code",null,"selectableRange"),Object(r.createTextVNode)(". By default, you can scroll the mouse wheel to pick time, alternatively you can use the control arrows when the "),Object(r.createVNode)("code",null,"arrow-control"),Object(r.createTextVNode)(" attribute is set.")])],-1),s=Object(r.createVNode)("pre",null,[Object(r.createVNode)("code",{class:"html"},'<template>\n  <el-time-picker\n    v-model="value1"\n    :picker-options="{\n      selectableRange: \'18:30:00 - 20:30:00\'\n    }"\n    placeholder="Arbitrary time">\n  </el-time-picker>\n  <el-time-picker\n    arrow-control\n    v-model="value2"\n    :picker-options="{\n      selectableRange: \'18:30:00 - 20:30:00\'\n    }"\n    placeholder="Arbitrary time">\n  </el-time-picker>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        value1: new Date(2016, 9, 10, 18, 40),\n        value2: new Date(2016, 9, 10, 18, 40)\n      };\n    }\n  }\n<\/script>\n')],-1),h=Object(r.createVNode)("h3",{id:"arbitrary-time-range"},[Object(r.createVNode)("a",{class:"header-anchor",href:"#arbitrary-time-range"},"¶"),Object(r.createTextVNode)(" Arbitrary time range")],-1),m=Object(r.createVNode)("p",null,"Can pick an arbitrary time range.",-1),p=Object(r.createVNode)("div",null,[Object(r.createVNode)("p",null,[Object(r.createTextVNode)("We can pick a time range by adding an "),Object(r.createVNode)("code",null,"is-range"),Object(r.createTextVNode)(" attribute. Also, "),Object(r.createVNode)("code",null,"arrow-control"),Object(r.createTextVNode)(" is supported in range mode.")])],-1),u=Object(r.createVNode)("pre",null,[Object(r.createVNode)("code",{class:"html"},'<template>\n  <el-time-picker\n    is-range\n    v-model="value1"\n    range-separator="To"\n    start-placeholder="Start time"\n    end-placeholder="End time">\n  </el-time-picker>\n  <el-time-picker\n    is-range\n    arrow-control\n    v-model="value2"\n    range-separator="To"\n    start-placeholder="Start time"\n    end-placeholder="End time">\n  </el-time-picker>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        value1: [new Date(2016, 9, 10, 8, 40), new Date(2016, 9, 10, 9, 40)],\n        value2: [new Date(2016, 9, 10, 8, 40), new Date(2016, 9, 10, 9, 40)]\n      };\n    }\n  }\n<\/script>\n')],-1),b=Object(r.createStaticVNode)('<h3 id="attributes"><a class="header-anchor" href="#attributes">¶</a> Attributes</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>value / v-model</td><td>binding value</td><td>date(TimePicker) / string(TimeSelect)</td><td>-</td><td>-</td></tr><tr><td>readonly</td><td>whether TimePicker is read only</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>whether TimePicker is disabled</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>editable</td><td>whether the input is editable</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>clearable</td><td>whether to show clear button</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>size</td><td>size of Input</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>placeholder</td><td>placeholder in non-range mode</td><td>string</td><td>—</td><td>—</td></tr><tr><td>start-placeholder</td><td>placeholder for the start time in range mode</td><td>string</td><td>—</td><td>—</td></tr><tr><td>end-placeholder</td><td>placeholder for the end time in range mode</td><td>string</td><td>—</td><td>—</td></tr><tr><td>is-range</td><td>whether to pick a time range, only works with <code>&lt;el-time-picker&gt;</code></td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>arrow-control</td><td>whether to pick time using arrow buttons, only works with <code>&lt;el-time-picker&gt;</code></td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>align</td><td>alignment</td><td>left / center / right</td><td>left</td><td></td></tr><tr><td>popper-class</td><td>custom class name for TimePicker&#39;s dropdown</td><td>string</td><td>—</td><td>—</td></tr><tr><td>picker-options</td><td>additional options, check the table below</td><td>object</td><td>—</td><td>{}</td></tr><tr><td>range-separator</td><td>range separator</td><td>string</td><td>-</td><td>&#39;-&#39;</td></tr><tr><td>default-value</td><td>optional, default date of the calendar</td><td>Date for TimePicker, string for TimeSelect</td><td>anything accepted by <code>new Date()</code> for TimePicker, selectable value for TimeSelect</td><td>—</td></tr><tr><td>value-format</td><td>optional, only for TimePicker, format of binding value. If not specified, the binding value will be a Date object</td><td>string</td><td>see <a href="#/en-US/component/date-picker#date-formats">date formats</a></td><td>—</td></tr><tr><td>name</td><td>same as <code>name</code> in native input</td><td>string</td><td>—</td><td>—</td></tr><tr><td>prefix-icon</td><td>Custom prefix icon class</td><td>string</td><td>—</td><td>el-icon-time</td></tr><tr><td>clear-icon</td><td>Custom clear icon class</td><td>string</td><td>—</td><td>el-icon-circle-close</td></tr></tbody></table><h3 id="time-picker-options"><a class="header-anchor" href="#time-picker-options">¶</a> Time Picker Options</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>selectableRange</td><td>available time range, e.g.<code>&#39;18:30:00 - 20:30:00&#39;</code>or<code>[&#39;09:30:00 - 12:00:00&#39;, &#39;14:30:00 - 18:30:00&#39;]</code></td><td>string / array</td><td>—</td><td>—</td></tr><tr><td>format</td><td>format of the picker</td><td>string</td><td>hour <code>HH</code>, minute <code>mm</code>, second <code>ss</code>, AM/PM <code>A</code></td><td>HH:mm:ss</td></tr></tbody></table><h3 id="events"><a class="header-anchor" href="#events">¶</a> Events</h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>change</td><td>triggers when user confirms the value</td><td>component&#39;s binding value</td></tr><tr><td>blur</td><td>triggers when Input blurs</td><td>component instance</td></tr><tr><td>focus</td><td>triggers when Input focuses</td><td>component instance</td></tr></tbody></table><h3 id="methods"><a class="header-anchor" href="#methods">¶</a> Methods</h3><table><thead><tr><th>Method</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>focus</td><td>focus the Input component</td><td>-</td></tr></tbody></table>',8);var g={name:"component-doc",components:{"element-demo0":function(){const{resolveComponent:t,createVNode:e,openBlock:d,createBlock:a}=r;const n={data:()=>({value1:new Date(2016,9,10,18,40),value2:new Date(2016,9,10,18,40)})};return Object.assign({render:function(r,n){const o=t("el-time-picker");return d(),a("div",null,[e(o,{modelValue:r.value1,"onUpdate:modelValue":n[1]||(n[1]=t=>r.value1=t),"picker-options":{selectableRange:"18:30:00 - 20:30:00"},placeholder:"Arbitrary time"},null,8,["modelValue"]),e(o,{"arrow-control":"",modelValue:r.value2,"onUpdate:modelValue":n[2]||(n[2]=t=>r.value2=t),"picker-options":{selectableRange:"18:30:00 - 20:30:00"},placeholder:"Arbitrary time"},null,8,["modelValue"])])}},n)}(),"element-demo1":function(){const{resolveComponent:t,createVNode:e,openBlock:d,createBlock:a}=r;const n={data:()=>({value1:[new Date(2016,9,10,8,40),new Date(2016,9,10,9,40)],value2:[new Date(2016,9,10,8,40),new Date(2016,9,10,9,40)]})};return Object.assign({render:function(r,n){const o=t("el-time-picker");return d(),a("div",null,[e(o,{"is-range":"",modelValue:r.value1,"onUpdate:modelValue":n[1]||(n[1]=t=>r.value1=t),"range-separator":"To","start-placeholder":"Start time","end-placeholder":"End time"},null,8,["modelValue"]),e(o,{"is-range":"","arrow-control":"",modelValue:r.value2,"onUpdate:modelValue":n[2]||(n[2]=t=>r.value2=t),"range-separator":"To","start-placeholder":"Start time","end-placeholder":"End time"},null,8,["modelValue"])])}},n)}()},render:function(t,e,d,g,f,k){const w=Object(r.resolveComponent)("element-demo0"),V=Object(r.resolveComponent)("demo-block"),j=Object(r.resolveComponent)("element-demo1");return Object(r.openBlock)(),Object(r.createBlock)("section",a,[n,o,c,l,Object(r.createVNode)(V,null,{source:Object(r.withCtx)(()=>[Object(r.createVNode)(w)]),highlight:Object(r.withCtx)(()=>[s]),default:Object(r.withCtx)(()=>[i]),_:1}),h,m,Object(r.createVNode)(V,null,{source:Object(r.withCtx)(()=>[Object(r.createVNode)(j)]),highlight:Object(r.withCtx)(()=>[u]),default:Object(r.withCtx)(()=>[p]),_:1}),b])}};e.default=g}}]);