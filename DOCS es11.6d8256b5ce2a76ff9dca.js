(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{558:function(e,t,c){"use strict";c.r(t);var o=c(0);const d={class:"content element-doc"},a=Object(o.createVNode)("h2",{id:"checkbox"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#checkbox"},"¶"),Object(o.createTextVNode)(" Checkbox")],-1),l=Object(o.createVNode)("p",null,"Un grupo de opciones para manejar múltiples elecciones.",-1),n=Object(o.createVNode)("h3",{id:"uso-basico"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#uso-basico"},"¶"),Object(o.createTextVNode)(" Uso básico")],-1),r=Object(o.createVNode)("p",null,"Checkbox puede ser usado para alternar entre dos estados.",-1),i=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Define "),Object(o.createVNode)("code",null,"v-model"),Object(o.createTextVNode)("(enlaza la variable) en "),Object(o.createVNode)("code",null,"el-checkbox"),Object(o.createTextVNode)(". El valor por defecto es un "),Object(o.createVNode)("code",null,"Boolean"),Object(o.createTextVNode)(" para un "),Object(o.createVNode)("code",null,"checkbox"),Object(o.createTextVNode)(", y se convierte en "),Object(o.createVNode)("code",null,"true"),Object(o.createTextVNode)(" cuando este es seleccionado. El contenido dentro del tag "),Object(o.createVNode)("code",null,"el-checkbox"),Object(o.createTextVNode)(" se convierte en la descripción al costado del botón del checkbox.")])],-1),b=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<template>\n  \x3c!-- `checked` debe ser true o false --\x3e\n  <el-checkbox v-model="checked">Opción</el-checkbox>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        checked: true\n      };\n    }\n  };\n<\/script>\n')],-1),h=Object(o.createVNode)("h3",{id:"estado-deshabilitado"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#estado-deshabilitado"},"¶"),Object(o.createTextVNode)(" Estado Deshabilitado")],-1),s=Object(o.createVNode)("p",null,"Estado deshabilitado para el checkbox.",-1),u=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Setear el atributo "),Object(o.createVNode)("code",null,"disabled"),Object(o.createTextVNode)(".")])],-1),p=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<template>\n  <el-checkbox v-model="checked1" disabled>Opción</el-checkbox>\n  <el-checkbox v-model="checked2" disabled>Opción</el-checkbox>\n</template>\n<script>\n  export default {\n    data() {\n      return {\n        checked1: false,\n        checked2: true\n      };\n    }\n  };\n<\/script>\n')],-1),m=Object(o.createVNode)("h3",{id:"grupo-de-checkboxes"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#grupo-de-checkboxes"},"¶"),Object(o.createTextVNode)(" Grupo de Checkboxes")],-1),k=Object(o.createVNode)("p",null,"Es usado por múltiples checkboxes los cuales están enlazados a un grupo, indica si una opción está seleccionada verificando si esta está marcada.",-1),x=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("El elemento "),Object(o.createVNode)("code",null,"checkbox-group"),Object(o.createTextVNode)(" puede manejar múltiples checkboxes en un grupo usando "),Object(o.createVNode)("code",null,"v-model"),Object(o.createTextVNode)(" el cuál está enlazado a un "),Object(o.createVNode)("code",null,"Array"),Object(o.createTextVNode)(". Dentro del elemento "),Object(o.createVNode)("code",null,"el-checkbox"),Object(o.createTextVNode)(", "),Object(o.createVNode)("code",null,"label"),Object(o.createTextVNode)(" es el valor del checkbox. Si en ese tag no hay contenido anidado, "),Object(o.createVNode)("code",null,"label"),Object(o.createTextVNode)(" va a ser mostrado como la descripción al lado del botón del checkbox. "),Object(o.createVNode)("code",null,"label"),Object(o.createTextVNode)(" también se corresponde con los valores del array. Es seleccionado si el valor especificado existe en el array y viceversa.")])],-1),O=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<template>\n  <el-checkbox-group v-model="checkList">\n    <el-checkbox label="Opción A"></el-checkbox>\n    <el-checkbox label="Opción B"></el-checkbox>\n    <el-checkbox label="Opción C"></el-checkbox>\n    <el-checkbox label="disabled" disabled></el-checkbox>\n    <el-checkbox label="Seleccionado y deshabilitado" disabled></el-checkbox>\n  </el-checkbox-group>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        checkList: [\'Seleccionado y deshabilitado\',\'Opción A\']\n      };\n    }\n  };\n<\/script>\n')],-1),V=Object(o.createVNode)("h3",{id:"indeterminado"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#indeterminado"},"¶"),Object(o.createTextVNode)(" Indeterminado")],-1),j=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("La propiedad "),Object(o.createVNode)("code",null,"indeterminate"),Object(o.createTextVNode)(" puede ser usada para generar el efecto de marcar todos (check all).")],-1),g=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<template>\n  <el-checkbox :indeterminate="isIndeterminate" v-model="checkAll" @change="handleCheckAllChange">Marcar todos</el-checkbox>\n  <div style="margin: 15px 0;"></div>\n  <el-checkbox-group v-model="checkedCities" @change="handleCheckedCitiesChange">\n    <el-checkbox v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox>\n  </el-checkbox-group>\n</template>\n<script>\n  const cityOptions = [\'Shanghai\', \'Beijing\', \'Guangzhou\', \'Shenzhen\'];\n  export default {\n    data() {\n      return {\n        checkAll: false,\n        checkedCities: [\'Shanghai\', \'Beijing\'],\n        cities: cityOptions,\n        isIndeterminate: true\n      };\n    },\n    methods: {\n      handleCheckAllChange(val) {\n        this.checkedCities = val ? cityOptions : [];\n        this.isIndeterminate = false;\n      },\n      handleCheckedCitiesChange(value) {\n        let checkedCount = value.length;\n        this.checkAll = checkedCount === this.cities.length;\n        this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;\n      }\n    }\n  };\n<\/script>\n')],-1),N=Object(o.createVNode)("h3",{id:"cantidad-minima-maxima-de-elementos-seleccionados"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#cantidad-minima-maxima-de-elementos-seleccionados"},"¶"),Object(o.createTextVNode)(" Cantidad Mínima / Máxima de elementos seleccionados")],-1),v=Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Las propiedades "),Object(o.createVNode)("code",null,"min"),Object(o.createTextVNode)(" y "),Object(o.createVNode)("code",null,"max"),Object(o.createTextVNode)(" pueden limitar la cantidad de elementos seleccionados.")],-1),f=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},"<template>\n  <el-checkbox-group \n    v-model=\"checkedCities\"\n    :min=\"1\"\n    :max=\"2\">\n    <el-checkbox v-for=\"city in cities\" :label=\"city\" :key=\"city\">{{city}}</el-checkbox>\n  </el-checkbox-group>\n</template>\n<script>\n  const cityOptions = ['Shanghai', 'Beijing', 'Guangzhou', 'Shenzhen'];\n  export default {\n    data() {\n      return {\n        checkedCities: ['Shanghai', 'Beijing'],\n        cities: cityOptions\n      };\n    }\n  };\n<\/script>\n")],-1),C=Object(o.createVNode)("h3",{id:"estilo-tipo-boton"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#estilo-tipo-boton"},"¶"),Object(o.createTextVNode)(" Estilo tipo Botón")],-1),y=Object(o.createVNode)("p",null,"Checkbox con estilo tipo Botón.",-1),T=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("Sólo debe cambiar el elemento "),Object(o.createVNode)("code",null,"el-checkbox"),Object(o.createTextVNode)(" por el elemento "),Object(o.createVNode)("code",null,"el-checkbox-button"),Object(o.createTextVNode)(". También proveemos el atributo "),Object(o.createVNode)("code",null,"size"),Object(o.createTextVNode)(".")])],-1),z=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<template>\n  <div>\n    <el-checkbox-group v-model="checkboxGroup1">\n      <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\n    </el-checkbox-group>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox-group v-model="checkboxGroup2" size="medium">\n      <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\n    </el-checkbox-group>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox-group v-model="checkboxGroup3" size="small">\n      <el-checkbox-button v-for="city in cities" :label="city" :disabled="city === \'Beijing\'" :key="city">{{city}}</el-checkbox-button>\n    </el-checkbox-group>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox-group v-model="checkboxGroup4" size="mini" disabled>\n      <el-checkbox-button v-for="city in cities" :label="city" :key="city">{{city}}</el-checkbox-button>\n    </el-checkbox-group>\n  </div>\n</template>\n<script>\n  const cityOptions = [\'Shanghai\', \'Beijing\', \'Guangzhou\', \'Shenzhen\'];\n\n  export default {\n    data () {\n      return {\n        checkboxGroup1: [\'Shanghai\'],\n        checkboxGroup2: [\'Shanghai\'],\n        checkboxGroup3: [\'Shanghai\'],\n        checkboxGroup4: [\'Shanghai\'],\n        cities: cityOptions\n      };\n    }\n  }\n<\/script>\n')],-1),G=Object(o.createVNode)("h3",{id:"con-bordes"},[Object(o.createVNode)("a",{class:"header-anchor",href:"#con-bordes"},"¶"),Object(o.createTextVNode)(" Con bordes")],-1),S=Object(o.createVNode)("div",null,[Object(o.createVNode)("p",null,[Object(o.createTextVNode)("El atributo "),Object(o.createVNode)("code",null,"border"),Object(o.createTextVNode)(" agrega un borde a los Checkboxes.")])],-1),B=Object(o.createVNode)("pre",null,[Object(o.createVNode)("code",{class:"html"},'<template>\n  <div>\n    <el-checkbox v-model="checked1" label="Opción1" border></el-checkbox>\n    <el-checkbox v-model="checked2" label="Opción2" border></el-checkbox>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox v-model="checked3" label="Opción1" border size="medium"></el-checkbox>\n    <el-checkbox v-model="checked4" label="Opción2" border size="medium"></el-checkbox>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox-group v-model="checkboxGroup1" size="small">\n      <el-checkbox label="Opción1" border></el-checkbox>\n      <el-checkbox label="Opción2" border disabled></el-checkbox>\n    </el-checkbox-group>\n  </div>\n  <div style="margin-top: 20px">\n    <el-checkbox-group v-model="checkboxGroup2" size="mini" disabled>\n      <el-checkbox label="Opción1" border></el-checkbox>\n      <el-checkbox label="Opción2" border></el-checkbox>\n    </el-checkbox-group>\n  </div>\n</template>\n\n<script>\n  export default {\n    data () {\n      return {\n        checked1: true,\n        checked2: false,\n        checked3: false,\n        checked4: true,\n        checkboxGroup1: [],\n        checkboxGroup2: []\n      };\n    }\n  }\n<\/script>\n')],-1),w=Object(o.createStaticVNode)('<h3 id="atributos-de-checkbox"><a class="header-anchor" href="#atributos-de-checkbox">¶</a> Atributos de Checkbox</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>value / v-model</td><td>valor enlazado</td><td>string / number / boolean</td><td>—</td><td>—</td></tr><tr><td>label</td><td>valor del Checkbox si es usado dentro de un tag <code>checkbox-group</code></td><td>string / number / boolean</td><td>—</td><td>—</td></tr><tr><td>true-label</td><td>valor del Checkbox si está marcado</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>false-label</td><td>valor del Checkbox si no está marcado</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>especifica si el Checkbox está deshabilitado</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>border</td><td>especifica si agrega un borde alrededor del Checkbox</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>size</td><td>tamaño del Checkbox, sólo funciona si <code>border</code> es true</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>name</td><td>atributo <code>name</code> nativo</td><td>string</td><td>—</td><td>—</td></tr><tr><td>checked</td><td>especifica si el Checkbox está marcado</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>indeterminate</td><td>similar a <code>indeterminate</code> en el checkbox nativo</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table><h3 id="eventos-de-checkbox"><a class="header-anchor" href="#eventos-de-checkbox">¶</a> Eventos de Checkbox</h3><table><thead><tr><th>Nombre</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>change</td><td>se ejecuta cuando el valor enlazado cambia</td><td>el valor actualizado</td></tr></tbody></table><h3 id="atributos-de-checkbox-group"><a class="header-anchor" href="#atributos-de-checkbox-group">¶</a> Atributos de Checkbox-group</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por Defecto</th></tr></thead><tbody><tr><td>value / v-model</td><td>valor enlazado</td><td>array</td><td>—</td><td>—</td></tr><tr><td>size</td><td>tamaño de los checkboxes de tipo botón o los checkboxes con border</td><td>string</td><td>medium / small / mini</td><td>—</td></tr><tr><td>disabled</td><td>especifica si los checkboxes anidados están deshabilitados</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>min</td><td>cantidad mínima de checkboxes que deben ser marcados</td><td>number</td><td>—</td><td>—</td></tr><tr><td>max</td><td>cantidad máxima de checkboxes que pueden ser marcados</td><td>number</td><td>—</td><td>—</td></tr><tr><td>text-color</td><td>color de fuente cuando el botón está activo</td><td>string</td><td>—</td><td>#ffffff</td></tr><tr><td>fill</td><td>color de border y de fondo cuando el botón está activo</td><td>string</td><td>—</td><td>#409EFF</td></tr></tbody></table><h3 id="eventos-de-checkbox-group"><a class="header-anchor" href="#eventos-de-checkbox-group">¶</a> Eventos de Checkbox-group</h3><table><thead><tr><th>Nombre de Evento</th><th>Descripción</th><th>Parametros</th></tr></thead><tbody><tr><td>change</td><td>se ejecuta cuando el valor enlazado cambia</td><td>el valor actualizado</td></tr></tbody></table><h3 id="atributos-de-checkbox-button"><a class="header-anchor" href="#atributos-de-checkbox-button">¶</a> Atributos de Checkbox-button</h3><table><thead><tr><th>Atributo</th><th>Descripción</th><th>Tipo</th><th>Valores aceptados</th><th>Por defecto</th></tr></thead><tbody><tr><td>label</td><td>valor del checkbox cuando es usado dentro de un <code>checkbox-group</code></td><td>string / number / boolean</td><td>—</td><td>—</td></tr><tr><td>true-label</td><td>valor del checkbox si este está marcado</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>false-label</td><td>valor del checkbox si este no está marcado</td><td>string / number</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>especifica si el checkbox está deshabilitado</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>name</td><td>atributo &#39;name&#39; del checbox nativo</td><td>string</td><td>—</td><td>—</td></tr><tr><td>checked</td><td>si el checkbox está marcado</td><td>boolean</td><td>—</td><td>false</td></tr></tbody></table>',10);var _={name:"component-doc",components:{"element-demo0":function(){const{createTextVNode:e,resolveComponent:t,withCtx:c,createVNode:d,openBlock:a,createBlock:l}=o,n=e("Opción");const r={data:()=>({checked:!0})};return Object.assign({render:function(e,o){const r=t("el-checkbox");return a(),l("div",null,[d(r,{modelValue:e.checked,"onUpdate:modelValue":o[1]||(o[1]=t=>e.checked=t)},{default:c(()=>[n]),_:1},8,["modelValue"])])}},r)}(),"element-demo1":function(){const{createTextVNode:e,resolveComponent:t,withCtx:c,createVNode:d,openBlock:a,createBlock:l}=o,n=e("Opción"),r=e("Opción");const i={data:()=>({checked1:!1,checked2:!0})};return Object.assign({render:function(e,o){const i=t("el-checkbox");return a(),l("div",null,[d(i,{modelValue:e.checked1,"onUpdate:modelValue":o[1]||(o[1]=t=>e.checked1=t),disabled:""},{default:c(()=>[n]),_:1},8,["modelValue"]),d(i,{modelValue:e.checked2,"onUpdate:modelValue":o[2]||(o[2]=t=>e.checked2=t),disabled:""},{default:c(()=>[r]),_:1},8,["modelValue"])])}},i)}(),"element-demo2":function(){const{resolveComponent:e,createVNode:t,withCtx:c,openBlock:d,createBlock:a}=o;const l={data:()=>({checkList:["Seleccionado y deshabilitado","Opción A"]})};return Object.assign({render:function(o,l){const n=e("el-checkbox"),r=e("el-checkbox-group");return d(),a("div",null,[t(r,{modelValue:o.checkList,"onUpdate:modelValue":l[1]||(l[1]=e=>o.checkList=e)},{default:c(()=>[t(n,{label:"Opción A"}),t(n,{label:"Opción B"}),t(n,{label:"Opción C"}),t(n,{label:"disabled",disabled:""}),t(n,{label:"Seleccionado y deshabilitado",disabled:""})]),_:1},8,["modelValue"])])}},l)}(),"element-demo3":function(){const{createTextVNode:e,resolveComponent:t,withCtx:c,createVNode:d,renderList:a,Fragment:l,openBlock:n,createBlock:r,toDisplayString:i}=o,b=e("Marcar todos"),h=d("div",{style:{margin:"15px 0"}},null,-1);const s=["Shanghai","Beijing","Guangzhou","Shenzhen"],u={data:()=>({checkAll:!1,checkedCities:["Shanghai","Beijing"],cities:s,isIndeterminate:!0}),methods:{handleCheckAllChange(e){this.checkedCities=e?s:[],this.isIndeterminate=!1},handleCheckedCitiesChange(e){let t=e.length;this.checkAll=t===this.cities.length,this.isIndeterminate=t>0&&t<this.cities.length}}};return Object.assign({render:function(o,s){const u=t("el-checkbox"),p=t("el-checkbox-group");return n(),r("div",null,[d(u,{indeterminate:o.isIndeterminate,modelValue:o.checkAll,"onUpdate:modelValue":s[1]||(s[1]=e=>o.checkAll=e),onChange:o.handleCheckAllChange},{default:c(()=>[b]),_:1},8,["indeterminate","modelValue","onChange"]),h,d(p,{modelValue:o.checkedCities,"onUpdate:modelValue":s[2]||(s[2]=e=>o.checkedCities=e),onChange:o.handleCheckedCitiesChange},{default:c(()=>[(n(!0),r(l,null,a(o.cities,t=>(n(),r(u,{label:t,key:t},{default:c(()=>[e(i(t),1)]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue","onChange"])])}},u)}(),"element-demo4":function(){const{renderList:e,Fragment:t,openBlock:c,createBlock:d,toDisplayString:a,createTextVNode:l,resolveComponent:n,withCtx:r,createVNode:i}=o;const b=["Shanghai","Beijing","Guangzhou","Shenzhen"],h={data:()=>({checkedCities:["Shanghai","Beijing"],cities:b})};return Object.assign({render:function(o,b){const h=n("el-checkbox"),s=n("el-checkbox-group");return c(),d("div",null,[i(s,{modelValue:o.checkedCities,"onUpdate:modelValue":b[1]||(b[1]=e=>o.checkedCities=e),min:1,max:2},{default:r(()=>[(c(!0),d(t,null,e(o.cities,e=>(c(),d(h,{label:e,key:e},{default:r(()=>[l(a(e),1)]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue"])])}},h)}(),"element-demo5":function(){const{renderList:e,Fragment:t,openBlock:c,createBlock:d,toDisplayString:a,createTextVNode:l,resolveComponent:n,withCtx:r,createVNode:i}=o,b={style:{"margin-top":"20px"}},h={style:{"margin-top":"20px"}},s={style:{"margin-top":"20px"}};const u=["Shanghai","Beijing","Guangzhou","Shenzhen"],p={data:()=>({checkboxGroup1:["Shanghai"],checkboxGroup2:["Shanghai"],checkboxGroup3:["Shanghai"],checkboxGroup4:["Shanghai"],cities:u})};return Object.assign({render:function(o,u){const p=n("el-checkbox-button"),m=n("el-checkbox-group");return c(),d("div",null,[i("div",null,[i(m,{modelValue:o.checkboxGroup1,"onUpdate:modelValue":u[1]||(u[1]=e=>o.checkboxGroup1=e)},{default:r(()=>[(c(!0),d(t,null,e(o.cities,e=>(c(),d(p,{label:e,key:e},{default:r(()=>[l(a(e),1)]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue"])]),i("div",b,[i(m,{modelValue:o.checkboxGroup2,"onUpdate:modelValue":u[2]||(u[2]=e=>o.checkboxGroup2=e),size:"medium"},{default:r(()=>[(c(!0),d(t,null,e(o.cities,e=>(c(),d(p,{label:e,key:e},{default:r(()=>[l(a(e),1)]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue"])]),i("div",h,[i(m,{modelValue:o.checkboxGroup3,"onUpdate:modelValue":u[3]||(u[3]=e=>o.checkboxGroup3=e),size:"small"},{default:r(()=>[(c(!0),d(t,null,e(o.cities,e=>(c(),d(p,{label:e,disabled:"Beijing"===e,key:e},{default:r(()=>[l(a(e),1)]),_:2},1032,["label","disabled"]))),128))]),_:1},8,["modelValue"])]),i("div",s,[i(m,{modelValue:o.checkboxGroup4,"onUpdate:modelValue":u[4]||(u[4]=e=>o.checkboxGroup4=e),size:"mini",disabled:""},{default:r(()=>[(c(!0),d(t,null,e(o.cities,e=>(c(),d(p,{label:e,key:e},{default:r(()=>[l(a(e),1)]),_:2},1032,["label"]))),128))]),_:1},8,["modelValue"])])])}},p)}(),"element-demo6":function(){const{resolveComponent:e,createVNode:t,withCtx:c,openBlock:d,createBlock:a}=o,l={style:{"margin-top":"20px"}},n={style:{"margin-top":"20px"}},r={style:{"margin-top":"20px"}};const i={data:()=>({checked1:!0,checked2:!1,checked3:!1,checked4:!0,checkboxGroup1:[],checkboxGroup2:[]})};return Object.assign({render:function(o,i){const b=e("el-checkbox"),h=e("el-checkbox-group");return d(),a("div",null,[t("div",null,[t(b,{modelValue:o.checked1,"onUpdate:modelValue":i[1]||(i[1]=e=>o.checked1=e),label:"Opción1",border:""},null,8,["modelValue"]),t(b,{modelValue:o.checked2,"onUpdate:modelValue":i[2]||(i[2]=e=>o.checked2=e),label:"Opción2",border:""},null,8,["modelValue"])]),t("div",l,[t(b,{modelValue:o.checked3,"onUpdate:modelValue":i[3]||(i[3]=e=>o.checked3=e),label:"Opción1",border:"",size:"medium"},null,8,["modelValue"]),t(b,{modelValue:o.checked4,"onUpdate:modelValue":i[4]||(i[4]=e=>o.checked4=e),label:"Opción2",border:"",size:"medium"},null,8,["modelValue"])]),t("div",n,[t(h,{modelValue:o.checkboxGroup1,"onUpdate:modelValue":i[5]||(i[5]=e=>o.checkboxGroup1=e),size:"small"},{default:c(()=>[t(b,{label:"Opción1",border:""}),t(b,{label:"Opción2",border:"",disabled:""})]),_:1},8,["modelValue"])]),t("div",r,[t(h,{modelValue:o.checkboxGroup2,"onUpdate:modelValue":i[6]||(i[6]=e=>o.checkboxGroup2=e),size:"mini",disabled:""},{default:c(()=>[t(b,{label:"Opción1",border:""}),t(b,{label:"Opción2",border:""})]),_:1},8,["modelValue"])])])}},i)}()},render:function(e,t,c,_,A,U){const E=Object(o.resolveComponent)("element-demo0"),D=Object(o.resolveComponent)("demo-block"),L=Object(o.resolveComponent)("element-demo1"),I=Object(o.resolveComponent)("element-demo2"),F=Object(o.resolveComponent)("element-demo3"),P=Object(o.resolveComponent)("element-demo4"),M=Object(o.resolveComponent)("element-demo5"),q=Object(o.resolveComponent)("element-demo6");return Object(o.openBlock)(),Object(o.createBlock)("section",d,[a,l,n,r,Object(o.createVNode)(D,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(E)]),highlight:Object(o.withCtx)(()=>[b]),default:Object(o.withCtx)(()=>[i]),_:1}),h,s,Object(o.createVNode)(D,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(L)]),highlight:Object(o.withCtx)(()=>[p]),default:Object(o.withCtx)(()=>[u]),_:1}),m,k,Object(o.createVNode)(D,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(I)]),highlight:Object(o.withCtx)(()=>[O]),default:Object(o.withCtx)(()=>[x]),_:1}),V,j,Object(o.createVNode)(D,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(F)]),highlight:Object(o.withCtx)(()=>[g]),_:1}),N,v,Object(o.createVNode)(D,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(P)]),highlight:Object(o.withCtx)(()=>[f]),_:1}),C,y,Object(o.createVNode)(D,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(M)]),highlight:Object(o.withCtx)(()=>[z]),default:Object(o.withCtx)(()=>[T]),_:1}),G,Object(o.createVNode)(D,null,{source:Object(o.withCtx)(()=>[Object(o.createVNode)(q)]),highlight:Object(o.withCtx)(()=>[B]),default:Object(o.withCtx)(()=>[S]),_:1}),w])}};t.default=_}}]);