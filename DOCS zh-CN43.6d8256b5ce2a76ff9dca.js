(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{666:function(e,s,n){"use strict";n.r(s);var a=n(0);const u={class:"content element-doc"},p=Object(a.createStaticVNode)('<h2 id="kuai-su-shang-shou"><a class="header-anchor" href="#kuai-su-shang-shou">¶</a> 快速上手</h2><p>本节将介绍如何在项目中使用 Element。</p><h3 id="shi-yong-vue-cli-4.5"><a class="header-anchor" href="#shi-yong-vue-cli-4.5">¶</a> 使用 vue-cli@4.5</h3><p>我们为新版的 vue-cli 准备了相应的 <a href="https://github.com/element-plus/vue-cli-plugin-element-plus">Element Plus 插件</a>，你可以用它们快速地搭建一个基于 Element Plus 的项目。</p><h3 id="shi-yong-starter-kit"><a class="header-anchor" href="#shi-yong-starter-kit">¶</a> 使用 Starter Kit</h3><p>我们提供了通用的<a href="https://github.com/element-plus/element-plus-starter">项目模板</a>，你可以直接使用，另外我们还提供了 Vite <a href="https://github.com/element-plus/element-plus-vite-starter">模板</a>。对于 Laravel 用户，我们也准备了相应的<a href="https://github.com/element-plus/element-plus-in-laravel-starter">模板</a>，同样可以直接下载使用。</p><p>如果不希望使用我们提供的模板，请继续阅读。</p><h3 id="yin-ru-element-plus"><a class="header-anchor" href="#yin-ru-element-plus">¶</a> 引入 Element Plus</h3><p>你可以引入整个 Element Plus，或是根据需要仅引入部分组件。我们先介绍如何引入完整的 Element。</p><h4 id="wan-zheng-yin-ru"><a class="header-anchor" href="#wan-zheng-yin-ru">¶</a> 完整引入</h4><p>在 main.js 中写入以下内容：</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> { createApp, Vue } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> ElementPlus <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;element-plus/lib/theme-chalk/index.css&#39;</span>;\n<span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;./App.vue&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = createApp(App)\napp.use(ElementPlus)\napp.mount(<span class="hljs-string">&#39;#app&#39;</span>)\n</code></pre><p>以上代码便完成了 Element Plus 的引入。需要注意的是，样式文件需要单独引入。</p><h4 id="an-xu-yin-ru"><a class="header-anchor" href="#an-xu-yin-ru">¶</a> 按需引入</h4><p>借助 <a href="https://github.com/QingWei-Li/babel-plugin-component">babel-plugin-component</a>，我们可以只引入需要的组件，以达到减小项目体积的目的。</p><p>首先，安装 babel-plugin-component：</p><pre><code class="hljs language-bash">npm install babel-plugin-component -D\n</code></pre><p>然后，将 .babelrc 修改为：</p><pre><code class="hljs language-json">{\n  <span class="hljs-attr">&quot;presets&quot;</span>: [[<span class="hljs-string">&quot;es2015&quot;</span>, { <span class="hljs-attr">&quot;modules&quot;</span>: <span class="hljs-literal">false</span> }]],\n  <span class="hljs-attr">&quot;plugins&quot;</span>: [\n    [\n      <span class="hljs-string">&quot;component&quot;</span>,\n      {\n        <span class="hljs-attr">&quot;libraryName&quot;</span>: <span class="hljs-string">&quot;element-plus&quot;</span>,\n        <span class="hljs-attr">&quot;styleLibraryName&quot;</span>: <span class="hljs-string">&quot;theme-chalk&quot;</span>\n      }\n    ]\n  ]\n}\n</code></pre><p>接下来，如果你只希望引入部分组件，比如 Button 和 Select，那么需要在 main.js 中写入以下内容：</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { Button, Select } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\n<span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;./App.vue&#39;</span>;\n\nVue.component(Button.name, Button);\nVue.component(Select.name, Select);\n<span class="hljs-comment">/* 或写为\n * Vue.use(Button)\n * Vue.use(Select)\n */</span>\n\n<span class="hljs-keyword">new</span> Vue({\n  <span class="hljs-attr">el</span>: <span class="hljs-string">&#39;#app&#39;</span>,\n  <span class="hljs-attr">render</span>: <span class="hljs-function"><span class="hljs-params">h</span> =&gt;</span> h(App)\n});\n</code></pre><p>完整组件列表和引入方式（完整组件列表以 <a href="https://github.com/ElemeFE/element/blob/master/components.json">components.json</a> 为准）</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> {\n  Pagination,\n  Dialog,\n  Autocomplete,\n  Dropdown,\n  DropdownMenu,\n  DropdownItem,\n  Menu,\n  Submenu,\n  MenuItem,\n  MenuItemGroup,\n  Input,\n  InputNumber,\n  Radio,\n  RadioGroup,\n  RadioButton,\n  Checkbox,\n  CheckboxButton,\n  CheckboxGroup,\n  Switch,\n  Select,\n  Option,\n  OptionGroup,\n  Button,\n  ButtonGroup,\n  Table,\n  TableColumn,\n  DatePicker,\n  TimeSelect,\n  TimePicker,\n  Popover,\n  Tooltip,\n  Breadcrumb,\n  BreadcrumbItem,\n  Form,\n  FormItem,\n  Tabs,\n  TabPane,\n  Tag,\n  Tree,\n  Alert,\n  Slider,\n  Icon,\n  Row,\n  Col,\n  Upload,\n  Progress,\n  Spinner,\n  Badge,\n  Card,\n  Rate,\n  Steps,\n  Step,\n  Carousel,\n  CarouselItem,\n  Collapse,\n  CollapseItem,\n  Cascader,\n  ColorPicker,\n  Transfer,\n  Container,\n  Header,\n  Aside,\n  Main,\n  Footer,\n  Timeline,\n  TimelineItem,\n  Link,\n  Divider,\n  Image,\n  Calendar,\n  Backtop,\n  PageHeader,\n  CascaderPanel,\n  Loading,\n  MessageBox,\n  Message,\n  Notification\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\n\nVue.use(Pagination);\nVue.use(Dialog);\nVue.use(Autocomplete);\nVue.use(Dropdown);\nVue.use(DropdownMenu);\nVue.use(DropdownItem);\nVue.use(Menu);\nVue.use(Submenu);\nVue.use(MenuItem);\nVue.use(MenuItemGroup);\nVue.use(Input);\nVue.use(InputNumber);\nVue.use(Radio);\nVue.use(RadioGroup);\nVue.use(RadioButton);\nVue.use(Checkbox);\nVue.use(CheckboxButton);\nVue.use(CheckboxGroup);\nVue.use(Switch);\nVue.use(Select);\nVue.use(Option);\nVue.use(OptionGroup);\nVue.use(Button);\nVue.use(ButtonGroup);\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(DatePicker);\nVue.use(TimeSelect);\nVue.use(TimePicker);\nVue.use(Popover);\nVue.use(Tooltip);\nVue.use(Breadcrumb);\nVue.use(BreadcrumbItem);\nVue.use(Form);\nVue.use(FormItem);\nVue.use(Tabs);\nVue.use(TabPane);\nVue.use(Tag);\nVue.use(Tree);\nVue.use(Alert);\nVue.use(Slider);\nVue.use(Icon);\nVue.use(Row);\nVue.use(Col);\nVue.use(Upload);\nVue.use(Progress);\nVue.use(Spinner);\nVue.use(Badge);\nVue.use(Card);\nVue.use(Rate);\nVue.use(Steps);\nVue.use(Step);\nVue.use(Carousel);\nVue.use(CarouselItem);\nVue.use(Collapse);\nVue.use(CollapseItem);\nVue.use(Cascader);\nVue.use(ColorPicker);\nVue.use(Transfer);\nVue.use(Container);\nVue.use(Header);\nVue.use(Aside);\nVue.use(Main);\nVue.use(Footer);\nVue.use(Timeline);\nVue.use(TimelineItem);\nVue.use(Link);\nVue.use(Divider);\nVue.use(Image);\nVue.use(Calendar);\nVue.use(Backtop);\nVue.use(PageHeader);\nVue.use(CascaderPanel);\n\nVue.use(Loading.directive);\n\nVue.prototype.$loading = Loading.service;\nVue.prototype.$msgbox = MessageBox;\nVue.prototype.$alert = MessageBox.alert;\nVue.prototype.$confirm = MessageBox.confirm;\nVue.prototype.$prompt = MessageBox.prompt;\nVue.prototype.$notify = Notification;\nVue.prototype.$message = Message;\n</code></pre><h3 id="quan-ju-pei-zhi"><a class="header-anchor" href="#quan-ju-pei-zhi">¶</a> 全局配置</h3><p>在引入 Element Plus 时，可以传入一个全局配置对象。该对象目前支持 <code>size</code> 与 <code>zIndex</code> 字段。<code>size</code> 用于改变组件的默认尺寸，<code>zIndex</code> 设置弹框的初始 z-index（默认值：2000）。按照引入 Element Plus 的方式，具体操作如下：</p><p>完整引入 Element：</p><pre><code class="hljs language-js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> ElementPlus <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\nVue.use(Element, { <span class="hljs-attr">size</span>: <span class="hljs-string">&#39;small&#39;</span>, <span class="hljs-attr">zIndex</span>: <span class="hljs-number">3000</span> });\n</code></pre><p>按需引入 Element：</p><pre><code class="hljs language-js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { Button } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\n\nVue.prototype.$ELEMENT = { <span class="hljs-attr">size</span>: <span class="hljs-string">&#39;small&#39;</span>, <span class="hljs-attr">zIndex</span>: <span class="hljs-number">3000</span> };\nVue.use(Button);\n</code></pre><p>按照以上设置，项目中所有拥有 <code>size</code> 属性的组件的默认尺寸均为 &#39;small&#39;，弹框的初始 z-index 为 3000。</p><h3 id="kai-shi-shi-yong"><a class="header-anchor" href="#kai-shi-shi-yong">¶</a> 开始使用</h3><p>至此，一个基于 Vue 和 Element Plus 的开发环境已经搭建完毕，现在就可以编写代码了。各个组件的使用方法请参阅它们各自的文档。</p><h3 id="shi-yong-nuxt.js"><a class="header-anchor" href="#shi-yong-nuxt.js">¶</a> 使用 Nuxt.js</h3><p>我们还可以使用 <a href="https://nuxtjs.org">Nuxt.js</a>：</p><div class="glitch-embed-wrap" style="height:420px;width:100%;"><iframe src="https://glitch.com/embed/#!/embed/nuxt-with-element?path=nuxt.config.js&amp;previewSize=0&amp;attributionHidden=true" alt="nuxt-with-element on glitch" style="height:100%;width:100%;border:0;"></iframe></div>',35);const t={render:function(e,s,n,t,l,o){return Object(a.openBlock)(),Object(a.createBlock)("section",u,[p])}};s.default=t}}]);