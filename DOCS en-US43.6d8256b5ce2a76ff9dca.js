(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{670:function(e,s,n){"use strict";n.r(s);var a=n(0);const t={class:"content element-doc"},o=Object(a.createStaticVNode)('<h2 id="quick-start"><a class="header-anchor" href="#quick-start">¶</a> Quick start</h2><p>This part walks you through the process of using Element Plus in a webpack project.</p><h3 id="use-vue-cli-4.5"><a class="header-anchor" href="#use-vue-cli-4.5">¶</a> Use vue-cli@4.5</h3><p>We provide an <a href="https://github.com/element-plus/vue-cli-plugin-element-plus">Element Plus plugin</a> for vue-cli@4.5, which you can use to quickly build an Element-based project.</p><h3 id="use-starter-kit"><a class="header-anchor" href="#use-starter-kit">¶</a> Use Starter Kit</h3><p>We provide a general <a href="https://github.com/element-plus/element-plus-starter">project template</a> for you, and also a Vite <a href="https://github.com/element-plus/element-plus-vite-starter">template</a>. For Laravel users, we have a <a href="https://github.com/element-plus/element-plus-in-laravel-starter">template</a> here. You can download and use them directly.</p><p>If you prefer not to use them, please read the following.</p><h3 id="import-element-plus"><a class="header-anchor" href="#import-element-plus">¶</a> Import Element Plus</h3><p>You can import ElementPlus entirely, or just import what you need. Let&#39;s start with fully import.</p><h4 id="fully-import"><a class="header-anchor" href="#fully-import">¶</a> Fully import</h4><p>In main.js:</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> { createApp, Vue } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> ElementPlus <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\n<span class="hljs-keyword">import</span> <span class="hljs-string">&#39;element-plus/lib/theme-chalk/index.css&#39;</span>;\n<span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;./App.vue&#39;</span>;\n\n<span class="hljs-keyword">const</span> app = createApp(App)\napp.use(ElementPlus)\napp.mount(<span class="hljs-string">&#39;#app&#39;</span>)\n</code></pre><p>The above imports Element Plus entirely. Note that CSS file needs to be imported separately.</p><h4 id="on-demand"><a class="header-anchor" href="#on-demand">¶</a> On demand</h4><p>With the help of <a href="https://github.com/QingWei-Li/babel-plugin-component">babel-plugin-component</a>, we can import components we actually need, making the project smaller than otherwise.</p><p>First, install babel-plugin-component:</p><pre><code class="hljs language-bash">npm install babel-plugin-component -D\n</code></pre><p>Then edit .babelrc:</p><pre><code class="hljs language-json">{\n  <span class="hljs-attr">&quot;presets&quot;</span>: [[<span class="hljs-string">&quot;es2015&quot;</span>, { <span class="hljs-attr">&quot;modules&quot;</span>: <span class="hljs-literal">false</span> }]],\n  <span class="hljs-attr">&quot;plugins&quot;</span>: [\n    [\n      <span class="hljs-string">&quot;component&quot;</span>,\n      {\n        <span class="hljs-attr">&quot;libraryName&quot;</span>: <span class="hljs-string">&quot;element-plus&quot;</span>,\n        <span class="hljs-attr">&quot;styleLibraryName&quot;</span>: <span class="hljs-string">&quot;theme-chalk&quot;</span>\n      }\n    ]\n  ]\n}\n</code></pre><p>Next, if you need Button and Select, edit main.js:</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { Button, Select } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\n<span class="hljs-keyword">import</span> App <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;./App.vue&#39;</span>;\n\nVue.component(Button.name, Button);\nVue.component(Select.name, Select);\n<span class="hljs-comment">/* or\n * Vue.use(Button)\n * Vue.use(Select)\n */</span>\n\n<span class="hljs-keyword">new</span> Vue({\n  <span class="hljs-attr">el</span>: <span class="hljs-string">&#39;#app&#39;</span>,\n  <span class="hljs-attr">render</span>: <span class="hljs-function"><span class="hljs-params">h</span> =&gt;</span> h(App)\n});\n</code></pre><p>Full example (Component list reference <a href="https://github.com/ElemeFE/element/blob/master/components.json">components.json</a>)</p><pre><code class="hljs language-javascript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> {\n  Pagination,\n  Dialog,\n  Autocomplete,\n  Dropdown,\n  DropdownMenu,\n  DropdownItem,\n  Menu,\n  Submenu,\n  MenuItem,\n  MenuItemGroup,\n  Input,\n  InputNumber,\n  Radio,\n  RadioGroup,\n  RadioButton,\n  Checkbox,\n  CheckboxButton,\n  CheckboxGroup,\n  Switch,\n  Select,\n  Option,\n  OptionGroup,\n  Button,\n  ButtonGroup,\n  Table,\n  TableColumn,\n  DatePicker,\n  TimeSelect,\n  TimePicker,\n  Popover,\n  Tooltip,\n  Breadcrumb,\n  BreadcrumbItem,\n  Form,\n  FormItem,\n  Tabs,\n  TabPane,\n  Tag,\n  Tree,\n  Alert,\n  Slider,\n  Icon,\n  Row,\n  Col,\n  Upload,\n  Progress,\n  Spinner,\n  Badge,\n  Card,\n  Rate,\n  Steps,\n  Step,\n  Carousel,\n  CarouselItem,\n  Collapse,\n  CollapseItem,\n  Cascader,\n  ColorPicker,\n  Transfer,\n  Container,\n  Header,\n  Aside,\n  Main,\n  Footer,\n  Timeline,\n  TimelineItem,\n  Link,\n  Divider,\n  Image,\n  Calendar,\n  Backtop,\n  PageHeader,\n  CascaderPanel,\n  Loading,\n  MessageBox,\n  Message,\n  Notification\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\n\nVue.use(Pagination);\nVue.use(Dialog);\nVue.use(Autocomplete);\nVue.use(Dropdown);\nVue.use(DropdownMenu);\nVue.use(DropdownItem);\nVue.use(Menu);\nVue.use(Submenu);\nVue.use(MenuItem);\nVue.use(MenuItemGroup);\nVue.use(Input);\nVue.use(InputNumber);\nVue.use(Radio);\nVue.use(RadioGroup);\nVue.use(RadioButton);\nVue.use(Checkbox);\nVue.use(CheckboxButton);\nVue.use(CheckboxGroup);\nVue.use(Switch);\nVue.use(Select);\nVue.use(Option);\nVue.use(OptionGroup);\nVue.use(Button);\nVue.use(ButtonGroup);\nVue.use(Table);\nVue.use(TableColumn);\nVue.use(DatePicker);\nVue.use(TimeSelect);\nVue.use(TimePicker);\nVue.use(Popover);\nVue.use(Tooltip);\nVue.use(Breadcrumb);\nVue.use(BreadcrumbItem);\nVue.use(Form);\nVue.use(FormItem);\nVue.use(Tabs);\nVue.use(TabPane);\nVue.use(Tag);\nVue.use(Tree);\nVue.use(Alert);\nVue.use(Slider);\nVue.use(Icon);\nVue.use(Row);\nVue.use(Col);\nVue.use(Upload);\nVue.use(Progress);\nVue.use(Spinner);\nVue.use(Badge);\nVue.use(Card);\nVue.use(Rate);\nVue.use(Steps);\nVue.use(Step);\nVue.use(Carousel);\nVue.use(CarouselItem);\nVue.use(Collapse);\nVue.use(CollapseItem);\nVue.use(Cascader);\nVue.use(ColorPicker);\nVue.use(Transfer);\nVue.use(Container);\nVue.use(Header);\nVue.use(Aside);\nVue.use(Main);\nVue.use(Footer);\nVue.use(Timeline);\nVue.use(TimelineItem);\nVue.use(Link);\nVue.use(Divider);\nVue.use(Image);\nVue.use(Calendar);\nVue.use(Backtop);\nVue.use(PageHeader);\nVue.use(CascaderPanel);\n\nVue.use(Loading.directive);\n\nVue.prototype.$loading = Loading.service;\nVue.prototype.$msgbox = MessageBox;\nVue.prototype.$alert = MessageBox.alert;\nVue.prototype.$confirm = MessageBox.confirm;\nVue.prototype.$prompt = MessageBox.prompt;\nVue.prototype.$notify = Notification;\nVue.prototype.$message = Message;\n</code></pre><h3 id="global-config"><a class="header-anchor" href="#global-config">¶</a> Global config</h3><p>When importing Element, you can define a global config object. For now this object has two properties: <code>size</code> and <code>zIndex</code>. The property <code>size</code> sets the default size for all components and the property <code>zIndex</code> sets the initial z-index (default: 2000) for modal boxes:</p><p>Fully import Element：</p><pre><code class="hljs language-js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> ElementPlus <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\nVue.use(Element, { <span class="hljs-attr">size</span>: <span class="hljs-string">&#39;small&#39;</span>, <span class="hljs-attr">zIndex</span>: <span class="hljs-number">3000</span> });\n</code></pre><p>Partial import Element：</p><pre><code class="hljs language-js"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>;\n<span class="hljs-keyword">import</span> { Button } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;element-plus&#39;</span>;\n\nVue.prototype.$ELEMENT = { <span class="hljs-attr">size</span>: <span class="hljs-string">&#39;small&#39;</span>, <span class="hljs-attr">zIndex</span>: <span class="hljs-number">3000</span> };\nVue.use(Button);\n</code></pre><p>With the above config, the default size of all components that have size attribute will be &#39;small&#39;, and the initial z-index of modal boxes is 3000.</p><h3 id="start-coding"><a class="header-anchor" href="#start-coding">¶</a> Start coding</h3><p>Now you have implemented Vue and Element Plus to your project, and it&#39;s time to write your code. Please refer to each component&#39;s documentation to learn how to use them.</p><h3 id="use-nuxt.js"><a class="header-anchor" href="#use-nuxt.js">¶</a> Use Nuxt.js</h3><p>We can also start a project using <a href="https://nuxtjs.org/">Nuxt.js</a>:</p><div class="glitch-embed-wrap" style="height:420px;width:100%;"><iframe src="https://glitch.com/embed/#!/embed/nuxt-with-element?path=nuxt.config.js&amp;previewSize=0&amp;attributionHidden=true" alt="nuxt-with-element on glitch" style="height:100%;width:100%;border:0;"></iframe></div>',35);const l={render:function(e,s,n,l,p,u){return Object(a.openBlock)(),Object(a.createBlock)("section",t,[o])}};s.default=l}}]);